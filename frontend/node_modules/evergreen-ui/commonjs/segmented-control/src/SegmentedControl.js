"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = _interopRequireWildcard(require("ui-box"));

var _SegmentedControlRadio = _interopRequireDefault(require("./SegmentedControlRadio"));

var radioCount = 1; // Used for generating unique input names

var SegmentedControl =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(SegmentedControl, _PureComponent);

  function SegmentedControl(props, context) {
    var _this;

    (0, _classCallCheck2.default)(this, SegmentedControl);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SegmentedControl).call(this, props, context));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "isControlled", function () {
      return typeof _this.props.value !== 'undefined' && _this.props.value !== null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "handleChange", function (value) {
      // Save a render cycle when it's a controlled input
      if (!_this.isControlled()) {
        _this.setState({
          value: value
        });
      }

      if (typeof _this.props.onChange === 'function') {
        _this.props.onChange(value);
      }
    });
    var _value = props.defaultValue;

    if (typeof _value === 'undefined' || _value === null) {
      _value = props.options[0].value;
    }

    _this.state = {
      value: _value
    };
    _this.name = "SegmentedControl-".concat(radioCount);
    radioCount += 1;
    return _this;
  }

  (0, _createClass2.default)(SegmentedControl, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          filterOutValue = _this$props.value,
          name = _this$props.name,
          height = _this$props.height,
          options = _this$props.options,
          onChange = _this$props.onChange,
          defaultValue = _this$props.defaultValue,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["value", "name", "height", "options", "onChange", "defaultValue"]); // Allows it to behave like a controlled input

      var value = this.state.value;

      if (this.isControlled()) {
        value = this.props.value;
      }

      return _react.default.createElement(_uiBox.default, (0, _extends2.default)({
        display: "flex",
        marginRight: -1,
        height: height
      }, props), options.map(function (option, index) {
        return _react.default.createElement(_SegmentedControlRadio.default, {
          key: option.value,
          id: _this2.name + index,
          name: name || _this2.name,
          label: option.label,
          value: String(option.value),
          height: height,
          checked: value === option.value,
          onChange: _this2.handleChange.bind(null, option.value),
          appearance: "default",
          isFirstItem: index === 0,
          isLastItem: index === options.length - 1
        });
      }));
    }
  }]);
  return SegmentedControl;
}(_react.PureComponent);

exports.default = SegmentedControl;
SegmentedControl.displayName = "SegmentedControl";
(0, _defineProperty2.default)(SegmentedControl, "propTypes", (0, _objectSpread2.default)({}, _uiBox.spacing.propTypes, _uiBox.position.propTypes, _uiBox.layout.propTypes, _uiBox.dimensions.propTypes, {
  /**
   * The options for the radios of the Segmented Control.
   */
  options: _propTypes.default.arrayOf(_propTypes.default.shape({
    label: _propTypes.default.node.isRequired,
    value: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.bool]).isRequired
  })).isRequired,

  /**
   * The current value of the Segmented Control when controlled.
   */
  value: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.bool]),

  /**
   * The default value of the Segmented Control when uncontrolled.
   */
  defaultValue: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.bool]),

  /**
   * Function called when the value changes.
   */
  onChange: _propTypes.default.func,

  /**
   * The name of the radio group.
   */
  name: _propTypes.default.string,

  /**
   * The height of the Segmented Control.
   */
  height: _propTypes.default.number
}));
(0, _defineProperty2.default)(SegmentedControl, "defaultProps", {
  height: 32
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,