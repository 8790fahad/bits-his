"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CLASS_PREFIX = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = _interopRequireDefault(require("ui-box"));

var _buttons = require("../../buttons");

var _textInput = require("../../text-input");

var CLASS_PREFIX = 'evergreen-file-picker';
exports.CLASS_PREFIX = CLASS_PREFIX;

var FilePicker =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(FilePicker, _PureComponent);

  function FilePicker() {
    var _this;

    (0, _classCallCheck2.default)(this, FilePicker);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FilePicker).call(this));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "fileInputRef", function (node) {
      _this.fileInput = node;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "handleFileChange", function (e) {
      var onChange = _this.props.onChange; // Firefox returns the same array instance each time for some reason

      var files = (0, _toConsumableArray2.default)(e.target.files);

      _this.setState({
        files: files
      });

      if (onChange) {
        onChange(files);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "handleButtonClick", function () {
      _this.fileInput.click();
    });
    _this.state = {
      files: []
    };
    return _this;
  }

  (0, _createClass2.default)(FilePicker, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          name = _this$props.name,
          accept = _this$props.accept,
          required = _this$props.required,
          multiple = _this$props.multiple,
          disabled = _this$props.disabled,
          capture = _this$props.capture,
          height = _this$props.height,
          onChange = _this$props.onChange,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["name", "accept", "required", "multiple", "disabled", "capture", "height", "onChange"]);
      var files = this.state.files;
      var inputValue;

      if (files.length === 0) {
        inputValue = '';
      } else if (files.length === 1) {
        inputValue = files[0].name;
      } else {
        inputValue = "".concat(files.length, " files");
      }

      var buttonText;

      if (files.length === 0) {
        buttonText = 'Select file';
      } else if (files.length === 1) {
        buttonText = 'Replace file';
      } else {
        buttonText = 'Replace files';
      }

      return _react.default.createElement(_uiBox.default, (0, _extends2.default)({
        display: "flex",
        className: "".concat(CLASS_PREFIX, "-root")
      }, props), _react.default.createElement(_uiBox.default, {
        innerRef: this.fileInputRef,
        className: "".concat(CLASS_PREFIX, "-file-input"),
        is: "input",
        type: "file",
        name: name,
        accept: accept,
        required: required,
        multiple: multiple,
        disabled: disabled,
        capture: capture,
        onChange: this.handleFileChange,
        display: "none"
      }), _react.default.createElement(_textInput.TextInput, {
        className: "".concat(CLASS_PREFIX, "-text-input"),
        readOnly: true,
        value: inputValue,
        placeholder: "Select a file to upload\u2026" // There's a weird specifity issue when there's two differently sized inputs on the page
        ,
        borderTopRightRadius: "0 !important",
        borderBottomRightRadius: "0 !important",
        height: height,
        flex: 1,
        textOverflow: "ellipsis"
      }), _react.default.createElement(_buttons.Button, {
        className: "".concat(CLASS_PREFIX, "-button"),
        onClick: this.handleButtonClick,
        disabled: disabled,
        borderTopLeftRadius: 0,
        borderBottomLeftRadius: 0,
        height: height,
        flexShrink: 0
      }, buttonText));
    }
  }]);
  return FilePicker;
}(_react.PureComponent);

exports.default = FilePicker;
FilePicker.displayName = "FilePicker";
(0, _defineProperty2.default)(FilePicker, "propTypes", {
  /**
   * Name attribute of the input.
   */
  name: _propTypes.default.string,

  /**
   * The accept attribute of the input.
   */
  accept: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]),

  /**
   * When true, the file picker is required.
   */
  required: _propTypes.default.bool,

  /**
   * When true, accept multiple files.
   */
  multiple: _propTypes.default.bool,

  /**
   * When true, the filepicker is disabled.
   */
  disabled: _propTypes.default.bool,

  /**
   * The capture attribute of the input.
   */
  capture: _propTypes.default.bool,

  /**
   * The height of the file picker.
   */
  height: _propTypes.default.number,

  /**
   * Function called when onChange is fired
   */
  onChange: _propTypes.default.func
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,