"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundationalStyles = require("./foundational-styles");

var _typography = require("./typography");

var _componentSpecific = require("./component-specific");

var _themeHelpers = require("./theme-helpers");

/**
 * Theme
 * ---
 * The theme object is used to style Evergreen.
 * It is passed into the  `<ThemeProvider theme={theme} />`.
 * ----
 * You can use this as a template for your own themes.
 */

/**
 * Foundational Styles.
 * ---
 * The following properties are NOT REQUIRED by Evergreen.
 * It's exposed for convenience and documentation.
 */

/**
 * Typography.
 * ---
 * The following properties are NOT REQUIRED by Evergreen.
 * It's exposed for convenience and documentation.
 */

/**
 * Component Specific.
 * ---
 * These ARE REQUIRED for Evergreen to work.
 */

/**
 * Theme Helpers.
 * ---
 * These ARE REQUIRED for Evergreen to work.
 */
var _default = {
  // Foundational Styles.
  colors: _foundationalStyles.colors,
  elevations: _foundationalStyles.elevations,
  fills: _foundationalStyles.fills,
  palette: _foundationalStyles.palette,
  scales: _foundationalStyles.scales,
  // Component Specific.
  avatarColors: _componentSpecific.avatarColors,
  badgeColors: _componentSpecific.badgeColors,
  spinnerColor: _componentSpecific.spinnerColor,
  overlayBackgroundColor: _componentSpecific.overlayBackgroundColor,
  getButtonClassName: _componentSpecific.getButtonClassName,
  getLinkClassName: _componentSpecific.getLinkClassName,
  getCheckboxClassName: _componentSpecific.getCheckboxClassName,
  getRadioClassName: _componentSpecific.getRadioClassName,
  getTextInputClassName: _componentSpecific.getTextInputClassName,
  getTextareaClassName: _componentSpecific.getTextareaClassName,
  getTextDropdownButtonClassName: _componentSpecific.getTextDropdownButtonClassName,
  getTabClassName: _componentSpecific.getTabClassName,
  getTableCellClassName: _componentSpecific.getTableCellClassName,
  getTooltipProps: _componentSpecific.getTooltipProps,
  getRowClassName: _componentSpecific.getRowClassName,
  getMenuItemClassName: _componentSpecific.getMenuItemClassName,
  getSelectClassName: _componentSpecific.getSelectClassName,
  getSegmentedControlRadioClassName: _componentSpecific.getSegmentedControlRadioClassName,
  getSwitchClassName: _componentSpecific.getSwitchClassName,
  getAlertProps: _componentSpecific.getAlertProps,
  getCodeProps: _componentSpecific.getCodeProps,
  getAvatarProps: _componentSpecific.getAvatarProps,
  getBadgeProps: _componentSpecific.getBadgeProps,
  getAvatarInitialsFontSize: _componentSpecific.getAvatarInitialsFontSize,
  // Theme Helpers.
  getBorderRadiusForControlHeight: _themeHelpers.getBorderRadiusForControlHeight,
  getTextSizeForControlHeight: _themeHelpers.getTextSizeForControlHeight,
  getIconSizeForButton: _themeHelpers.getIconSizeForButton,
  getIconSizeForInput: _themeHelpers.getIconSizeForInput,
  getIconSizeForSelect: _themeHelpers.getIconSizeForSelect,
  getIconSizeForIconButton: _themeHelpers.getIconSizeForIconButton,
  getBackground: _themeHelpers.getBackground,
  getElevation: _themeHelpers.getElevation,
  getIconColor: _themeHelpers.getIconColor,
  getIconForIntent: _themeHelpers.getIconForIntent,
  getHeadingStyle: _themeHelpers.getHeadingStyle,
  getTextStyle: _themeHelpers.getTextStyle,
  getParagraphStyle: _themeHelpers.getParagraphStyle,
  getFontFamily: _themeHelpers.getFontFamily,
  getTextColor: _themeHelpers.getTextColor,
  typography: {
    headings: _typography.headings,
    text: _typography.text,
    fontFamilies: _typography.fontFamilies,
    paragraph: _typography.paragraph
  }
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90aGVtZS9zcmMvZGVmYXVsdC10aGVtZS9pbmRleC5qcyJdLCJuYW1lcyI6WyJjb2xvcnMiLCJlbGV2YXRpb25zIiwiZmlsbHMiLCJwYWxldHRlIiwic2NhbGVzIiwiYXZhdGFyQ29sb3JzIiwiYmFkZ2VDb2xvcnMiLCJzcGlubmVyQ29sb3IiLCJvdmVybGF5QmFja2dyb3VuZENvbG9yIiwiZ2V0QnV0dG9uQ2xhc3NOYW1lIiwiZ2V0TGlua0NsYXNzTmFtZSIsImdldENoZWNrYm94Q2xhc3NOYW1lIiwiZ2V0UmFkaW9DbGFzc05hbWUiLCJnZXRUZXh0SW5wdXRDbGFzc05hbWUiLCJnZXRUZXh0YXJlYUNsYXNzTmFtZSIsImdldFRleHREcm9wZG93bkJ1dHRvbkNsYXNzTmFtZSIsImdldFRhYkNsYXNzTmFtZSIsImdldFRhYmxlQ2VsbENsYXNzTmFtZSIsImdldFRvb2x0aXBQcm9wcyIsImdldFJvd0NsYXNzTmFtZSIsImdldE1lbnVJdGVtQ2xhc3NOYW1lIiwiZ2V0U2VsZWN0Q2xhc3NOYW1lIiwiZ2V0U2VnbWVudGVkQ29udHJvbFJhZGlvQ2xhc3NOYW1lIiwiZ2V0U3dpdGNoQ2xhc3NOYW1lIiwiZ2V0QWxlcnRQcm9wcyIsImdldENvZGVQcm9wcyIsImdldEF2YXRhclByb3BzIiwiZ2V0QmFkZ2VQcm9wcyIsImdldEF2YXRhckluaXRpYWxzRm9udFNpemUiLCJnZXRCb3JkZXJSYWRpdXNGb3JDb250cm9sSGVpZ2h0IiwiZ2V0VGV4dFNpemVGb3JDb250cm9sSGVpZ2h0IiwiZ2V0SWNvblNpemVGb3JCdXR0b24iLCJnZXRJY29uU2l6ZUZvcklucHV0IiwiZ2V0SWNvblNpemVGb3JTZWxlY3QiLCJnZXRJY29uU2l6ZUZvckljb25CdXR0b24iLCJnZXRCYWNrZ3JvdW5kIiwiZ2V0RWxldmF0aW9uIiwiZ2V0SWNvbkNvbG9yIiwiZ2V0SWNvbkZvckludGVudCIsImdldEhlYWRpbmdTdHlsZSIsImdldFRleHRTdHlsZSIsImdldFBhcmFncmFwaFN0eWxlIiwiZ2V0Rm9udEZhbWlseSIsImdldFRleHRDb2xvciIsInR5cG9ncmFwaHkiLCJoZWFkaW5ncyIsInRleHQiLCJmb250RmFtaWxpZXMiLCJwYXJhZ3JhcGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFlQTs7QUFjQTs7QUFPQTs7QUFnQ0E7O0FBcEVBOzs7Ozs7Ozs7QUFTQTs7Ozs7OztBQWNBOzs7Ozs7O0FBUUE7Ozs7OztBQWdDQTs7Ozs7ZUF1QmU7QUFDYjtBQUNBQSxFQUFBQSxNQUFNLEVBQU5BLDBCQUZhO0FBR2JDLEVBQUFBLFVBQVUsRUFBVkEsOEJBSGE7QUFJYkMsRUFBQUEsS0FBSyxFQUFMQSx5QkFKYTtBQUtiQyxFQUFBQSxPQUFPLEVBQVBBLDJCQUxhO0FBTWJDLEVBQUFBLE1BQU0sRUFBTkEsMEJBTmE7QUFRYjtBQUNBQyxFQUFBQSxZQUFZLEVBQVpBLCtCQVRhO0FBVWJDLEVBQUFBLFdBQVcsRUFBWEEsOEJBVmE7QUFXYkMsRUFBQUEsWUFBWSxFQUFaQSwrQkFYYTtBQVliQyxFQUFBQSxzQkFBc0IsRUFBdEJBLHlDQVphO0FBYWJDLEVBQUFBLGtCQUFrQixFQUFsQkEscUNBYmE7QUFjYkMsRUFBQUEsZ0JBQWdCLEVBQWhCQSxtQ0FkYTtBQWViQyxFQUFBQSxvQkFBb0IsRUFBcEJBLHVDQWZhO0FBZ0JiQyxFQUFBQSxpQkFBaUIsRUFBakJBLG9DQWhCYTtBQWlCYkMsRUFBQUEscUJBQXFCLEVBQXJCQSx3Q0FqQmE7QUFrQmJDLEVBQUFBLG9CQUFvQixFQUFwQkEsdUNBbEJhO0FBbUJiQyxFQUFBQSw4QkFBOEIsRUFBOUJBLGlEQW5CYTtBQW9CYkMsRUFBQUEsZUFBZSxFQUFmQSxrQ0FwQmE7QUFxQmJDLEVBQUFBLHFCQUFxQixFQUFyQkEsd0NBckJhO0FBc0JiQyxFQUFBQSxlQUFlLEVBQWZBLGtDQXRCYTtBQXVCYkMsRUFBQUEsZUFBZSxFQUFmQSxrQ0F2QmE7QUF3QmJDLEVBQUFBLG9CQUFvQixFQUFwQkEsdUNBeEJhO0FBeUJiQyxFQUFBQSxrQkFBa0IsRUFBbEJBLHFDQXpCYTtBQTBCYkMsRUFBQUEsaUNBQWlDLEVBQWpDQSxvREExQmE7QUEyQmJDLEVBQUFBLGtCQUFrQixFQUFsQkEscUNBM0JhO0FBNEJiQyxFQUFBQSxhQUFhLEVBQWJBLGdDQTVCYTtBQTZCYkMsRUFBQUEsWUFBWSxFQUFaQSwrQkE3QmE7QUE4QmJDLEVBQUFBLGNBQWMsRUFBZEEsaUNBOUJhO0FBK0JiQyxFQUFBQSxhQUFhLEVBQWJBLGdDQS9CYTtBQWdDYkMsRUFBQUEseUJBQXlCLEVBQXpCQSw0Q0FoQ2E7QUFrQ2I7QUFDQUMsRUFBQUEsK0JBQStCLEVBQS9CQSw2Q0FuQ2E7QUFvQ2JDLEVBQUFBLDJCQUEyQixFQUEzQkEseUNBcENhO0FBcUNiQyxFQUFBQSxvQkFBb0IsRUFBcEJBLGtDQXJDYTtBQXNDYkMsRUFBQUEsbUJBQW1CLEVBQW5CQSxpQ0F0Q2E7QUF1Q2JDLEVBQUFBLG9CQUFvQixFQUFwQkEsa0NBdkNhO0FBd0NiQyxFQUFBQSx3QkFBd0IsRUFBeEJBLHNDQXhDYTtBQXlDYkMsRUFBQUEsYUFBYSxFQUFiQSwyQkF6Q2E7QUEwQ2JDLEVBQUFBLFlBQVksRUFBWkEsMEJBMUNhO0FBMkNiQyxFQUFBQSxZQUFZLEVBQVpBLDBCQTNDYTtBQTRDYkMsRUFBQUEsZ0JBQWdCLEVBQWhCQSw4QkE1Q2E7QUE2Q2JDLEVBQUFBLGVBQWUsRUFBZkEsNkJBN0NhO0FBOENiQyxFQUFBQSxZQUFZLEVBQVpBLDBCQTlDYTtBQStDYkMsRUFBQUEsaUJBQWlCLEVBQWpCQSwrQkEvQ2E7QUFnRGJDLEVBQUFBLGFBQWEsRUFBYkEsMkJBaERhO0FBaURiQyxFQUFBQSxZQUFZLEVBQVpBLDBCQWpEYTtBQW1EYkMsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLElBQUFBLFFBQVEsRUFBUkEsb0JBRFU7QUFFVkMsSUFBQUEsSUFBSSxFQUFKQSxnQkFGVTtBQUdWQyxJQUFBQSxZQUFZLEVBQVpBLHdCQUhVO0FBSVZDLElBQUFBLFNBQVMsRUFBVEE7QUFKVTtBQW5EQyxDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGVtZVxuICogLS0tXG4gKiBUaGUgdGhlbWUgb2JqZWN0IGlzIHVzZWQgdG8gc3R5bGUgRXZlcmdyZWVuLlxuICogSXQgaXMgcGFzc2VkIGludG8gdGhlICBgPFRoZW1lUHJvdmlkZXIgdGhlbWU9e3RoZW1lfSAvPmAuXG4gKiAtLS0tXG4gKiBZb3UgY2FuIHVzZSB0aGlzIGFzIGEgdGVtcGxhdGUgZm9yIHlvdXIgb3duIHRoZW1lcy5cbiAqL1xuXG4vKipcbiAqIEZvdW5kYXRpb25hbCBTdHlsZXMuXG4gKiAtLS1cbiAqIFRoZSBmb2xsb3dpbmcgcHJvcGVydGllcyBhcmUgTk9UIFJFUVVJUkVEIGJ5IEV2ZXJncmVlbi5cbiAqIEl0J3MgZXhwb3NlZCBmb3IgY29udmVuaWVuY2UgYW5kIGRvY3VtZW50YXRpb24uXG4gKi9cbmltcG9ydCB7XG4gIGNvbG9ycyxcbiAgZWxldmF0aW9ucyxcbiAgZmlsbHMsXG4gIHBhbGV0dGUsXG4gIHNjYWxlc1xufSBmcm9tICcuL2ZvdW5kYXRpb25hbC1zdHlsZXMnXG5cbi8qKlxuICogVHlwb2dyYXBoeS5cbiAqIC0tLVxuICogVGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzIGFyZSBOT1QgUkVRVUlSRUQgYnkgRXZlcmdyZWVuLlxuICogSXQncyBleHBvc2VkIGZvciBjb252ZW5pZW5jZSBhbmQgZG9jdW1lbnRhdGlvbi5cbiAqL1xuaW1wb3J0IHsgaGVhZGluZ3MsIHRleHQsIGZvbnRGYW1pbGllcywgcGFyYWdyYXBoIH0gZnJvbSAnLi90eXBvZ3JhcGh5J1xuXG4vKipcbiAqIENvbXBvbmVudCBTcGVjaWZpYy5cbiAqIC0tLVxuICogVGhlc2UgQVJFIFJFUVVJUkVEIGZvciBFdmVyZ3JlZW4gdG8gd29yay5cbiAqL1xuaW1wb3J0IHtcbiAgYXZhdGFyQ29sb3JzLFxuICBiYWRnZUNvbG9ycyxcbiAgc3Bpbm5lckNvbG9yLFxuICBvdmVybGF5QmFja2dyb3VuZENvbG9yLFxuICBnZXRCdXR0b25DbGFzc05hbWUsXG4gIGdldExpbmtDbGFzc05hbWUsXG4gIGdldENoZWNrYm94Q2xhc3NOYW1lLFxuICBnZXRSYWRpb0NsYXNzTmFtZSxcbiAgZ2V0VGV4dElucHV0Q2xhc3NOYW1lLFxuICBnZXRUZXh0YXJlYUNsYXNzTmFtZSxcbiAgZ2V0VGV4dERyb3Bkb3duQnV0dG9uQ2xhc3NOYW1lLFxuICBnZXRUYWJDbGFzc05hbWUsXG4gIGdldFRhYmxlQ2VsbENsYXNzTmFtZSxcbiAgZ2V0VG9vbHRpcFByb3BzLFxuICBnZXRSb3dDbGFzc05hbWUsXG4gIGdldE1lbnVJdGVtQ2xhc3NOYW1lLFxuICBnZXRTZWxlY3RDbGFzc05hbWUsXG4gIGdldFNlZ21lbnRlZENvbnRyb2xSYWRpb0NsYXNzTmFtZSxcbiAgZ2V0U3dpdGNoQ2xhc3NOYW1lLFxuICBnZXRBbGVydFByb3BzLFxuICBnZXRDb2RlUHJvcHMsXG4gIGdldEF2YXRhclByb3BzLFxuICBnZXRCYWRnZVByb3BzLFxuICBnZXRBdmF0YXJJbml0aWFsc0ZvbnRTaXplXG59IGZyb20gJy4vY29tcG9uZW50LXNwZWNpZmljJ1xuXG4vKipcbiAqIFRoZW1lIEhlbHBlcnMuXG4gKiAtLS1cbiAqIFRoZXNlIEFSRSBSRVFVSVJFRCBmb3IgRXZlcmdyZWVuIHRvIHdvcmsuXG4gKi9cbmltcG9ydCB7XG4gIGdldEJvcmRlclJhZGl1c0ZvckNvbnRyb2xIZWlnaHQsXG4gIGdldFRleHRTaXplRm9yQ29udHJvbEhlaWdodCxcbiAgZ2V0SWNvblNpemVGb3JCdXR0b24sXG4gIGdldEljb25TaXplRm9ySW5wdXQsXG4gIGdldEljb25TaXplRm9yU2VsZWN0LFxuICBnZXRJY29uU2l6ZUZvckljb25CdXR0b24sXG4gIGdldEJhY2tncm91bmQsXG4gIGdldEVsZXZhdGlvbixcbiAgZ2V0SWNvbkNvbG9yLFxuICBnZXRJY29uRm9ySW50ZW50LFxuICBnZXRIZWFkaW5nU3R5bGUsXG4gIGdldFRleHRTdHlsZSxcbiAgZ2V0UGFyYWdyYXBoU3R5bGUsXG4gIGdldEZvbnRGYW1pbHksXG4gIGdldFRleHRDb2xvclxufSBmcm9tICcuL3RoZW1lLWhlbHBlcnMnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgLy8gRm91bmRhdGlvbmFsIFN0eWxlcy5cbiAgY29sb3JzLFxuICBlbGV2YXRpb25zLFxuICBmaWxscyxcbiAgcGFsZXR0ZSxcbiAgc2NhbGVzLFxuXG4gIC8vIENvbXBvbmVudCBTcGVjaWZpYy5cbiAgYXZhdGFyQ29sb3JzLFxuICBiYWRnZUNvbG9ycyxcbiAgc3Bpbm5lckNvbG9yLFxuICBvdmVybGF5QmFja2dyb3VuZENvbG9yLFxuICBnZXRCdXR0b25DbGFzc05hbWUsXG4gIGdldExpbmtDbGFzc05hbWUsXG4gIGdldENoZWNrYm94Q2xhc3NOYW1lLFxuICBnZXRSYWRpb0NsYXNzTmFtZSxcbiAgZ2V0VGV4dElucHV0Q2xhc3NOYW1lLFxuICBnZXRUZXh0YXJlYUNsYXNzTmFtZSxcbiAgZ2V0VGV4dERyb3Bkb3duQnV0dG9uQ2xhc3NOYW1lLFxuICBnZXRUYWJDbGFzc05hbWUsXG4gIGdldFRhYmxlQ2VsbENsYXNzTmFtZSxcbiAgZ2V0VG9vbHRpcFByb3BzLFxuICBnZXRSb3dDbGFzc05hbWUsXG4gIGdldE1lbnVJdGVtQ2xhc3NOYW1lLFxuICBnZXRTZWxlY3RDbGFzc05hbWUsXG4gIGdldFNlZ21lbnRlZENvbnRyb2xSYWRpb0NsYXNzTmFtZSxcbiAgZ2V0U3dpdGNoQ2xhc3NOYW1lLFxuICBnZXRBbGVydFByb3BzLFxuICBnZXRDb2RlUHJvcHMsXG4gIGdldEF2YXRhclByb3BzLFxuICBnZXRCYWRnZVByb3BzLFxuICBnZXRBdmF0YXJJbml0aWFsc0ZvbnRTaXplLFxuXG4gIC8vIFRoZW1lIEhlbHBlcnMuXG4gIGdldEJvcmRlclJhZGl1c0ZvckNvbnRyb2xIZWlnaHQsXG4gIGdldFRleHRTaXplRm9yQ29udHJvbEhlaWdodCxcbiAgZ2V0SWNvblNpemVGb3JCdXR0b24sXG4gIGdldEljb25TaXplRm9ySW5wdXQsXG4gIGdldEljb25TaXplRm9yU2VsZWN0LFxuICBnZXRJY29uU2l6ZUZvckljb25CdXR0b24sXG4gIGdldEJhY2tncm91bmQsXG4gIGdldEVsZXZhdGlvbixcbiAgZ2V0SWNvbkNvbG9yLFxuICBnZXRJY29uRm9ySW50ZW50LFxuICBnZXRIZWFkaW5nU3R5bGUsXG4gIGdldFRleHRTdHlsZSxcbiAgZ2V0UGFyYWdyYXBoU3R5bGUsXG4gIGdldEZvbnRGYW1pbHksXG4gIGdldFRleHRDb2xvcixcblxuICB0eXBvZ3JhcGh5OiB7XG4gICAgaGVhZGluZ3MsXG4gICAgdGV4dCxcbiAgICBmb250RmFtaWxpZXMsXG4gICAgcGFyYWdyYXBoXG4gIH1cbn1cbiJdfQ==