"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread3 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _createAppearance = _interopRequireDefault(require("./createAppearance"));

var _missingStateWarning = _interopRequireDefault(require("./missingStateWarning"));

var hoverState = '&:hover';
var selectedState = '&[aria-current="page"], &[aria-selected="true"], &:active';
var currentState = '&[aria-current="page"], &[aria-selected="true"]';
var focusState = '&:focus';
var baseStyle = {
  cursor: 'pointer',
  outline: 'none'
  /**
   * @param {object} items - object with a set of states.
   * @return {object} the final appearance.
   */

};

var createTabAppearance = function createTabAppearance() {
  var _objectSpread2;

  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  (0, _missingStateWarning.default)({
    items: items,
    props: ['base', 'hover', 'active', 'focus', 'current'],
    cb: function cb(prop) {
      console.error("Themer.createTabAppearance() is missing a ".concat(prop, " item "), items);
    }
  });
  return (0, _objectSpread3.default)({}, baseStyle, (0, _createAppearance.default)(items.base), (_objectSpread2 = {}, (0, _defineProperty2.default)(_objectSpread2, hoverState, (0, _createAppearance.default)(items.hover)), (0, _defineProperty2.default)(_objectSpread2, focusState, (0, _createAppearance.default)(items.focus)), (0, _defineProperty2.default)(_objectSpread2, selectedState, (0, _createAppearance.default)(items.active)), (0, _defineProperty2.default)(_objectSpread2, currentState, (0, _objectSpread3.default)({
    cursor: 'default'
  }, (0, _createAppearance.default)(items.current))), _objectSpread2));
};

var _default = createTabAppearance;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90aGVtZXIvc3JjL2NyZWF0ZVRhYkFwcGVhcmFuY2UuanMiXSwibmFtZXMiOlsiaG92ZXJTdGF0ZSIsInNlbGVjdGVkU3RhdGUiLCJjdXJyZW50U3RhdGUiLCJmb2N1c1N0YXRlIiwiYmFzZVN0eWxlIiwiY3Vyc29yIiwib3V0bGluZSIsImNyZWF0ZVRhYkFwcGVhcmFuY2UiLCJpdGVtcyIsInByb3BzIiwiY2IiLCJwcm9wIiwiY29uc29sZSIsImVycm9yIiwiYmFzZSIsImhvdmVyIiwiZm9jdXMiLCJhY3RpdmUiLCJjdXJyZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsVUFBVSxHQUFHLFNBQW5CO0FBQ0EsSUFBTUMsYUFBYSxHQUNqQiwyREFERjtBQUVBLElBQU1DLFlBQVksR0FBRyxpREFBckI7QUFDQSxJQUFNQyxVQUFVLEdBQUcsU0FBbkI7QUFFQSxJQUFNQyxTQUFTLEdBQUc7QUFDaEJDLEVBQUFBLE1BQU0sRUFBRSxTQURRO0FBRWhCQyxFQUFBQSxPQUFPLEVBQUU7QUFHWDs7Ozs7QUFMa0IsQ0FBbEI7O0FBU0EsSUFBTUMsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFzQixHQUFnQjtBQUFBOztBQUFBLE1BQWZDLEtBQWUsdUVBQVAsRUFBTztBQUMxQyxvQ0FBb0I7QUFDbEJBLElBQUFBLEtBQUssRUFBTEEsS0FEa0I7QUFFbEJDLElBQUFBLEtBQUssRUFBRSxDQUFDLE1BQUQsRUFBUyxPQUFULEVBQWtCLFFBQWxCLEVBQTRCLE9BQTVCLEVBQXFDLFNBQXJDLENBRlc7QUFHbEJDLElBQUFBLEVBQUUsRUFBRSxZQUFBQyxJQUFJLEVBQUk7QUFDVkMsTUFBQUEsT0FBTyxDQUFDQyxLQUFSLHFEQUMrQ0YsSUFEL0MsYUFFRUgsS0FGRjtBQUlEO0FBUmlCLEdBQXBCO0FBV0EseUNBQ0tKLFNBREwsRUFFSywrQkFBaUJJLEtBQUssQ0FBQ00sSUFBdkIsQ0FGTCxzRUFHR2QsVUFISCxFQUdnQiwrQkFBaUJRLEtBQUssQ0FBQ08sS0FBdkIsQ0FIaEIsaURBSUdaLFVBSkgsRUFJZ0IsK0JBQWlCSyxLQUFLLENBQUNRLEtBQXZCLENBSmhCLGlEQUtHZixhQUxILEVBS21CLCtCQUFpQk8sS0FBSyxDQUFDUyxNQUF2QixDQUxuQixpREFNR2YsWUFOSDtBQU9JRyxJQUFBQSxNQUFNLEVBQUU7QUFQWixLQVFPLCtCQUFpQkcsS0FBSyxDQUFDVSxPQUF2QixDQVJQO0FBV0QsQ0F2QkQ7O2VBeUJlWCxtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVBcHBlYXJhbmNlIGZyb20gJy4vY3JlYXRlQXBwZWFyYW5jZSdcbmltcG9ydCBtaXNzaW5nU3RhdGVXYXJuaW5nIGZyb20gJy4vbWlzc2luZ1N0YXRlV2FybmluZydcblxuY29uc3QgaG92ZXJTdGF0ZSA9ICcmOmhvdmVyJ1xuY29uc3Qgc2VsZWN0ZWRTdGF0ZSA9XG4gICcmW2FyaWEtY3VycmVudD1cInBhZ2VcIl0sICZbYXJpYS1zZWxlY3RlZD1cInRydWVcIl0sICY6YWN0aXZlJ1xuY29uc3QgY3VycmVudFN0YXRlID0gJyZbYXJpYS1jdXJyZW50PVwicGFnZVwiXSwgJlthcmlhLXNlbGVjdGVkPVwidHJ1ZVwiXSdcbmNvbnN0IGZvY3VzU3RhdGUgPSAnJjpmb2N1cydcblxuY29uc3QgYmFzZVN0eWxlID0ge1xuICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgb3V0bGluZTogJ25vbmUnXG59XG5cbi8qKlxuICogQHBhcmFtIHtvYmplY3R9IGl0ZW1zIC0gb2JqZWN0IHdpdGggYSBzZXQgb2Ygc3RhdGVzLlxuICogQHJldHVybiB7b2JqZWN0fSB0aGUgZmluYWwgYXBwZWFyYW5jZS5cbiAqL1xuY29uc3QgY3JlYXRlVGFiQXBwZWFyYW5jZSA9IChpdGVtcyA9IHt9KSA9PiB7XG4gIG1pc3NpbmdTdGF0ZVdhcm5pbmcoe1xuICAgIGl0ZW1zLFxuICAgIHByb3BzOiBbJ2Jhc2UnLCAnaG92ZXInLCAnYWN0aXZlJywgJ2ZvY3VzJywgJ2N1cnJlbnQnXSxcbiAgICBjYjogcHJvcCA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICBgVGhlbWVyLmNyZWF0ZVRhYkFwcGVhcmFuY2UoKSBpcyBtaXNzaW5nIGEgJHtwcm9wfSBpdGVtIGAsXG4gICAgICAgIGl0ZW1zXG4gICAgICApXG4gICAgfVxuICB9KVxuXG4gIHJldHVybiB7XG4gICAgLi4uYmFzZVN0eWxlLFxuICAgIC4uLmNyZWF0ZUFwcGVhcmFuY2UoaXRlbXMuYmFzZSksXG4gICAgW2hvdmVyU3RhdGVdOiBjcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmhvdmVyKSxcbiAgICBbZm9jdXNTdGF0ZV06IGNyZWF0ZUFwcGVhcmFuY2UoaXRlbXMuZm9jdXMpLFxuICAgIFtzZWxlY3RlZFN0YXRlXTogY3JlYXRlQXBwZWFyYW5jZShpdGVtcy5hY3RpdmUpLFxuICAgIFtjdXJyZW50U3RhdGVdOiB7XG4gICAgICBjdXJzb3I6ICdkZWZhdWx0JyxcbiAgICAgIC4uLmNyZWF0ZUFwcGVhcmFuY2UoaXRlbXMuY3VycmVudClcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlVGFiQXBwZWFyYW5jZVxuIl19