"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread3 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _createAppearance = _interopRequireDefault(require("./createAppearance"));

var _missingStateWarning = _interopRequireDefault(require("./missingStateWarning"));

var defaultState = '& + div';
var disabledState = '&[disabled] + div';
var hoverState = '&:not([disabled]):hover + div';
var focusState = '&:not([disabled]):focus + div';
var activeState = '&:not([disabled]):active + div';
var checkedState = '&:checked + div, &[type=checkbox]:indeterminate + div';
var checkedHoverState = '&:not([disabled]):checked:hover + div, &[type=checkbox]:not([disabled]):indeterminate:hover + div';
var checkedActiveState = '&:not([disabled]):checked:active + div, &[type=checkbox]:not([disabled]):indeterminate:active + div';
var checkedDisabledState = '&[disabled]:checked + div, &[type=checkbox][disabled]:indeterminate + div';
var hiddenCheckboxStyle = {
  border: '0',
  clip: 'rect(1px, 1px, 1px, 1px)',
  height: '1',
  overflow: 'hidden',
  padding: '0',
  position: 'absolute',
  whiteSpace: 'nowrap',
  width: '1',
  opacity: '0'
};
var baseStyle = {
  WebkitFontSmoothing: 'antialiased',
  textDecoration: 'none',
  WebkitAppearance: 'none',
  border: 'none',
  outline: 'none',
  cursor: 'pointer'
};
var checkedStyles = {
  '& > svg': {
    display: 'block'
  }
  /**
   * @param {object} items - object with a set of items.
   * @return {object} the final appearance.
   */

};

var createCheckboxAppearance = function createCheckboxAppearance() {
  var _objectSpread2;

  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  (0, _missingStateWarning.default)({
    items: items,
    props: ['base', 'hover', 'focus', 'active', 'disabled', 'checked', 'checkedDisabled', 'checkedHover', 'checkedActive'],
    cb: function cb(prop) {
      console.error("Themer.createCheckboxAppearance() is missing a ".concat(prop, " state in items: "), items);
    }
  });
  return (0, _objectSpread3.default)({}, hiddenCheckboxStyle, (_objectSpread2 = {
    '& + div > svg': {
      display: 'none'
    }
  }, (0, _defineProperty2.default)(_objectSpread2, defaultState, (0, _objectSpread3.default)({}, baseStyle, (0, _createAppearance.default)(items.base))), (0, _defineProperty2.default)(_objectSpread2, hoverState, (0, _createAppearance.default)(items.hover)), (0, _defineProperty2.default)(_objectSpread2, focusState, (0, _createAppearance.default)(items.focus)), (0, _defineProperty2.default)(_objectSpread2, activeState, (0, _createAppearance.default)(items.active)), (0, _defineProperty2.default)(_objectSpread2, disabledState, (0, _createAppearance.default)(items.disabled)), (0, _defineProperty2.default)(_objectSpread2, checkedState, (0, _objectSpread3.default)({}, checkedStyles, (0, _createAppearance.default)(items.checked))), (0, _defineProperty2.default)(_objectSpread2, checkedHoverState, (0, _objectSpread3.default)({}, checkedStyles, (0, _createAppearance.default)(items.checkedHover))), (0, _defineProperty2.default)(_objectSpread2, checkedDisabledState, (0, _objectSpread3.default)({}, checkedStyles, (0, _createAppearance.default)(items.checkedDisabled))), (0, _defineProperty2.default)(_objectSpread2, checkedActiveState, (0, _objectSpread3.default)({}, checkedStyles, (0, _createAppearance.default)(items.checkedActive))), _objectSpread2));
};

var _default = createCheckboxAppearance;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90aGVtZXIvc3JjL2NyZWF0ZUNoZWNrYm94QXBwZWFyYW5jZS5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0U3RhdGUiLCJkaXNhYmxlZFN0YXRlIiwiaG92ZXJTdGF0ZSIsImZvY3VzU3RhdGUiLCJhY3RpdmVTdGF0ZSIsImNoZWNrZWRTdGF0ZSIsImNoZWNrZWRIb3ZlclN0YXRlIiwiY2hlY2tlZEFjdGl2ZVN0YXRlIiwiY2hlY2tlZERpc2FibGVkU3RhdGUiLCJoaWRkZW5DaGVja2JveFN0eWxlIiwiYm9yZGVyIiwiY2xpcCIsImhlaWdodCIsIm92ZXJmbG93IiwicGFkZGluZyIsInBvc2l0aW9uIiwid2hpdGVTcGFjZSIsIndpZHRoIiwib3BhY2l0eSIsImJhc2VTdHlsZSIsIldlYmtpdEZvbnRTbW9vdGhpbmciLCJ0ZXh0RGVjb3JhdGlvbiIsIldlYmtpdEFwcGVhcmFuY2UiLCJvdXRsaW5lIiwiY3Vyc29yIiwiY2hlY2tlZFN0eWxlcyIsImRpc3BsYXkiLCJjcmVhdGVDaGVja2JveEFwcGVhcmFuY2UiLCJpdGVtcyIsInByb3BzIiwiY2IiLCJwcm9wIiwiY29uc29sZSIsImVycm9yIiwiYmFzZSIsImhvdmVyIiwiZm9jdXMiLCJhY3RpdmUiLCJkaXNhYmxlZCIsImNoZWNrZWQiLCJjaGVja2VkSG92ZXIiLCJjaGVja2VkRGlzYWJsZWQiLCJjaGVja2VkQWN0aXZlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsWUFBWSxHQUFHLFNBQXJCO0FBQ0EsSUFBTUMsYUFBYSxHQUFHLG1CQUF0QjtBQUNBLElBQU1DLFVBQVUsR0FBRywrQkFBbkI7QUFDQSxJQUFNQyxVQUFVLEdBQUcsK0JBQW5CO0FBQ0EsSUFBTUMsV0FBVyxHQUFHLGdDQUFwQjtBQUNBLElBQU1DLFlBQVksR0FBRyx1REFBckI7QUFDQSxJQUFNQyxpQkFBaUIsR0FDckIsbUdBREY7QUFFQSxJQUFNQyxrQkFBa0IsR0FDdEIscUdBREY7QUFFQSxJQUFNQyxvQkFBb0IsR0FDeEIsMkVBREY7QUFHQSxJQUFNQyxtQkFBbUIsR0FBRztBQUMxQkMsRUFBQUEsTUFBTSxFQUFFLEdBRGtCO0FBRTFCQyxFQUFBQSxJQUFJLEVBQUUsMEJBRm9CO0FBRzFCQyxFQUFBQSxNQUFNLEVBQUUsR0FIa0I7QUFJMUJDLEVBQUFBLFFBQVEsRUFBRSxRQUpnQjtBQUsxQkMsRUFBQUEsT0FBTyxFQUFFLEdBTGlCO0FBTTFCQyxFQUFBQSxRQUFRLEVBQUUsVUFOZ0I7QUFPMUJDLEVBQUFBLFVBQVUsRUFBRSxRQVBjO0FBUTFCQyxFQUFBQSxLQUFLLEVBQUUsR0FSbUI7QUFTMUJDLEVBQUFBLE9BQU8sRUFBRTtBQVRpQixDQUE1QjtBQVlBLElBQU1DLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsbUJBQW1CLEVBQUUsYUFETDtBQUVoQkMsRUFBQUEsY0FBYyxFQUFFLE1BRkE7QUFHaEJDLEVBQUFBLGdCQUFnQixFQUFFLE1BSEY7QUFJaEJaLEVBQUFBLE1BQU0sRUFBRSxNQUpRO0FBS2hCYSxFQUFBQSxPQUFPLEVBQUUsTUFMTztBQU1oQkMsRUFBQUEsTUFBTSxFQUFFO0FBTlEsQ0FBbEI7QUFTQSxJQUFNQyxhQUFhLEdBQUc7QUFDcEIsYUFBVztBQUNUQyxJQUFBQSxPQUFPLEVBQUU7QUFEQTtBQUtiOzs7OztBQU5zQixDQUF0Qjs7QUFVQSxJQUFNQyx3QkFBd0IsR0FBRyxTQUEzQkEsd0JBQTJCLEdBQWdCO0FBQUE7O0FBQUEsTUFBZkMsS0FBZSx1RUFBUCxFQUFPO0FBQy9DLG9DQUFvQjtBQUNsQkEsSUFBQUEsS0FBSyxFQUFMQSxLQURrQjtBQUVsQkMsSUFBQUEsS0FBSyxFQUFFLENBQ0wsTUFESyxFQUVMLE9BRkssRUFHTCxPQUhLLEVBSUwsUUFKSyxFQUtMLFVBTEssRUFNTCxTQU5LLEVBT0wsaUJBUEssRUFRTCxjQVJLLEVBU0wsZUFUSyxDQUZXO0FBYWxCQyxJQUFBQSxFQUFFLEVBQUUsWUFBQUMsSUFBSSxFQUFJO0FBQ1ZDLE1BQUFBLE9BQU8sQ0FBQ0MsS0FBUiwwREFDb0RGLElBRHBELHdCQUVFSCxLQUZGO0FBSUQ7QUFsQmlCLEdBQXBCO0FBcUJBLHlDQUNLbkIsbUJBREw7QUFFRSxxQkFBaUI7QUFBRWlCLE1BQUFBLE9BQU8sRUFBRTtBQUFYO0FBRm5CLG1EQUdHMUIsWUFISCxrQ0FHdUJtQixTQUh2QixFQUdxQywrQkFBaUJTLEtBQUssQ0FBQ00sSUFBdkIsQ0FIckMsa0RBSUdoQyxVQUpILEVBSWdCLCtCQUFpQjBCLEtBQUssQ0FBQ08sS0FBdkIsQ0FKaEIsaURBS0doQyxVQUxILEVBS2dCLCtCQUFpQnlCLEtBQUssQ0FBQ1EsS0FBdkIsQ0FMaEIsaURBTUdoQyxXQU5ILEVBTWlCLCtCQUFpQndCLEtBQUssQ0FBQ1MsTUFBdkIsQ0FOakIsaURBT0dwQyxhQVBILEVBT21CLCtCQUFpQjJCLEtBQUssQ0FBQ1UsUUFBdkIsQ0FQbkIsaURBUUdqQyxZQVJILGtDQVF1Qm9CLGFBUnZCLEVBUXlDLCtCQUFpQkcsS0FBSyxDQUFDVyxPQUF2QixDQVJ6QyxrREFTR2pDLGlCQVRILGtDQVVPbUIsYUFWUCxFQVdPLCtCQUFpQkcsS0FBSyxDQUFDWSxZQUF2QixDQVhQLGtEQWFHaEMsb0JBYkgsa0NBY09pQixhQWRQLEVBZU8sK0JBQWlCRyxLQUFLLENBQUNhLGVBQXZCLENBZlAsa0RBaUJHbEMsa0JBakJILGtDQWtCT2tCLGFBbEJQLEVBbUJPLCtCQUFpQkcsS0FBSyxDQUFDYyxhQUF2QixDQW5CUDtBQXNCRCxDQTVDRDs7ZUE4Q2VmLHdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUFwcGVhcmFuY2UgZnJvbSAnLi9jcmVhdGVBcHBlYXJhbmNlJ1xuaW1wb3J0IG1pc3NpbmdTdGF0ZVdhcm5pbmcgZnJvbSAnLi9taXNzaW5nU3RhdGVXYXJuaW5nJ1xuXG5jb25zdCBkZWZhdWx0U3RhdGUgPSAnJiArIGRpdidcbmNvbnN0IGRpc2FibGVkU3RhdGUgPSAnJltkaXNhYmxlZF0gKyBkaXYnXG5jb25zdCBob3ZlclN0YXRlID0gJyY6bm90KFtkaXNhYmxlZF0pOmhvdmVyICsgZGl2J1xuY29uc3QgZm9jdXNTdGF0ZSA9ICcmOm5vdChbZGlzYWJsZWRdKTpmb2N1cyArIGRpdidcbmNvbnN0IGFjdGl2ZVN0YXRlID0gJyY6bm90KFtkaXNhYmxlZF0pOmFjdGl2ZSArIGRpdidcbmNvbnN0IGNoZWNrZWRTdGF0ZSA9ICcmOmNoZWNrZWQgKyBkaXYsICZbdHlwZT1jaGVja2JveF06aW5kZXRlcm1pbmF0ZSArIGRpdidcbmNvbnN0IGNoZWNrZWRIb3ZlclN0YXRlID1cbiAgJyY6bm90KFtkaXNhYmxlZF0pOmNoZWNrZWQ6aG92ZXIgKyBkaXYsICZbdHlwZT1jaGVja2JveF06bm90KFtkaXNhYmxlZF0pOmluZGV0ZXJtaW5hdGU6aG92ZXIgKyBkaXYnXG5jb25zdCBjaGVja2VkQWN0aXZlU3RhdGUgPVxuICAnJjpub3QoW2Rpc2FibGVkXSk6Y2hlY2tlZDphY3RpdmUgKyBkaXYsICZbdHlwZT1jaGVja2JveF06bm90KFtkaXNhYmxlZF0pOmluZGV0ZXJtaW5hdGU6YWN0aXZlICsgZGl2J1xuY29uc3QgY2hlY2tlZERpc2FibGVkU3RhdGUgPVxuICAnJltkaXNhYmxlZF06Y2hlY2tlZCArIGRpdiwgJlt0eXBlPWNoZWNrYm94XVtkaXNhYmxlZF06aW5kZXRlcm1pbmF0ZSArIGRpdidcblxuY29uc3QgaGlkZGVuQ2hlY2tib3hTdHlsZSA9IHtcbiAgYm9yZGVyOiAnMCcsXG4gIGNsaXA6ICdyZWN0KDFweCwgMXB4LCAxcHgsIDFweCknLFxuICBoZWlnaHQ6ICcxJyxcbiAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICBwYWRkaW5nOiAnMCcsXG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgd2lkdGg6ICcxJyxcbiAgb3BhY2l0eTogJzAnXG59XG5cbmNvbnN0IGJhc2VTdHlsZSA9IHtcbiAgV2Via2l0Rm9udFNtb290aGluZzogJ2FudGlhbGlhc2VkJyxcbiAgdGV4dERlY29yYXRpb246ICdub25lJyxcbiAgV2Via2l0QXBwZWFyYW5jZTogJ25vbmUnLFxuICBib3JkZXI6ICdub25lJyxcbiAgb3V0bGluZTogJ25vbmUnLFxuICBjdXJzb3I6ICdwb2ludGVyJ1xufVxuXG5jb25zdCBjaGVja2VkU3R5bGVzID0ge1xuICAnJiA+IHN2Zyc6IHtcbiAgICBkaXNwbGF5OiAnYmxvY2snXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge29iamVjdH0gaXRlbXMgLSBvYmplY3Qgd2l0aCBhIHNldCBvZiBpdGVtcy5cbiAqIEByZXR1cm4ge29iamVjdH0gdGhlIGZpbmFsIGFwcGVhcmFuY2UuXG4gKi9cbmNvbnN0IGNyZWF0ZUNoZWNrYm94QXBwZWFyYW5jZSA9IChpdGVtcyA9IHt9KSA9PiB7XG4gIG1pc3NpbmdTdGF0ZVdhcm5pbmcoe1xuICAgIGl0ZW1zLFxuICAgIHByb3BzOiBbXG4gICAgICAnYmFzZScsXG4gICAgICAnaG92ZXInLFxuICAgICAgJ2ZvY3VzJyxcbiAgICAgICdhY3RpdmUnLFxuICAgICAgJ2Rpc2FibGVkJyxcbiAgICAgICdjaGVja2VkJyxcbiAgICAgICdjaGVja2VkRGlzYWJsZWQnLFxuICAgICAgJ2NoZWNrZWRIb3ZlcicsXG4gICAgICAnY2hlY2tlZEFjdGl2ZSdcbiAgICBdLFxuICAgIGNiOiBwcm9wID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIGBUaGVtZXIuY3JlYXRlQ2hlY2tib3hBcHBlYXJhbmNlKCkgaXMgbWlzc2luZyBhICR7cHJvcH0gc3RhdGUgaW4gaXRlbXM6IGAsXG4gICAgICAgIGl0ZW1zXG4gICAgICApXG4gICAgfVxuICB9KVxuXG4gIHJldHVybiB7XG4gICAgLi4uaGlkZGVuQ2hlY2tib3hTdHlsZSxcbiAgICAnJiArIGRpdiA+IHN2Zyc6IHsgZGlzcGxheTogJ25vbmUnIH0sXG4gICAgW2RlZmF1bHRTdGF0ZV06IHsgLi4uYmFzZVN0eWxlLCAuLi5jcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmJhc2UpIH0sXG4gICAgW2hvdmVyU3RhdGVdOiBjcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmhvdmVyKSxcbiAgICBbZm9jdXNTdGF0ZV06IGNyZWF0ZUFwcGVhcmFuY2UoaXRlbXMuZm9jdXMpLFxuICAgIFthY3RpdmVTdGF0ZV06IGNyZWF0ZUFwcGVhcmFuY2UoaXRlbXMuYWN0aXZlKSxcbiAgICBbZGlzYWJsZWRTdGF0ZV06IGNyZWF0ZUFwcGVhcmFuY2UoaXRlbXMuZGlzYWJsZWQpLFxuICAgIFtjaGVja2VkU3RhdGVdOiB7IC4uLmNoZWNrZWRTdHlsZXMsIC4uLmNyZWF0ZUFwcGVhcmFuY2UoaXRlbXMuY2hlY2tlZCkgfSxcbiAgICBbY2hlY2tlZEhvdmVyU3RhdGVdOiB7XG4gICAgICAuLi5jaGVja2VkU3R5bGVzLFxuICAgICAgLi4uY3JlYXRlQXBwZWFyYW5jZShpdGVtcy5jaGVja2VkSG92ZXIpXG4gICAgfSxcbiAgICBbY2hlY2tlZERpc2FibGVkU3RhdGVdOiB7XG4gICAgICAuLi5jaGVja2VkU3R5bGVzLFxuICAgICAgLi4uY3JlYXRlQXBwZWFyYW5jZShpdGVtcy5jaGVja2VkRGlzYWJsZWQpXG4gICAgfSxcbiAgICBbY2hlY2tlZEFjdGl2ZVN0YXRlXToge1xuICAgICAgLi4uY2hlY2tlZFN0eWxlcyxcbiAgICAgIC4uLmNyZWF0ZUFwcGVhcmFuY2UoaXRlbXMuY2hlY2tlZEFjdGl2ZSlcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQ2hlY2tib3hBcHBlYXJhbmNlXG4iXX0=