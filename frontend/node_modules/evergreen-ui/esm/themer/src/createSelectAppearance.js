import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread";
import createAppearance from './createAppearance';
import missingStateWarning from './missingStateWarning';
var baseStyle = {
  WebkitAppearance: 'none',
  border: 'none',
  flex: 1,
  background: 'none',
  width: '100%',
  WebkitFontSmoothing: 'antialiased',
  textDecoration: 'none',
  outline: 'none',
  cursor: 'pointer',
  ':-moz-focusring': {
    color: 'transparent',
    textShadow: '0 0 0 #000'
  }
};
var disabledState = '[disabled]';
var invalidState = '&[aria-invalid]';
var hoverState = '&:not([disabled]):hover';
var focusState = '&:not([disabled]):focus';
var activeState = '&:not([disabled]):active';
/**
 * @param {object} items - object with a set of states.
 * @return {object} the final appearance.
 */

var createSelectAppearance = function createSelectAppearance() {
  var _objectSpread2;

  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  missingStateWarning({
    items: items,
    props: ['base', 'disabled', 'invalid', 'hover', 'active', 'focus'],
    cb: function cb(prop) {
      console.error("Themer.createSelectAppearance() is missing a ".concat(prop, " item "), items);
    }
  });
  return _objectSpread({}, baseStyle, createAppearance(items.base), (_objectSpread2 = {}, _defineProperty(_objectSpread2, disabledState, _objectSpread({
    cursor: 'not-allowed'
  }, createAppearance(items.disabled))), _defineProperty(_objectSpread2, invalidState, createAppearance(items.invalid)), _defineProperty(_objectSpread2, hoverState, createAppearance(items.hover)), _defineProperty(_objectSpread2, focusState, createAppearance(items.focus)), _defineProperty(_objectSpread2, activeState, createAppearance(items.active)), _objectSpread2));
};

export default createSelectAppearance;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90aGVtZXIvc3JjL2NyZWF0ZVNlbGVjdEFwcGVhcmFuY2UuanMiXSwibmFtZXMiOlsiY3JlYXRlQXBwZWFyYW5jZSIsIm1pc3NpbmdTdGF0ZVdhcm5pbmciLCJiYXNlU3R5bGUiLCJXZWJraXRBcHBlYXJhbmNlIiwiYm9yZGVyIiwiZmxleCIsImJhY2tncm91bmQiLCJ3aWR0aCIsIldlYmtpdEZvbnRTbW9vdGhpbmciLCJ0ZXh0RGVjb3JhdGlvbiIsIm91dGxpbmUiLCJjdXJzb3IiLCJjb2xvciIsInRleHRTaGFkb3ciLCJkaXNhYmxlZFN0YXRlIiwiaW52YWxpZFN0YXRlIiwiaG92ZXJTdGF0ZSIsImZvY3VzU3RhdGUiLCJhY3RpdmVTdGF0ZSIsImNyZWF0ZVNlbGVjdEFwcGVhcmFuY2UiLCJpdGVtcyIsInByb3BzIiwiY2IiLCJwcm9wIiwiY29uc29sZSIsImVycm9yIiwiYmFzZSIsImRpc2FibGVkIiwiaW52YWxpZCIsImhvdmVyIiwiZm9jdXMiLCJhY3RpdmUiXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBT0EsZ0JBQVAsTUFBNkIsb0JBQTdCO0FBQ0EsT0FBT0MsbUJBQVAsTUFBZ0MsdUJBQWhDO0FBRUEsSUFBTUMsU0FBUyxHQUFHO0FBQ2hCQyxFQUFBQSxnQkFBZ0IsRUFBRSxNQURGO0FBRWhCQyxFQUFBQSxNQUFNLEVBQUUsTUFGUTtBQUdoQkMsRUFBQUEsSUFBSSxFQUFFLENBSFU7QUFJaEJDLEVBQUFBLFVBQVUsRUFBRSxNQUpJO0FBS2hCQyxFQUFBQSxLQUFLLEVBQUUsTUFMUztBQU1oQkMsRUFBQUEsbUJBQW1CLEVBQUUsYUFOTDtBQU9oQkMsRUFBQUEsY0FBYyxFQUFFLE1BUEE7QUFRaEJDLEVBQUFBLE9BQU8sRUFBRSxNQVJPO0FBU2hCQyxFQUFBQSxNQUFNLEVBQUUsU0FUUTtBQVVoQixxQkFBbUI7QUFDakJDLElBQUFBLEtBQUssRUFBRSxhQURVO0FBRWpCQyxJQUFBQSxVQUFVLEVBQUU7QUFGSztBQVZILENBQWxCO0FBZ0JBLElBQU1DLGFBQWEsR0FBRyxZQUF0QjtBQUNBLElBQU1DLFlBQVksR0FBRyxpQkFBckI7QUFDQSxJQUFNQyxVQUFVLEdBQUcseUJBQW5CO0FBQ0EsSUFBTUMsVUFBVSxHQUFHLHlCQUFuQjtBQUNBLElBQU1DLFdBQVcsR0FBRywwQkFBcEI7QUFFQTs7Ozs7QUFJQSxJQUFNQyxzQkFBc0IsR0FBRyxTQUF6QkEsc0JBQXlCLEdBQWdCO0FBQUE7O0FBQUEsTUFBZkMsS0FBZSx1RUFBUCxFQUFPO0FBQzdDbkIsRUFBQUEsbUJBQW1CLENBQUM7QUFDbEJtQixJQUFBQSxLQUFLLEVBQUxBLEtBRGtCO0FBRWxCQyxJQUFBQSxLQUFLLEVBQUUsQ0FBQyxNQUFELEVBQVMsVUFBVCxFQUFxQixTQUFyQixFQUFnQyxPQUFoQyxFQUF5QyxRQUF6QyxFQUFtRCxPQUFuRCxDQUZXO0FBR2xCQyxJQUFBQSxFQUFFLEVBQUUsWUFBQUMsSUFBSSxFQUFJO0FBQ1ZDLE1BQUFBLE9BQU8sQ0FBQ0MsS0FBUix3REFDa0RGLElBRGxELGFBRUVILEtBRkY7QUFJRDtBQVJpQixHQUFELENBQW5CO0FBV0EsMkJBQ0tsQixTQURMLEVBRUtGLGdCQUFnQixDQUFDb0IsS0FBSyxDQUFDTSxJQUFQLENBRnJCLHdEQUdHWixhQUhIO0FBSUlILElBQUFBLE1BQU0sRUFBRTtBQUpaLEtBS09YLGdCQUFnQixDQUFDb0IsS0FBSyxDQUFDTyxRQUFQLENBTHZCLG9DQU9HWixZQVBILEVBT2tCZixnQkFBZ0IsQ0FBQ29CLEtBQUssQ0FBQ1EsT0FBUCxDQVBsQyxtQ0FRR1osVUFSSCxFQVFnQmhCLGdCQUFnQixDQUFDb0IsS0FBSyxDQUFDUyxLQUFQLENBUmhDLG1DQVNHWixVQVRILEVBU2dCakIsZ0JBQWdCLENBQUNvQixLQUFLLENBQUNVLEtBQVAsQ0FUaEMsbUNBVUdaLFdBVkgsRUFVaUJsQixnQkFBZ0IsQ0FBQ29CLEtBQUssQ0FBQ1csTUFBUCxDQVZqQztBQVlELENBeEJEOztBQTBCQSxlQUFlWixzQkFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVBcHBlYXJhbmNlIGZyb20gJy4vY3JlYXRlQXBwZWFyYW5jZSdcbmltcG9ydCBtaXNzaW5nU3RhdGVXYXJuaW5nIGZyb20gJy4vbWlzc2luZ1N0YXRlV2FybmluZydcblxuY29uc3QgYmFzZVN0eWxlID0ge1xuICBXZWJraXRBcHBlYXJhbmNlOiAnbm9uZScsXG4gIGJvcmRlcjogJ25vbmUnLFxuICBmbGV4OiAxLFxuICBiYWNrZ3JvdW5kOiAnbm9uZScsXG4gIHdpZHRoOiAnMTAwJScsXG4gIFdlYmtpdEZvbnRTbW9vdGhpbmc6ICdhbnRpYWxpYXNlZCcsXG4gIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gIG91dGxpbmU6ICdub25lJyxcbiAgY3Vyc29yOiAncG9pbnRlcicsXG4gICc6LW1vei1mb2N1c3JpbmcnOiB7XG4gICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG4gICAgdGV4dFNoYWRvdzogJzAgMCAwICMwMDAnXG4gIH1cbn1cblxuY29uc3QgZGlzYWJsZWRTdGF0ZSA9ICdbZGlzYWJsZWRdJ1xuY29uc3QgaW52YWxpZFN0YXRlID0gJyZbYXJpYS1pbnZhbGlkXSdcbmNvbnN0IGhvdmVyU3RhdGUgPSAnJjpub3QoW2Rpc2FibGVkXSk6aG92ZXInXG5jb25zdCBmb2N1c1N0YXRlID0gJyY6bm90KFtkaXNhYmxlZF0pOmZvY3VzJ1xuY29uc3QgYWN0aXZlU3RhdGUgPSAnJjpub3QoW2Rpc2FibGVkXSk6YWN0aXZlJ1xuXG4vKipcbiAqIEBwYXJhbSB7b2JqZWN0fSBpdGVtcyAtIG9iamVjdCB3aXRoIGEgc2V0IG9mIHN0YXRlcy5cbiAqIEByZXR1cm4ge29iamVjdH0gdGhlIGZpbmFsIGFwcGVhcmFuY2UuXG4gKi9cbmNvbnN0IGNyZWF0ZVNlbGVjdEFwcGVhcmFuY2UgPSAoaXRlbXMgPSB7fSkgPT4ge1xuICBtaXNzaW5nU3RhdGVXYXJuaW5nKHtcbiAgICBpdGVtcyxcbiAgICBwcm9wczogWydiYXNlJywgJ2Rpc2FibGVkJywgJ2ludmFsaWQnLCAnaG92ZXInLCAnYWN0aXZlJywgJ2ZvY3VzJ10sXG4gICAgY2I6IHByb3AgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgYFRoZW1lci5jcmVhdGVTZWxlY3RBcHBlYXJhbmNlKCkgaXMgbWlzc2luZyBhICR7cHJvcH0gaXRlbSBgLFxuICAgICAgICBpdGVtc1xuICAgICAgKVxuICAgIH1cbiAgfSlcblxuICByZXR1cm4ge1xuICAgIC4uLmJhc2VTdHlsZSxcbiAgICAuLi5jcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmJhc2UpLFxuICAgIFtkaXNhYmxlZFN0YXRlXToge1xuICAgICAgY3Vyc29yOiAnbm90LWFsbG93ZWQnLFxuICAgICAgLi4uY3JlYXRlQXBwZWFyYW5jZShpdGVtcy5kaXNhYmxlZClcbiAgICB9LFxuICAgIFtpbnZhbGlkU3RhdGVdOiBjcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmludmFsaWQpLFxuICAgIFtob3ZlclN0YXRlXTogY3JlYXRlQXBwZWFyYW5jZShpdGVtcy5ob3ZlciksXG4gICAgW2ZvY3VzU3RhdGVdOiBjcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmZvY3VzKSxcbiAgICBbYWN0aXZlU3RhdGVdOiBjcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmFjdGl2ZSlcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVTZWxlY3RBcHBlYXJhbmNlXG4iXX0=