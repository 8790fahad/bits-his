import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { IconButton } from '../../buttons';
import { Pane } from '../../layers';
import { Heading } from '../../typography';
import OptionsList from './OptionsList';
import OptionShapePropType from './OptionShapePropType';

var SelectMenuContent =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(SelectMenuContent, _PureComponent);

  function SelectMenuContent() {
    _classCallCheck(this, SelectMenuContent);

    return _possibleConstructorReturn(this, _getPrototypeOf(SelectMenuContent).apply(this, arguments));
  }

  _createClass(SelectMenuContent, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          width = _this$props.width,
          height = _this$props.height,
          options = _this$props.options,
          hasTitle = _this$props.hasTitle,
          hasFilter = _this$props.hasFilter,
          close = _this$props.close,
          title = _this$props.title,
          listProps = _this$props.listProps,
          detailView = _this$props.detailView,
          isMultiSelect = _this$props.isMultiSelect;
      var headerHeight = 40;
      var optionsListHeight = hasTitle ? height - headerHeight : height;
      var hasDetailView = Boolean(detailView);
      return React.createElement(Pane, {
        display: "flex",
        height: height
      }, React.createElement(Pane, {
        width: width,
        height: height,
        display: "flex",
        flexDirection: "column",
        borderRight: hasDetailView ? 'muted' : null
      }, hasTitle && React.createElement(Pane, {
        display: "flex",
        alignItems: "center",
        borderBottom: "default",
        padding: 8,
        height: headerHeight,
        boxSizing: "border-box"
      }, React.createElement(Pane, {
        flex: "1"
      }, React.createElement(Heading, {
        size: 400
      }, title)), React.createElement(IconButton, {
        icon: "cross",
        appearance: "minimal",
        height: 24,
        onClick: close
      })), React.createElement(OptionsList, _extends({
        height: optionsListHeight,
        hasFilter: hasFilter,
        options: options,
        isMultiSelect: isMultiSelect,
        close: close
      }, listProps))), hasDetailView && detailView);
    }
  }]);

  return SelectMenuContent;
}(PureComponent);

SelectMenuContent.displayName = "SelectMenuContent";

_defineProperty(SelectMenuContent, "propTypes", {
  close: PropTypes.func,
  title: PropTypes.string,
  width: PropTypes.number,
  height: PropTypes.number,
  options: PropTypes.arrayOf(OptionShapePropType),
  hasTitle: PropTypes.bool,
  hasFilter: PropTypes.bool,
  listProps: PropTypes.shape(OptionsList.propTypes),

  /**
   * When true, multi select is accounted for.
   */
  isMultiSelect: PropTypes.bool,

  /**
   * Node that is placed right next to the options.
   */
  detailView: PropTypes.node
});

_defineProperty(SelectMenuContent, "defaultProps", {
  options: [],
  hasTitle: true,
  hasFilter: true
});

export { SelectMenuContent as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zZWxlY3QtbWVudS9zcmMvU2VsZWN0TWVudUNvbnRlbnQuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJQdXJlQ29tcG9uZW50IiwiUHJvcFR5cGVzIiwiSWNvbkJ1dHRvbiIsIlBhbmUiLCJIZWFkaW5nIiwiT3B0aW9uc0xpc3QiLCJPcHRpb25TaGFwZVByb3BUeXBlIiwiU2VsZWN0TWVudUNvbnRlbnQiLCJwcm9wcyIsIndpZHRoIiwiaGVpZ2h0Iiwib3B0aW9ucyIsImhhc1RpdGxlIiwiaGFzRmlsdGVyIiwiY2xvc2UiLCJ0aXRsZSIsImxpc3RQcm9wcyIsImRldGFpbFZpZXciLCJpc011bHRpU2VsZWN0IiwiaGVhZGVySGVpZ2h0Iiwib3B0aW9uc0xpc3RIZWlnaHQiLCJoYXNEZXRhaWxWaWV3IiwiQm9vbGVhbiIsImZ1bmMiLCJzdHJpbmciLCJudW1iZXIiLCJhcnJheU9mIiwiYm9vbCIsInNoYXBlIiwicHJvcFR5cGVzIiwibm9kZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLGFBQWhCLFFBQXFDLE9BQXJDO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLFNBQVNDLFVBQVQsUUFBMkIsZUFBM0I7QUFDQSxTQUFTQyxJQUFULFFBQXFCLGNBQXJCO0FBQ0EsU0FBU0MsT0FBVCxRQUF3QixrQkFBeEI7QUFDQSxPQUFPQyxXQUFQLE1BQXdCLGVBQXhCO0FBQ0EsT0FBT0MsbUJBQVAsTUFBZ0MsdUJBQWhDOztJQUVxQkMsaUI7Ozs7Ozs7Ozs7Ozs7NkJBNEJWO0FBQUEsd0JBWUgsS0FBS0MsS0FaRjtBQUFBLFVBRUxDLEtBRkssZUFFTEEsS0FGSztBQUFBLFVBR0xDLE1BSEssZUFHTEEsTUFISztBQUFBLFVBSUxDLE9BSkssZUFJTEEsT0FKSztBQUFBLFVBS0xDLFFBTEssZUFLTEEsUUFMSztBQUFBLFVBTUxDLFNBTkssZUFNTEEsU0FOSztBQUFBLFVBT0xDLEtBUEssZUFPTEEsS0FQSztB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dCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IEljb25CdXR0b24gfSBmcm9tICcuLi8uLi9idXR0b25zJ1xuaW1wb3J0IHsgUGFuZSB9IGZyb20gJy4uLy4uL2xheWVycydcbmltcG9ydCB7IEhlYWRpbmcgfSBmcm9tICcuLi8uLi90eXBvZ3JhcGh5J1xuaW1wb3J0IE9wdGlvbnNMaXN0IGZyb20gJy4vT3B0aW9uc0xpc3QnXG5pbXBvcnQgT3B0aW9uU2hhcGVQcm9wVHlwZSBmcm9tICcuL09wdGlvblNoYXBlUHJvcFR5cGUnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlbGVjdE1lbnVDb250ZW50IGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY2xvc2U6IFByb3BUeXBlcy5mdW5jLFxuICAgIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGhlaWdodDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBvcHRpb25zOiBQcm9wVHlwZXMuYXJyYXlPZihPcHRpb25TaGFwZVByb3BUeXBlKSxcbiAgICBoYXNUaXRsZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgaGFzRmlsdGVyOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsaXN0UHJvcHM6IFByb3BUeXBlcy5zaGFwZShPcHRpb25zTGlzdC5wcm9wVHlwZXMpLFxuXG4gICAgLyoqXG4gICAgICogV2hlbiB0cnVlLCBtdWx0aSBzZWxlY3QgaXMgYWNjb3VudGVkIGZvci5cbiAgICAgKi9cbiAgICBpc011bHRpU2VsZWN0OiBQcm9wVHlwZXMuYm9vbCxcblxuICAgIC8qKlxuICAgICAqIE5vZGUgdGhhdCBpcyBwbGFjZWQgcmlnaHQgbmV4dCB0byB0aGUgb3B0aW9ucy5cbiAgICAgKi9cbiAgICBkZXRhaWxWaWV3OiBQcm9wVHlwZXMubm9kZVxuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBvcHRpb25zOiBbXSxcbiAgICBoYXNUaXRsZTogdHJ1ZSxcbiAgICBoYXNGaWx0ZXI6IHRydWVcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIG9wdGlvbnMsXG4gICAgICBoYXNUaXRsZSxcbiAgICAgIGhhc0ZpbHRlcixcbiAgICAgIGNsb3NlLFxuICAgICAgdGl0bGUsXG4gICAgICBsaXN0UHJvcHMsXG4gICAgICBkZXRhaWxWaWV3LFxuICAgICAgaXNNdWx0aVNlbGVjdFxuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICBjb25zdCBoZWFkZXJIZWlnaHQgPSA0MFxuICAgIGNvbnN0IG9wdGlvbnNMaXN0SGVpZ2h0ID0gaGFzVGl0bGUgPyBoZWlnaHQgLSBoZWFkZXJIZWlnaHQgOiBoZWlnaHRcbiAgICBjb25zdCBoYXNEZXRhaWxWaWV3ID0gQm9vbGVhbihkZXRhaWxWaWV3KVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxQYW5lIGRpc3BsYXk9XCJmbGV4XCIgaGVpZ2h0PXtoZWlnaHR9PlxuICAgICAgICA8UGFuZVxuICAgICAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgICBkaXNwbGF5PVwiZmxleFwiXG4gICAgICAgICAgZmxleERpcmVjdGlvbj1cImNvbHVtblwiXG4gICAgICAgICAgYm9yZGVyUmlnaHQ9e2hhc0RldGFpbFZpZXcgPyAnbXV0ZWQnIDogbnVsbH1cbiAgICAgICAgPlxuICAgICAgICAgIHtoYXNUaXRsZSAmJiAoXG4gICAgICAgICAgICA8UGFuZVxuICAgICAgICAgICAgICBkaXNwbGF5PVwiZmxleFwiXG4gICAgICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICAgICAgICBib3JkZXJCb3R0b209XCJkZWZhdWx0XCJcbiAgICAgICAgICAgICAgcGFkZGluZz17OH1cbiAgICAgICAgICAgICAgaGVpZ2h0PXtoZWFkZXJIZWlnaHR9XG4gICAgICAgICAgICAgIGJveFNpemluZz1cImJvcmRlci1ib3hcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8UGFuZSBmbGV4PVwiMVwiPlxuICAgICAgICAgICAgICAgIDxIZWFkaW5nIHNpemU9ezQwMH0+e3RpdGxlfTwvSGVhZGluZz5cbiAgICAgICAgICAgICAgPC9QYW5lPlxuICAgICAgICAgICAgICA8SWNvbkJ1dHRvblxuICAgICAgICAgICAgICAgIGljb249XCJjcm9zc1wiXG4gICAgICAgICAgICAgICAgYXBwZWFyYW5jZT1cIm1pbmltYWxcIlxuICAgICAgICAgICAgICAgIGhlaWdodD17MjR9XG4gICAgICAgICAgICAgICAgb25DbGljaz17Y2xvc2V9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L1BhbmU+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8T3B0aW9uc0xpc3RcbiAgICAgICAgICAgIGhlaWdodD17b3B0aW9uc0xpc3RIZWlnaHR9XG4gICAgICAgICAgICBoYXNGaWx0ZXI9e2hhc0ZpbHRlcn1cbiAgICAgICAgICAgIG9wdGlvbnM9e29wdGlvbnN9XG4gICAgICAgICAgICBpc011bHRpU2VsZWN0PXtpc011bHRpU2VsZWN0fVxuICAgICAgICAgICAgY2xvc2U9e2Nsb3NlfVxuICAgICAgICAgICAgey4uLmxpc3RQcm9wc31cbiAgICAgICAgICAvPlxuICAgICAgICA8L1BhbmU+XG4gICAgICAgIHtoYXNEZXRhaWxWaWV3ICYmIGRldGFpbFZpZXd9XG4gICAgICA8L1BhbmU+XG4gICAgKVxuICB9XG59XG4iXX0=