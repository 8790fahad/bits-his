import _objectSpread from "@babel/runtime/helpers/esm/objectSpread";
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import Box, { css } from 'ui-box';
import { withTheme } from '../../theme';
var loadingKeyframes = css.keyframes('loading', {
  '0%': {
    transform: 'rotate(0)'
  },
  '100%': {
    transform: 'rotate(360deg)'
  }
});
var loadingCircleKeyframes = css.keyframes('loading-circle', {
  '0%': {
    strokeDashoffset: 600
  },
  '100%': {
    strokeDashoffset: 0
  }
});
var outer = {
  animation: "".concat(loadingKeyframes, " 2s linear infinite")
};

var inner = function inner(color) {
  return {
    strokeDashoffset: 600,
    strokeDasharray: 300,
    strokeWidth: 12,
    strokeMiterlimit: 10,
    strokeLinecap: 'round',
    animation: "".concat(loadingCircleKeyframes, " 1.6s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite"),
    stroke: color,
    fill: 'transparent'
  };
};

var Spinner =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Spinner, _PureComponent);

  function Spinner() {
    _classCallCheck(this, Spinner);

    return _possibleConstructorReturn(this, _getPrototypeOf(Spinner).apply(this, arguments));
  }

  _createClass(Spinner, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          size = _this$props.size,
          props = _objectWithoutProperties(_this$props, ["theme", "size"]);

      return React.createElement(Box, _extends({
        width: size,
        height: size,
        lineHeight: 0
      }, props), React.createElement(Box, {
        is: "svg",
        css: outer,
        x: "0px",
        y: "0px",
        viewBox: "0 0 150 150"
      }, React.createElement(Box, {
        is: "circle",
        css: inner(theme.spinnerColor),
        cx: "75",
        cy: "75",
        r: "60"
      })));
    }
  }]);

  return Spinner;
}(PureComponent);

Spinner.displayName = "Spinner";

_defineProperty(Spinner, "propTypes", _objectSpread({}, Box.propTypes, {
  /**
   * The size of the spinner.
   */
  size: PropTypes.number.isRequired,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: PropTypes.object.isRequired
}));

_defineProperty(Spinner, "defaultProps", {
  size: 40
});

export default withTheme(Spinner);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcGlubmVyL3NyYy9TcGlubmVyLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsIlByb3BUeXBlcyIsIkJveCIsImNzcyIsIndpdGhUaGVtZSIsImxvYWRpbmdLZXlmcmFtZXMiLCJrZXlmcmFtZXMiLCJ0cmFuc2Zvcm0iLCJsb2FkaW5nQ2lyY2xlS2V5ZnJhbWVzIiwic3Ryb2tlRGFzaG9mZnNldCIsIm91dGVyIiwiYW5pbWF0aW9uIiwiaW5uZXIiLCJjb2xvciIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZVdpZHRoIiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZUxpbmVjYXAiLCJzdHJva2UiLCJmaWxsIiwiU3Bpbm5lciIsInByb3BzIiwidGhlbWUiLCJzaXplIiwic3Bpbm5lckNvbG9yIiwicHJvcFR5cGVzIiwibnVtYmVyIiwiaXNSZXF1aXJlZCIsIm9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBUCxJQUFnQkMsYUFBaEIsUUFBcUMsT0FBckM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsR0FBUCxJQUFjQyxHQUFkLFFBQXlCLFFBQXpCO0FBQ0EsU0FBU0MsU0FBVCxRQUEwQixhQUExQjtBQUVBLElBQU1DLGdCQUFnQixHQUFHRixHQUFHLENBQUNHLFNBQUosQ0FBYyxTQUFkLEVBQXlCO0FBQ2hELFFBQU07QUFDSkMsSUFBQUEsU0FBUyxFQUFFO0FBRFAsR0FEMEM7QUFJaEQsVUFBUTtBQUNOQSxJQUFBQSxTQUFTLEVBQUU7QUFETDtBQUp3QyxDQUF6QixDQUF6QjtBQVNBLElBQU1DLHNCQUFzQixHQUFHTCxHQUFHLENBQUNHLFNBQUosQ0FBYyxnQkFBZCxFQUFnQztBQUM3RCxRQUFNO0FBQ0pHLElBQUFBLGdCQUFnQixFQUFFO0FBRGQsR0FEdUQ7QUFJN0QsVUFBUTtBQUNOQSxJQUFBQSxnQkFBZ0IsRUFBRTtBQURaO0FBSnFELENBQWhDLENBQS9CO0FBU0EsSUFBTUMsS0FBSyxHQUFHO0FBQ1pDLEVBQUFBLFNBQVMsWUFBS04sZ0JBQUw7QUFERyxDQUFkOztBQUlBLElBQU1PLEtBQUssR0FBRyxTQUFSQSxLQUFRLENBQUFDLEtBQUs7QUFBQSxTQUFLO0FBQ3RCSixJQUFBQSxnQkFBZ0IsRUFBRSxHQURJO0FBRXRCSyxJQUFBQSxlQUFlLEVBQUUsR0FGSztBQUd0QkMsSUFBQUEsV0FBVyxFQUFFLEVBSFM7QUFJdEJDLElBQUFBLGdCQUFnQixFQUFFLEVBSkk7QUFLdEJDLElBQUFBLGFBQWEsRUFBRSxPQUxPO0FBTXRCTixJQUFBQSxTQUFTLFlBQUtILHNCQUFMLHNEQU5hO0FBT3RCVSxJQUFBQSxNQUFNLEVBQUVMLEtBUGM7QUFRdEJNLElBQUFBLElBQUksRUFBRTtBQVJnQixHQUFMO0FBQUEsQ0FBbkI7O0lBV01DLE87Ozs7Ozs7Ozs7Ozs7NkJBc0JLO0FBQUEsd0JBQzJCLEtBQUtDLEtBRGhDO0FBQUEsVUFDQ0MsS0FERCxlQUNDQSxLQUREO0FBQUEsVUFDUUMsSUFEUixlQUNRQSxJQURSO0FBQUEsVUFDaUJGLEtBRGpCOztBQUVQLGFBQ0Usb0JBQUMsR0FBRDtBQUFLLFFBQUEsS0FBSyxFQUFFRSxJQUFaO0FBQWtCLFFBQUEsTUFBTSxFQUFFQSxJQUExQjtBQUFnQyxRQUFBLFVBQVUsRUFBRTtBQUE1QyxTQUFtREYsS0FBbkQsR0FDRSxvQkFBQyxHQUFEO0FBQUssUUFBQSxFQUFFLEVBQUMsS0FBUjtBQUFjLFFBQUEsR0FBRyxFQUFFWCxLQUFuQjtBQUEwQixRQUFBLENBQUMsRUFBQyxLQUE1QjtBQUFrQyxRQUFBLENBQUMsRUFBQyxLQUFwQztBQUEwQyxRQUFBLE9BQU8sRUFBQztBQUFsRCxTQUNFLG9CQUFDLEdBQUQ7QUFDRSxRQUFBLEVBQUUsRUFBQyxRQURMO0FBRUUsUUFBQSxHQUFHLEVBQUVFLEtBQUssQ0FBQ1UsS0FBSyxDQUFDRSxZQUFQLENBRlo7QUFHRSxRQUFBLEVBQUUsRUFBQyxJQUhMO0FBSUUsUUFBQSxFQUFFLEVBQUMsSUFKTDtBQUtFLFFBQUEsQ0FBQyxFQUFDO0FBTEosUUFERixDQURGLENBREY7QUFhRDs7OztFQXJDbUJ4QixhOztBQUFoQm9CLE87O2dCQUFBQSxPLGlDQUtDbEIsR0FBRyxDQUFDdUIsUztBQUVQOzs7QUFHQUYsRUFBQUEsSUFBSSxFQUFFdEIsU0FBUyxDQUFDeUIsTUFBVixDQUFpQkMsVTs7QUFFdkI7OztBQUdBTCxFQUFBQSxLQUFLLEVBQUVyQixTQUFTLENBQUMyQixNQUFWLENBQWlCRDs7O2dCQWZ0QlAsTyxrQkFrQmtCO0FBQ3BCRyxFQUFBQSxJQUFJLEVBQUU7QUFEYyxDOztBQXNCeEIsZUFBZW5CLFNBQVMsQ0FBQ2dCLE9BQUQsQ0FBeEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IEJveCwgeyBjc3MgfSBmcm9tICd1aS1ib3gnXG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi90aGVtZSdcblxuY29uc3QgbG9hZGluZ0tleWZyYW1lcyA9IGNzcy5rZXlmcmFtZXMoJ2xvYWRpbmcnLCB7XG4gICcwJSc6IHtcbiAgICB0cmFuc2Zvcm06ICdyb3RhdGUoMCknXG4gIH0sXG4gICcxMDAlJzoge1xuICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSgzNjBkZWcpJ1xuICB9XG59KVxuXG5jb25zdCBsb2FkaW5nQ2lyY2xlS2V5ZnJhbWVzID0gY3NzLmtleWZyYW1lcygnbG9hZGluZy1jaXJjbGUnLCB7XG4gICcwJSc6IHtcbiAgICBzdHJva2VEYXNob2Zmc2V0OiA2MDBcbiAgfSxcbiAgJzEwMCUnOiB7XG4gICAgc3Ryb2tlRGFzaG9mZnNldDogMFxuICB9XG59KVxuXG5jb25zdCBvdXRlciA9IHtcbiAgYW5pbWF0aW9uOiBgJHtsb2FkaW5nS2V5ZnJhbWVzfSAycyBsaW5lYXIgaW5maW5pdGVgXG59XG5cbmNvbnN0IGlubmVyID0gY29sb3IgPT4gKHtcbiAgc3Ryb2tlRGFzaG9mZnNldDogNjAwLFxuICBzdHJva2VEYXNoYXJyYXk6IDMwMCxcbiAgc3Ryb2tlV2lkdGg6IDEyLFxuICBzdHJva2VNaXRlcmxpbWl0OiAxMCxcbiAgc3Ryb2tlTGluZWNhcDogJ3JvdW5kJyxcbiAgYW5pbWF0aW9uOiBgJHtsb2FkaW5nQ2lyY2xlS2V5ZnJhbWVzfSAxLjZzIGN1YmljLWJlemllcigwLjQsIDAuMTUsIDAuNiwgMC44NSkgaW5maW5pdGVgLFxuICBzdHJva2U6IGNvbG9yLFxuICBmaWxsOiAndHJhbnNwYXJlbnQnXG59KVxuXG5jbGFzcyBTcGlubmVyIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIEJveCBjb21wb25lbnQgYXMgdGhlIGJhc2UuXG4gICAgICovXG4gICAgLi4uQm94LnByb3BUeXBlcyxcblxuICAgIC8qKlxuICAgICAqIFRoZSBzaXplIG9mIHRoZSBzcGlubmVyLlxuICAgICAqL1xuICAgIHNpemU6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcblxuICAgIC8qKlxuICAgICAqIFRoZW1lIHByb3ZpZGVkIGJ5IFRoZW1lUHJvdmlkZXIuXG4gICAgICovXG4gICAgdGhlbWU6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBzaXplOiA0MFxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgdGhlbWUsIHNpemUsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzXG4gICAgcmV0dXJuIChcbiAgICAgIDxCb3ggd2lkdGg9e3NpemV9IGhlaWdodD17c2l6ZX0gbGluZUhlaWdodD17MH0gey4uLnByb3BzfT5cbiAgICAgICAgPEJveCBpcz1cInN2Z1wiIGNzcz17b3V0ZXJ9IHg9XCIwcHhcIiB5PVwiMHB4XCIgdmlld0JveD1cIjAgMCAxNTAgMTUwXCI+XG4gICAgICAgICAgPEJveFxuICAgICAgICAgICAgaXM9XCJjaXJjbGVcIlxuICAgICAgICAgICAgY3NzPXtpbm5lcih0aGVtZS5zcGlubmVyQ29sb3IpfVxuICAgICAgICAgICAgY3g9XCI3NVwiXG4gICAgICAgICAgICBjeT1cIjc1XCJcbiAgICAgICAgICAgIHI9XCI2MFwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Cb3g+XG4gICAgICA8L0JveD5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKFNwaW5uZXIpXG4iXX0=