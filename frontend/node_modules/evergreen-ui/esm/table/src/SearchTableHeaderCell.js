import _objectSpread from "@babel/runtime/helpers/esm/objectSpread";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { Text } from '../../typography';
import { Icon } from '../../icon';
import TableHeaderCell from './TableHeaderCell';
var invisibleInput = {
  border: 'none',
  backgroundColor: 'transparent',
  WebkitAppearance: 'none',
  WebkitFontSmoothing: 'antialiased',
  '&:focus': {
    outline: 'none'
  },
  '&::placeholder': {
    color: "rgba(67, 90, 111, 0.7)"
  }
};

var SearchTableHeaderCell =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(SearchTableHeaderCell, _PureComponent);

  function SearchTableHeaderCell() {
    _classCallCheck(this, SearchTableHeaderCell);

    return _possibleConstructorReturn(this, _getPrototypeOf(SearchTableHeaderCell).apply(this, arguments));
  }

  _createClass(SearchTableHeaderCell, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          value = _this$props.value,
          children = _this$props.children,
          _onChange = _this$props.onChange,
          autoFocus = _this$props.autoFocus,
          spellCheck = _this$props.spellCheck,
          placeholder = _this$props.placeholder,
          props = _objectWithoutProperties(_this$props, ["value", "children", "onChange", "autoFocus", "spellCheck", "placeholder"]);

      return React.createElement(TableHeaderCell, props, React.createElement(Icon, {
        icon: "search",
        color: "muted",
        marginLeft: 2,
        marginRight: 10,
        size: 12
      }), React.createElement(Text, {
        is: "input",
        size: 300,
        flex: "1",
        css: invisibleInput,
        value: value,
        onChange: function onChange(e) {
          return _onChange(e.target.value);
        },
        autoFocus: autoFocus,
        spellCheck: spellCheck,
        fontWeight: 500,
        marginLeft: -2,
        paddingLeft: 0,
        placeholder: placeholder
      }));
    }
  }]);

  return SearchTableHeaderCell;
}(PureComponent);

SearchTableHeaderCell.displayName = "SearchTableHeaderCell";

_defineProperty(SearchTableHeaderCell, "propTypes", _objectSpread({}, TableHeaderCell.propTypes, {
  /**
   * The value of the input.
   */
  value: PropTypes.string,

  /**
   * Handler to be called when the input changes.
   */
  onChange: PropTypes.func,

  /**
   * Sets whether the component should be automatically focused on component render.
   */
  autoFocus: PropTypes.bool,

  /**
   * Sets whether to apply spell checking to the content.
   */
  spellCheck: PropTypes.bool,

  /**
   * Text to display in the input if the input is empty.
   */
  placeholder: PropTypes.string
}));

_defineProperty(SearchTableHeaderCell, "defaultProps", {
  onChange: function onChange() {},
  spellCheck: true,
  placeholder: 'Filter...'
});

export { SearchTableHeaderCell as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJsZS9zcmMvU2VhcmNoVGFibGVIZWFkZXJDZWxsLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsIlByb3BUeXBlcyIsIlRleHQiLCJJY29uIiwiVGFibGVIZWFkZXJDZWxsIiwiaW52aXNpYmxlSW5wdXQiLCJib3JkZXIiLCJiYWNrZ3JvdW5kQ29sb3IiLCJXZWJraXRBcHBlYXJhbmNlIiwiV2Via2l0Rm9udFNtb290aGluZyIsIm91dGxpbmUiLCJjb2xvciIsIlNlYXJjaFRhYmxlSGVhZGVyQ2VsbCIsInByb3BzIiwidmFsdWUiLCJjaGlsZHJlbiIsIm9uQ2hhbmdlIiwiYXV0b0ZvY3VzIiwic3BlbGxDaGVjayIsInBsYWNlaG9sZGVyIiwiZSIsInRhcmdldCIsInByb3BUeXBlcyIsInN0cmluZyIsImZ1bmMiLCJib29sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLGFBQWhCLFFBQXFDLE9BQXJDO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLFNBQVNDLElBQVQsUUFBcUIsa0JBQXJCO0FBQ0EsU0FBU0MsSUFBVCxRQUFxQixZQUFyQjtBQUNBLE9BQU9DLGVBQVAsTUFBNEIsbUJBQTVCO0FBRUEsSUFBTUMsY0FBYyxHQUFHO0FBQ3JCQyxFQUFBQSxNQUFNLEVBQUUsTUFEYTtBQUVyQkMsRUFBQUEsZUFBZSxFQUFFLGFBRkk7QUFHckJDLEVBQUFBLGdCQUFnQixFQUFFLE1BSEc7QUFJckJDLEVBQUFBLG1CQUFtQixFQUFFLGFBSkE7QUFNckIsYUFBVztBQUNUQyxJQUFBQSxPQUFPLEVBQUU7QUFEQSxHQU5VO0FBVXJCLG9CQUFrQjtBQUNoQkMsSUFBQUEsS0FBSztBQURXO0FBVkcsQ0FBdkI7O0lBZXFCQyxxQjs7Ozs7Ozs7Ozs7Ozs2QkF1Q1Y7QUFBQSx3QkFTSCxLQUFLQyxLQVRGO0FBQUEsVUFFTEMsS0FGSyxlQUVMQSxLQUZLO0FBQUEsVUFHTEMsUUFISyxlQUdMQSxRQUhLO0FBQUEsVUFJTEMsU0FKSyxlQUlMQSxRQUpLO0FBQUEsVUFLTEMsU0FMSyxlQUtMQSxTQUxLO0FBQUEsVUFNTEMsVUFOSyxlQU1MQSxVQU5LO0FBQUEsVUFPTEMsV0FQSyxlQU9MQSxXQVBLO0FBQUEsVUFRRk4sS0FSRTs7QUFXUCxhQUNFLG9CQUFDLGVBQUQsRUFBcUJBLEtBQXJCLEVBQ0Usb0JBQUMsSUFBRDtBQUNFLFFBQUEsSUFBSSxFQUFDLFFBRFA7QUFFRSxRQUFBLEtBQUssRUFBQyxPQUZSO0FBR0UsUUFBQSxVQUFVLEVBQUUsQ0FIZDtBQUlFLFFBQUEsV0FBVyxFQUFFLEVBSmY7QUFLRSxRQUFBLElBQUksRUFBRTtBQUxSLFFBREYsRUFRRSxvQkFBQyxJQUFEO0FBQ0UsUUFBQSxFQUFFLEVBQUMsT0FETDtBQUVFLFFBQUEsSUFBSSxFQUFFLEdBRlI7QUFHRSxRQUFBLElBQUksRUFBQyxHQUhQO0FBSUUsUUFBQSxHQUFHLEVBQUVSLGNBSlA7QUFLRSxRQUFBLEtBQUssRUFBRVMsS0FMVDtBQU1FLFFBQUEsUUFBUSxFQUFFLGtCQUFBTSxDQUFDO0FBQUEsaUJBQUlKLFNBQVEsQ0FBQ0ksQ0FBQyxDQUFDQyxNQUFGLENBQVNQLEtBQVYsQ0FBWjtBQUFBLFNBTmI7QUFPRSxRQUFBLFNBQVMsRUFBRUcsU0FQYjtBQVFFLFFBQUEsVUFBVSxFQUFFQyxVQVJkO0FBU0UsUUFBQSxVQUFVLEVBQUUsR0FUZDtBQVVFLFFBQUEsVUFBVSxFQUFFLENBQUMsQ0FWZjtBQVdFLFFBQUEsV0FBVyxFQUFFLENBWGY7QUFZRSxRQUFBLFdBQVcsRUFBRUM7QUFaZixRQVJGLENBREY7QUF5QkQ7Ozs7RUEzRWdEbkIsYTs7QUFBOUJZLHFCOztnQkFBQUEscUIsaUNBS2RSLGVBQWUsQ0FBQ2tCLFM7QUFFbkI7OztBQUdBUixFQUFBQSxLQUFLLEVBQUViLFNBQVMsQ0FBQ3NCLE07O0FBRWpCOzs7QUFHQVAsRUFBQUEsUUFBUSxFQUFFZixTQUFTLENBQUN1QixJOztBQUVwQjs7O0FBR0FQLEVBQUFBLFNBQVMsRUFBRWhCLFNBQVMsQ0FBQ3dCLEk7O0FBRXJCOzs7QUFHQVAsRUFBQUEsVUFBVSxFQUFFakIsU0FBUyxDQUFDd0IsSTs7QUFFdEI7OztBQUdBTixFQUFBQSxXQUFXLEVBQUVsQixTQUFTLENBQUNzQjs7O2dCQTlCTlgscUIsa0JBaUNHO0FBQ3BCSSxFQUFBQSxRQUFRLEVBQUUsb0JBQU0sQ0FBRSxDQURFO0FBRXBCRSxFQUFBQSxVQUFVLEVBQUUsSUFGUTtBQUdwQkMsRUFBQUEsV0FBVyxFQUFFO0FBSE8sQzs7U0FqQ0hQLHFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi8uLi90eXBvZ3JhcGh5J1xuaW1wb3J0IHsgSWNvbiB9IGZyb20gJy4uLy4uL2ljb24nXG5pbXBvcnQgVGFibGVIZWFkZXJDZWxsIGZyb20gJy4vVGFibGVIZWFkZXJDZWxsJ1xuXG5jb25zdCBpbnZpc2libGVJbnB1dCA9IHtcbiAgYm9yZGVyOiAnbm9uZScsXG4gIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgV2Via2l0QXBwZWFyYW5jZTogJ25vbmUnLFxuICBXZWJraXRGb250U21vb3RoaW5nOiAnYW50aWFsaWFzZWQnLFxuXG4gICcmOmZvY3VzJzoge1xuICAgIG91dGxpbmU6ICdub25lJ1xuICB9LFxuXG4gICcmOjpwbGFjZWhvbGRlcic6IHtcbiAgICBjb2xvcjogYHJnYmEoNjcsIDkwLCAxMTEsIDAuNylgXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VhcmNoVGFibGVIZWFkZXJDZWxsIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIFRhYmxlSGVhZGVyQ2VsbCBjb21wb25lbnQgYXMgdGhlIGJhc2UuXG4gICAgICovXG4gICAgLi4uVGFibGVIZWFkZXJDZWxsLnByb3BUeXBlcyxcblxuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBvZiB0aGUgaW5wdXQuXG4gICAgICovXG4gICAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgICAvKipcbiAgICAgKiBIYW5kbGVyIHRvIGJlIGNhbGxlZCB3aGVuIHRoZSBpbnB1dCBjaGFuZ2VzLlxuICAgICAqL1xuICAgIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcblxuICAgIC8qKlxuICAgICAqIFNldHMgd2hldGhlciB0aGUgY29tcG9uZW50IHNob3VsZCBiZSBhdXRvbWF0aWNhbGx5IGZvY3VzZWQgb24gY29tcG9uZW50IHJlbmRlci5cbiAgICAgKi9cbiAgICBhdXRvRm9jdXM6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogU2V0cyB3aGV0aGVyIHRvIGFwcGx5IHNwZWxsIGNoZWNraW5nIHRvIHRoZSBjb250ZW50LlxuICAgICAqL1xuICAgIHNwZWxsQ2hlY2s6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogVGV4dCB0byBkaXNwbGF5IGluIHRoZSBpbnB1dCBpZiB0aGUgaW5wdXQgaXMgZW1wdHkuXG4gICAgICovXG4gICAgcGxhY2Vob2xkZXI6IFByb3BUeXBlcy5zdHJpbmdcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgb25DaGFuZ2U6ICgpID0+IHt9LFxuICAgIHNwZWxsQ2hlY2s6IHRydWUsXG4gICAgcGxhY2Vob2xkZXI6ICdGaWx0ZXIuLi4nXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgdmFsdWUsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIG9uQ2hhbmdlLFxuICAgICAgYXV0b0ZvY3VzLFxuICAgICAgc3BlbGxDaGVjayxcbiAgICAgIHBsYWNlaG9sZGVyLFxuICAgICAgLi4ucHJvcHNcbiAgICB9ID0gdGhpcy5wcm9wc1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxUYWJsZUhlYWRlckNlbGwgey4uLnByb3BzfT5cbiAgICAgICAgPEljb25cbiAgICAgICAgICBpY29uPVwic2VhcmNoXCJcbiAgICAgICAgICBjb2xvcj1cIm11dGVkXCJcbiAgICAgICAgICBtYXJnaW5MZWZ0PXsyfVxuICAgICAgICAgIG1hcmdpblJpZ2h0PXsxMH1cbiAgICAgICAgICBzaXplPXsxMn1cbiAgICAgICAgLz5cbiAgICAgICAgPFRleHRcbiAgICAgICAgICBpcz1cImlucHV0XCJcbiAgICAgICAgICBzaXplPXszMDB9XG4gICAgICAgICAgZmxleD1cIjFcIlxuICAgICAgICAgIGNzcz17aW52aXNpYmxlSW5wdXR9XG4gICAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICAgIG9uQ2hhbmdlPXtlID0+IG9uQ2hhbmdlKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICBhdXRvRm9jdXM9e2F1dG9Gb2N1c31cbiAgICAgICAgICBzcGVsbENoZWNrPXtzcGVsbENoZWNrfVxuICAgICAgICAgIGZvbnRXZWlnaHQ9ezUwMH1cbiAgICAgICAgICBtYXJnaW5MZWZ0PXstMn1cbiAgICAgICAgICBwYWRkaW5nTGVmdD17MH1cbiAgICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICAgIC8+XG4gICAgICA8L1RhYmxlSGVhZGVyQ2VsbD5cbiAgICApXG4gIH1cbn1cbiJdfQ==