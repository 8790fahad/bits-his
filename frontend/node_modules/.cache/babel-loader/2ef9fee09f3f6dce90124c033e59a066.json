{"ast":null,"code":"import _classCallCheck from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Desktop/bits-his/frontend/src/components/Records Module/PatientTable.js\";\nimport React from 'react';\nimport { Table } from 'reactstrap';\nimport Loading from '../loading';\n\nvar PatientTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientTable, _React$Component);\n\n  function PatientTable() {\n    _classCallCheck(this, PatientTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PatientTable).apply(this, arguments));\n  }\n\n  _createClass(PatientTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          filterText = _this$props.filterText,\n          patientlist = _this$props.patientlist,\n          openDoctorsModal = _this$props.openDoctorsModal,\n          openModal = _this$props.openModal,\n          renderEditButton = _this$props.renderEditButton,\n          error = _this$props.error;\n      var rows = [];\n      patientlist.forEach(function (patient, i) {\n        if (patient.id.toString().indexOf(filterText) === -1) {\n          return;\n        }\n\n        rows.push(React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, i + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, patient.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, patient.firstname, \" \", patient.surname), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, patient.Gender), React.createElement(\"td\", {\n          className: \"moveToCenter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: function onClick() {\n            return openDoctorsModal(patient.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Assign\")), renderEditButton && React.createElement(\"td\", {\n          className: \"moveToCenter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: function onClick() {\n            return openModal(patient);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Edit\"))));\n      });\n      return React.createElement(\"div\", {\n        style: {\n          height: '500px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, !patientlist.length ? !error.length ? React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"No record found\")) : React.createElement(Table, {\n        bordered: true,\n        striped: true,\n        hover: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Patient No\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(\"th\", {\n        className: \"moveToCenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Assign\"), renderEditButton && React.createElement(\"th\", {\n        className: \"moveToCenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Edit\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, rows)), error.length ? React.createElement(\"p\", {\n        className: \"alert alert-danger text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, error) : null);\n    }\n  }]);\n\n  return PatientTable;\n}(React.Component);\n\nexport default PatientTable;","map":{"version":3,"sources":["/root/Desktop/bits-his/frontend/src/components/Records Module/PatientTable.js"],"names":["React","Table","Loading","PatientTable","props","filterText","patientlist","openDoctorsModal","openModal","renderEditButton","error","rows","forEach","patient","i","id","toString","indexOf","push","firstname","surname","Gender","height","length","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table } from 'reactstrap';\nimport Loading from '../loading';\n\nclass PatientTable extends React.Component {\n  render() {\n    const {\n      filterText,\n      patientlist,\n      openDoctorsModal,\n      openModal,\n      renderEditButton,\n      error,\n    } = this.props;\n\n    const rows = [];\n\n    patientlist.forEach((patient, i) => {\n      if (patient.id.toString().indexOf(filterText) === -1) {\n        return;\n      }\n\n      rows.push(\n        <tr key={i}>\n          <td>{i + 1}</td>\n          <td>{patient.id}</td>\n          <td>\n            {patient.firstname} {patient.surname}\n          </td>\n          <td>{patient.Gender}</td>\n          <td className=\"moveToCenter\">\n            <button\n              className=\"btn btn-secondary\"\n              onClick={() => openDoctorsModal(patient.id)}>\n              Assign\n            </button>\n          </td>\n\n          {renderEditButton && (\n            <td className=\"moveToCenter\">\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => openModal(patient)}>\n                Edit\n              </button>\n            </td>\n          )}\n          {/*\n                this part is used to enable in-records delete operations\n                to activate this action, uncomment the code below\n              */}\n          {/*<td className=\"moveToCenter\">\n            <button className=\"btn btn-danger\" style={{ marginBottom: '1rem' }} >\n            <a onClick={() => this.props.deletepatientrecords(patient)} >Delete</a></button>\n          </td>*/}\n        </tr>\n      );\n    });\n\n    return (\n      <div style={{ height: '500px' }}>\n        {!patientlist.length ? (\n          !error.length ? (\n            <Loading />\n          ) : (\n            <p className=\"text-center\">\n              <em>No record found</em>\n            </p>\n          )\n        ) : (\n          <Table bordered striped hover responsive>\n            <thead>\n              <tr>\n                <th />\n                <th>Patient No</th>\n                <th>Full Name</th>\n                <th>Gender</th>\n                <th className=\"moveToCenter\">Assign</th>\n                {/* {\n                    this.props.renderEditButton ? <th className=\"moveToCenter\">Edit Record</th>: null \n                  } */}\n\n                {renderEditButton && <th className=\"moveToCenter\">Edit</th>}\n\n                {/*\n                    this part is used to enable in-records delete operations\n                    to activate this action, uncomment the code below\n                  */}\n                {/*<th className=\"moveToCenter\">Delete Record</th>*/}\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        )}\n        {error.length ? (\n          <p className=\"alert alert-danger text-center\">{error}</p>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default PatientTable;\n"]},"metadata":{},"sourceType":"module"}