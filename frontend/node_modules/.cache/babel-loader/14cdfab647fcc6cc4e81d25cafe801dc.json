{"ast":null,"code":"import _classCallCheck from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Desktop/bits-his/frontend/src/components/Insurance/Location.js\";\nimport React, { Component } from 'react';\nimport { toaster } from 'evergreen-ui/commonjs/toaster';\nimport { Button } from 'reactstrap';\n\nvar Location =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Location, _Component);\n\n  function Location() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Location);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Location)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      locationStatusMessage: 'null',\n      locationLoading: false,\n      location: null,\n      locationStatus: false\n    };\n\n    _this.getLocation = function () {\n      _this.setState({\n        locationLoading: true\n      });\n\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          console.log('fn called'); // console.log('position');\n\n          var coords = pos.coords;\n\n          _this.setState({\n            location: {\n              latitude: coords.latitude,\n              longitude: coords.longitude\n            },\n            locationLoading: false,\n            locationStatusMessage: 'Location taken',\n            locationStatus: true\n          }, function () {\n            return toaster.success('Location is captured');\n          });\n        }, function (error) {\n          switch (error.code) {\n            case error.PERMISSION_DENIED:\n              _this.setState({\n                locationLoading: false,\n                locationStatusMessage: \"User denied the request for Geolocation.\"\n              });\n\n              break;\n\n            case error.POSITION_UNAVAILABLE:\n              _this.setState({\n                locationLoading: false,\n                locationStatusMessage: \"Location information is unavailable.\"\n              });\n\n              break;\n\n            case error.TIMEOUT:\n              _this.setState({\n                locationLoading: false,\n                locationStatusMessage: \"The request to get user location timed out.\"\n              });\n\n              break;\n\n            case error.UNKNOWN_ERROR:\n              _this.setState({\n                locationLoading: false,\n                locationStatusMessage: \"An unknown error occurred.\"\n              });\n\n              break;\n          }\n        });\n      } else {\n        _this.setState({\n          locationLoading: false,\n          locationStatusMessage: 'This device does not support location'\n        });\n\n        console.log('not supported');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Location, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          location = _this$state.location,\n          locationLoading = _this$state.locationLoading,\n          locationStatus = _this$state.locationStatus,\n          locationStatusMessage = _this$state.locationStatusMessage;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          margin: \"1.5rem 0px\",\n          fontFamily: 'monospace',\n          color: locationStatusMessage !== 'null' ? 'green' : 'red',\n          fontSize: 14\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Location Status: \", locationStatusMessage), React.createElement(\"div\", {\n        style: {\n          margin: \"1.5rem 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        appearance: \"primary\",\n        onClick: this.getLocation,\n        isLoading: locationLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Add Location\")));\n    }\n  }]);\n\n  return Location;\n}(Component);\n\nexport default Location;","map":{"version":3,"sources":["/root/Desktop/bits-his/frontend/src/components/Insurance/Location.js"],"names":["React","Component","toaster","Button","Location","state","locationStatusMessage","locationLoading","location","locationStatus","getLocation","setState","navigator","geolocation","getCurrentPosition","pos","console","log","coords","latitude","longitude","success","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","margin","fontFamily","color","fontSize"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { toaster } from 'evergreen-ui/commonjs/toaster';\nimport {Button} from 'reactstrap'\n\n\nclass   Location extends Component{\n  state={\n    locationStatusMessage: 'null',\n    locationLoading: false,\n    location:null,\n    locationStatus:false\n  }\n    getLocation = () => {\n        this.setState({ locationLoading:true})\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(pos => {\n            console.log('fn called')\n            // console.log('position');\n            const coords = pos.coords;\n            this.setState({\n              location: {\n                latitude: coords.latitude,\n                longitude: coords.longitude,\n              },\n              locationLoading: false, \n              locationStatusMessage: 'Location taken',\n              locationStatus: true,\n            }, () => toaster.success('Location is captured'));\n    \n          }, (error) => {\n            switch(error.code) {\n              case error.PERMISSION_DENIED:\n                this.setState({ locationLoading: false, \n                  locationStatusMessage: \"User denied the request for Geolocation.\" }) \n                break;\n              case error.POSITION_UNAVAILABLE:\n                this.setState({ locationLoading: false, \n                  locationStatusMessage: \"Location information is unavailable.\" })\n                break;\n              case error.TIMEOUT:\n                this.setState({ locationLoading: false, \n                  locationStatusMessage: \"The request to get user location timed out.\"})\n                break;\n              case error.UNKNOWN_ERROR:\n                this.setState({ locationLoading: false, \n                  locationStatusMessage: \"An unknown error occurred.\" })\n                break;\n            }\n          });\n        } else {\n          this.setState({ locationLoading: false, locationStatusMessage: 'This device does not support location'})\n          console.log('not supported')\n        }\n      };\n      render(\n    \n      ){\n        const {\n\n          location,\n          locationLoading,\n          locationStatus,\n          locationStatusMessage\n        } = this.state;\n          return(\n              <div>\n                <span style={{margin: `1.5rem 0px`, fontFamily: 'monospace', color: locationStatusMessage!=='null' ? 'green' : 'red', fontSize:14 }}>Location Status: {locationStatusMessage}</span>\n                <div style={{ margin: `1.5rem 0` }}>\n                <Button     appearance=\"primary\"\n                    onClick={this.getLocation} isLoading={locationLoading}>Add Location</Button>\n                \n</div>\n              </div>\n          )\n      }\n\n}\nexport default Location;"]},"metadata":{},"sourceType":"module"}