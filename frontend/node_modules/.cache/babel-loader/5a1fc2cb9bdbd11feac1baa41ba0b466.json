{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _themer = require(\"../../../../themer\");\n\nvar _memoizeClassName = _interopRequireDefault(require(\"../utils/memoizeClassName\"));\n\nvar _scales = _interopRequireDefault(require(\"../foundational-styles/scales\"));\n\nvar _palette = _interopRequireDefault(require(\"../foundational-styles/palette\"));\n\nvar InputAppearances = {};\nInputAppearances.default = _themer.Themer.createInputAppearance({\n  base: {\n    backgroundColor: 'white',\n    boxShadow: \"inset 0 0 0 1px \".concat(_scales.default.neutral.N5A, \", inset 0 1px 2px \").concat(_scales.default.neutral.N4A)\n  },\n  invalid: {\n    boxShadow: \"inset 0 0 0 1px \".concat(_palette.default.red.base, \", inset 0 1px 2px \").concat(_scales.default.neutral.N4A)\n  },\n  placeholder: {\n    color: _scales.default.neutral.N6A\n  },\n  focus: {\n    outline: 'none',\n    boxShadow: \"inset 0 0 2px \".concat(_scales.default.neutral.N4A, \", inset 0 0 0 1px \").concat(_scales.default.blue.B7, \", 0 0 0 3px \").concat(_scales.default.blue.B4A)\n  },\n  disabled: {\n    boxShadow: \"inset 0 0 0 1px \".concat(_scales.default.neutral.N4A),\n    backgroundColor: _scales.default.neutral.N2\n  }\n});\nInputAppearances.neutral = _themer.Themer.createInputAppearance({\n  base: {\n    backgroundColor: _scales.default.neutral.N2A\n  },\n  invalid: {\n    boxShadow: \"inset 0 0 0 1px \".concat(_palette.default.red.base)\n  },\n  placeholder: {\n    color: _scales.default.neutral.N6A\n  },\n  focus: {\n    outline: 'none',\n    backgroundColor: 'white',\n    boxShadow: \"0 0 0 2px \".concat(_scales.default.blue.B6A)\n  },\n  disabled: {\n    boxShadow: \"inset 0 0 0 1px \".concat(_scales.default.neutral.N4A),\n    backgroundColor: _scales.default.neutral.N2\n  }\n});\n/**\n * Get the appearance of a `TextInput`.\n * @param {string} appearance\n * @return {Object} the appearance object.\n */\n\nvar getTextInputAppearance = function getTextInputAppearance(appearance) {\n  switch (appearance) {\n    case 'neutral':\n      return InputAppearances.neutral;\n\n    default:\n      return InputAppearances.default;\n  }\n};\n/**\n * Get the className of a `TextInput`.\n * @param {string} appearance\n * @return {string} the appearance class name.\n */\n\n\nvar _default = (0, _memoizeClassName.default)(getTextInputAppearance);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}