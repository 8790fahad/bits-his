{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _ToastManager = _interopRequireDefault(require(\"./ToastManager\"));\n\nvar isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n/**\n * The Toaster manages the interactionsb between\n * the ToasterManger and the toast API.\n */\n\nvar Toaster = function Toaster() {\n  var _this = this;\n\n  (0, _classCallCheck2.default)(this, Toaster);\n  (0, _defineProperty2.default)(this, \"_bindNotify\", function (handler) {\n    _this.notifyHandler = handler;\n  });\n  (0, _defineProperty2.default)(this, \"_bindGetToasts\", function (handler) {\n    _this.getToastsHandler = handler;\n  });\n  (0, _defineProperty2.default)(this, \"_bindCloseAll\", function (handler) {\n    _this.closeAllHandler = handler;\n  });\n  (0, _defineProperty2.default)(this, \"getToasts\", function () {\n    return _this.getToastsHandler();\n  });\n  (0, _defineProperty2.default)(this, \"closeAll\", function () {\n    return _this.closeAllHandler();\n  });\n  (0, _defineProperty2.default)(this, \"notify\", function (title) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {\n      intent: 'none'\n    }));\n  });\n  (0, _defineProperty2.default)(this, \"success\", function (title) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {\n      intent: 'success'\n    }));\n  });\n  (0, _defineProperty2.default)(this, \"warning\", function (title) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {\n      intent: 'warning'\n    }));\n  });\n  (0, _defineProperty2.default)(this, \"danger\", function (title) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {\n      intent: 'danger'\n    }));\n  });\n  if (!isBrowser) return;\n  var container = document.createElement('div');\n  container.setAttribute('data-evergreen-toaster-container', '');\n  document.body.appendChild(container);\n\n  _reactDom.default.render(_react.default.createElement(_ToastManager.default, {\n    bindNotify: this._bindNotify,\n    bindGetToasts: this._bindGetToasts,\n    bindCloseAll: this._bindCloseAll\n  }), container);\n};\n\nexports.default = Toaster;","map":null,"metadata":{},"sourceType":"script"}