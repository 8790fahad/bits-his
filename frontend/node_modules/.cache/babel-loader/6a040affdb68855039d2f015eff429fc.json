{"ast":null,"code":"import _defineProperty from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Desktop/bits-his/frontend/src/components/Doctor Module/CreateAthropometry.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { FaArrowRight, FaArrowLeft } from 'react-icons/fa';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nvar CreateAthropometry =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateAthropometry, _Component);\n\n  function CreateAthropometry(props) {\n    var _this;\n\n    _classCallCheck(this, CreateAthropometry);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateAthropometry).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          athropometry_weight = _this$state.athropometry_weight,\n          headcircumference = _this$state.headcircumference,\n          athropometry_height = _this$state.athropometry_height,\n          muac = _this$state.muac;\n      var formData = {\n        athropometry_weight: athropometry_weight,\n        headcircumference: headcircumference,\n        athropometry_height: athropometry_height,\n        muac: muac\n      };\n      if (athropometry_weight === \"\" && headcircumference === \"\" && athropometry_height === \"\" && muac === \"\") return;\n      return localStorage.setItem('athropometry', JSON.stringify(formData)); // console.log(formData)\n    };\n\n    _this.onInputChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    var savedData = JSON.parse(localStorage.getItem('athropometry')) || [];\n    _this.state = {\n      athropometry_weight: savedData.athropometry_weight || \"\",\n      headcircumference: savedData.headcircumference || \"\",\n      athropometry_height: savedData.athropometry_height || \"\",\n      muac: savedData.muac || \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CreateAthropometry, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          athropometry_weight = _this$state2.athropometry_weight,\n          headcircumference = _this$state2.headcircumference,\n          athropometry_height = _this$state2.athropometry_height,\n          muac = _this$state2.muac;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Athropometry\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Weight:\"), React.createElement(\"textarea\", {\n        name: \"athropometry_weight\",\n        value: athropometry_weight,\n        onChange: this.onInputChange,\n        className: \"form-control col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Head Circumference:\"), React.createElement(\"textarea\", {\n        name: \"headcircumference\",\n        value: headcircumference,\n        onChange: this.onInputChange,\n        className: \"form-control col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Height/Length:\"), React.createElement(\"textarea\", {\n        name: \"athropometry_height\",\n        value: athropometry_height,\n        onChange: this.onInputChange,\n        className: \"form-control col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"MUAC:\"), React.createElement(\"textarea\", {\n        name: \"muac\",\n        value: muac,\n        onChange: this.onInputChange,\n        className: \"form-control col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/patient_clarking/provisional_diagnosis\",\n        className: \"btn btn-outline-success\",\n        style: {\n          width: '9vw'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(FaArrowLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), \" Prev\"), React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        className: \"btn btn-outline-success offset-md-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/patient_clarking/management_plan\",\n        style: {\n          width: '9vw'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Next \", React.createElement(FaArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return CreateAthropometry;\n}(Component);\n\nexport default CreateAthropometry;","map":{"version":3,"sources":["/root/Desktop/bits-his/frontend/src/components/Doctor Module/CreateAthropometry.js"],"names":["React","Component","Form","FormGroup","Link","FaArrowRight","FaArrowLeft","CreateAthropometry","props","handleSubmit","e","preventDefault","state","athropometry_weight","headcircumference","athropometry_height","muac","formData","localStorage","setItem","JSON","stringify","onInputChange","setState","target","name","value","savedData","parse","getItem","width"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport { Form, FormGroup } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { FaArrowRight, FaArrowLeft } from 'react-icons/fa';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass CreateAthropometry extends Component {\n  constructor(props) {\n    super(props);\n    const savedData = JSON.parse(localStorage.getItem('athropometry')) || [];\n    this.state = { \n        athropometry_weight: savedData.athropometry_weight || \"\",\n        headcircumference: savedData.headcircumference || \"\",\n        athropometry_height: savedData.athropometry_height || \"\",\n        muac: savedData.muac || \"\" \n    }\n  }\n\n\n  handleSubmit=(e)=>{\n    e.preventDefault();\n    const { athropometry_weight, headcircumference, \n        athropometry_height, muac } = this.state\n    const formData = { athropometry_weight, headcircumference, \n        athropometry_height, muac }\n    if(athropometry_weight===\"\" && headcircumference===\"\" && athropometry_height===\"\" && muac===\"\" ) return;\n    return localStorage.setItem('athropometry', JSON.stringify(formData))\n    // console.log(formData)\n  }\n\n  onInputChange=(e)=>{\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n    render(){\n        const { athropometry_weight, headcircumference, \n            athropometry_height, muac } = this.state\n        return(\n            <Form>\n                <h3 className=\"text-center\"><strong>Athropometry</strong></h3>\n                <hr />\n                <FormGroup row>\n                    <label className=\"col-md-2\">Weight:</label>\n                    <textarea \n                        name=\"athropometry_weight\" \n                        value={athropometry_weight} \n                        onChange={this.onInputChange} \n                        className=\"form-control col-md-4\"></textarea>\n                    <label className=\"col-md-2\">Head Circumference:</label>\n                    <textarea \n                        name=\"headcircumference\" \n                        value={headcircumference} \n                        onChange={this.onInputChange} \n                        className=\"form-control col-md-4\"></textarea>\n                </FormGroup>\n                <FormGroup row>\n                    <label className=\"col-md-2\">Height/Length:</label>\n                    <textarea \n                        name=\"athropometry_height\" \n                        value={athropometry_height} \n                        onChange={this.onInputChange} \n                        className=\"form-control col-md-4\"></textarea>\n                    <label className=\"col-md-2\">MUAC:</label>\n                    <textarea \n                        name=\"muac\" \n                        value={muac} \n                        onChange={this.onInputChange} \n                        className=\"form-control col-md-4\"></textarea>\n                </FormGroup>\n                <br />\n                <hr />  \n                <div className=\"row\">\n                    <Link to=\"/patient_clarking/provisional_diagnosis\" className=\"btn btn-outline-success\" style={{width:'9vw'}}><FaArrowLeft /> Prev</Link>\n                    <button onClick={this.handleSubmit} className=\"btn btn-outline-success offset-md-7\"><Link to='/patient_clarking/management_plan' style={{width:'9vw'}}>Next <FaArrowRight /></Link></button>\n                </div>              \n            </Form>   \n        )\n    }\n}\n\nexport default CreateAthropometry;"]},"metadata":{},"sourceType":"module"}