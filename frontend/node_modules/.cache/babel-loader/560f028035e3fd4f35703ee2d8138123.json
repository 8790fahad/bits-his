{"ast":null,"code":"import _defineProperty from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Desktop/bits-his/frontend/src/components/Pharmacy Module/DispensaryForm.js\";\nimport React, { Component } from 'react';\nimport { Table, Button, Card, CardHeader, CardBody, CardFooter, FormGroup, ModalHeader, ModalFooter, ModalBody, Modal } from 'reactstrap';\nimport { today } from '../helpers';\nimport { FaPlus } from 'react-icons/fa';\n\nvar DispensaryForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DispensaryForm, _Component);\n\n  function DispensaryForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DispensaryForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DispensaryForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      date: today,\n      dosage: '',\n      quantity_dispense: '',\n      patientID: '',\n      drugs: '',\n      dispense: [],\n      error: '',\n      modalIsOpen: false\n    };\n\n    _this.handleChange = function (_ref) {\n      var _ref$target = _ref.target,\n          name = _ref$target.name,\n          value = _ref$target.value;\n\n      _this.setState(_defineProperty({\n        error: ''\n      }, name, value));\n    };\n\n    _this.toggleModal = function () {\n      return _this.setState(function (prev) {\n        return {\n          modalIsOpen: !prev.modalIsOpen\n        };\n      });\n    };\n\n    _this.resetForm = function () {\n      _this.setState({\n        patientID: '',\n        drugs: '',\n        dosage: \"\",\n        quantity_dispense: ''\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          patientID = _this$state.patientID,\n          drugs = _this$state.drugs,\n          dosage = _this$state.dosage,\n          quantity_dispense = _this$state.quantity_dispense;\n\n      if (patientID === '' || drugs === '' || dosage === '' || quantity_dispense === '') {\n        _this.setState({\n          error: 'Please complete the form'\n        });\n      } else {\n        _this.setState(function (prevState) {\n          return {\n            modalIsOpen: false,\n            dispense: prevState.dispense.concat({\n              patientID: _this.state.patientID,\n              drugs: _this.state.drugs,\n              dosage: _this.state.dosage,\n              quantity_dispense: _this.state.quantity_dispense\n            })\n          };\n        }, function () {\n          return _this.resetForm();\n        });\n      }\n    };\n\n    _this.handleDelete = function (deleteItem) {\n      var itemToDelte = _this.state.dispense.filter(function (item) {\n        return item !== deleteItem;\n      });\n\n      _this.setState({\n        dispense: itemToDelte\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DispensaryForm, [{\n    key: \"render\",\n    value: function render() {\n      var handleChange = this.handleChange,\n          handleDelete = this.handleDelete,\n          handleSubmit = this.handleSubmit,\n          _this$state2 = this.state,\n          error = _this$state2.error,\n          date = _this$state2.date,\n          patientID = _this$state2.patientID,\n          drugs = _this$state2.drugs,\n          dispense = _this$state2.dispense,\n          dosage = _this$state2.dosage,\n          quantity_dispense = _this$state2.quantity_dispense,\n          modalIsOpen = _this$state2.modalIsOpen;\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Dispensary Form\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4 col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        onChange: handleChange,\n        className: \"form-control\",\n        type: \"date\",\n        name: \"date\",\n        value: today,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-6 col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Patient ID\"), React.createElement(\"input\", {\n        onChange: handleChange,\n        className: \"form-control\",\n        type: \"text\",\n        value: patientID,\n        name: \"patientID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"btn btn-primary offset-md-5 offset-lg-5 col-md-2 col-lg-2 btn-sm\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(FaPlus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), dispense.length ? React.createElement(React.Fragment, null, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Dispensary Details\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(DispensaryTable, {\n        dispense: dispense,\n        handleDelete: handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        color: \"success\",\n        onClick: handleSubmit,\n        className: \"offset-md-5 offset-lg-5 col-md-2 col-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Submit\"))) : null, React.createElement(DispensaryFormModal, {\n        modalIsOpen: modalIsOpen,\n        handleChange: handleChange,\n        drugs: drugs,\n        quantity_dispense: quantity_dispense,\n        dosage: dosage,\n        toggleModal: this.toggleModal,\n        handleSubmit: handleSubmit,\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DispensaryForm;\n}(Component);\n\nfunction DispensaryFormModal(_ref2) {\n  var modalIsOpen = _ref2.modalIsOpen,\n      toggleModal = _ref2.toggleModal,\n      handleChange = _ref2.handleChange,\n      drugs = _ref2.drugs,\n      quantity_dispense = _ref2.quantity_dispense,\n      dosage = _ref2.dosage,\n      handleSubmit = _ref2.handleSubmit,\n      error = _ref2.error;\n  return React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    toggle: toggleModal,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Drug to Dispense\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Drugs\"), React.createElement(\"input\", {\n    onChange: handleChange,\n    className: \"form-control\",\n    type: \"text\",\n    name: \"drugs\",\n    value: drugs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Dosage\"), React.createElement(\"input\", {\n    onChange: handleChange,\n    className: \"form-control\",\n    type: \"text\",\n    name: \"dosage\",\n    value: dosage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }))), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Quantity Dispensed\"), React.createElement(\"input\", {\n    onChange: handleChange,\n    className: \"form-control\",\n    type: \"text\",\n    name: \"quantity_dispense\",\n    value: quantity_dispense,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }))), error !== '' ? React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, error)) : null)), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onClick: handleSubmit,\n    type: \"submit\",\n    className: \"btn btn-primary offset-md-5 offset-lg-5 col-md-2 col-lg-2 btn-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  })));\n} //dispensary table\n\n\nfunction DispensaryTable(_ref3) {\n  var dispense = _ref3.dispense,\n      handleDelete = _ref3.handleDelete;\n  return React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"PatientID\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Drugs\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Dosage\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Quantity Dispensed\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Delete\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, dispense.map(function (item, index) {\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \" \", item.patientID), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, item.drugs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, item.dosage), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, item.quantity_dispense), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Button, {\n      outline: true,\n      size: \"sm\",\n      color: \"danger\",\n      onClick: function onClick() {\n        return handleDelete(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"delete\")));\n  })));\n}\n\nexport default DispensaryForm;","map":{"version":3,"sources":["/root/Desktop/bits-his/frontend/src/components/Pharmacy Module/DispensaryForm.js"],"names":["React","Component","Table","Button","Card","CardHeader","CardBody","CardFooter","FormGroup","ModalHeader","ModalFooter","ModalBody","Modal","today","FaPlus","DispensaryForm","state","date","dosage","quantity_dispense","patientID","drugs","dispense","error","modalIsOpen","handleChange","target","name","value","setState","toggleModal","prev","resetForm","handleSubmit","e","preventDefault","prevState","concat","handleDelete","deleteItem","itemToDelte","filter","item","length","DispensaryFormModal","color","DispensaryTable","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Button, Card, CardHeader, CardBody, CardFooter, \n    FormGroup, ModalHeader, ModalFooter, ModalBody, Modal } from 'reactstrap';\nimport { today } from '../helpers';\nimport { FaPlus } from 'react-icons/fa';\n\nclass DispensaryForm extends Component {\n    state = {\n      date: today,\n        dosage: '',\n        quantity_dispense: '',\n      patientID: '',\n      drugs: '',\n      dispense: [],\n      error: '',\n      modalIsOpen: false\n    };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({\n        error: '',\n      [name]: value,\n    });\n  }\n\n  toggleModal = () => this.setState(prev => ({ modalIsOpen: !prev.modalIsOpen }))\n\n  resetForm = () => {\n      this.setState({\n        patientID:'',\n        drugs:'',\n        dosage:\"\",\n        quantity_dispense:''\n      })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { patientID, drugs, dosage, quantity_dispense } = this.state;\n\n    if(patientID===''||drugs===''||dosage===''||quantity_dispense===''){\n        this.setState({ error: 'Please complete the form' })\n    } else {\n        this.setState(prevState => ({ \n            modalIsOpen: false,\n            dispense: prevState.dispense.concat({\n                patientID: this.state.patientID,\n                drugs: this.state.drugs,\n                dosage: this.state.dosage,\n                quantity_dispense: this.state.quantity_dispense,\n               \n            }),\n        }), () => this.resetForm());\n    }\n    \n  }\n\n  handleDelete = (deleteItem) => {\n    let itemToDelte = this.state.dispense.filter((item)=> item !== deleteItem)\n     this.setState({dispense: itemToDelte})\n  }\n\n  render() {\n      const {\n          handleChange, \n          handleDelete, \n          handleSubmit, \n          state: { \n              error,\n              date, \n              patientID, \n              drugs, \n              dispense, \n            dosage, \n            quantity_dispense,\n            modalIsOpen\n            }\n        } = this;\n    return (\n        <Card>\n            <CardHeader><h5 className=\"text-center\">Dispensary Form</h5></CardHeader>\n            <CardBody>\n                <div>\n                <FormGroup row>\n                    <div className=\"col-md-4 col-lg-6\">\n                        <label>Date</label>\n                        <input\n                            onChange={handleChange}\n                            className=\"form-control\"\n                            type=\"date\"\n                            name=\"date\"\n                            value={today}\n                        />\n                    </div>\n                        <div className=\"col-md-6 col-lg-6\">\n                        <label>Patient ID</label>\n                        <input\n                            onChange={handleChange}\n                            className=\"form-control\"\n                            type=\"text\"\n                            value={patientID}\n                            name=\"patientID\"\n                        />\n                    </div>\n                </FormGroup>\n                \n                <button \n                    className=\"btn btn-primary offset-md-5 offset-lg-5 col-md-2 col-lg-2 btn-sm\"\n                    onClick={this.toggleModal}\n                >\n                    <FaPlus />\n                </button>\n            </div>\n        </CardBody>\n        <br />\n        {dispense.length ? \n        <>\n            <CardHeader>\n                <h6 align=\"center\">Dispensary Details</h6>\n            </CardHeader>\n            <CardBody>\n                <DispensaryTable dispense={dispense} handleDelete={handleDelete} />\n            </CardBody>\n            <CardFooter>\n                <Button \n                    size=\"sm\" \n                    color=\"success\" \n                    onClick={handleSubmit}\n                    className=\"offset-md-5 offset-lg-5 col-md-2 col-lg-2\"\n                >Submit</Button>\n            </CardFooter>\n        </>\n        : null}\n        <DispensaryFormModal \n            modalIsOpen={modalIsOpen}\n            handleChange={handleChange} \n            drugs={drugs} \n            quantity_dispense={quantity_dispense} \n            dosage={dosage} \n            toggleModal={this.toggleModal}\n            handleSubmit={handleSubmit}\n            error={error}\n        />\n        </Card>\n      \n    );\n  }\n}\n\nfunction DispensaryFormModal({\n    modalIsOpen,\n    toggleModal,\n    handleChange,\n    drugs,\n    quantity_dispense,\n    dosage,\n    handleSubmit,\n    error\n}) {\n    return (\n        <Modal isOpen={modalIsOpen} toggle={toggleModal} size=\"lg\">\n            <ModalHeader toggle={toggleModal}>Drug to Dispense</ModalHeader>\n            <ModalBody>\n            <form >\n                <FormGroup row>\n                    <div className=\"col-md-6 col-lg-6\">\n                        <label>Drugs</label>\n                        <input\n                            onChange={handleChange}\n                            className=\"form-control\"\n                            type=\"text\"\n                            name=\"drugs\"\n                            value={drugs}\n                        />\n                    </div>\n                    <div className=\"col-md-6 col-lg-6\">\n                        <label>Dosage</label>\n                        <input\n                            onChange={handleChange}\n                            className=\"form-control\"\n                            type=\"text\"\n                            name=\"dosage\"\n                            value={dosage}\n                        />\n                    </div>\n                </FormGroup>\n                <FormGroup row>\n                \n                    <div className=\"col-md-6 col-lg-6\">\n                        <label>Quantity Dispensed</label>\n                        <input\n                            onChange={handleChange}\n                            className=\"form-control\"\n                            type=\"text\"\n                            name=\"quantity_dispense\"\n                            value={quantity_dispense}\n                        />\n                    </div>\n                </FormGroup>\n                {error!==''? <center><p style={{color:'red'}}>{error}</p></center>:null}\n                \n            </form>\n            </ModalBody>\n            <ModalFooter>\n                <input \n                    onClick={handleSubmit} \n                    type=\"submit\" \n                    className=\"btn btn-primary offset-md-5 offset-lg-5 col-md-2 col-lg-2 btn-sm\" \n                />\n            </ModalFooter>\n        </Modal>\n    )\n}\n\n//dispensary table\nfunction DispensaryTable ({ dispense, handleDelete }) {\n    return (\n        <Table striped bordered hover>\n            <thead>\n                <tr>\n                <th>PatientID</th>\n                <th>Drugs</th>\n                <th>Dosage</th>\n                <th>Quantity Dispensed</th>\n                <th>Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {/* //this where all element will be put in an appropriate colum/row */}\n            {dispense.map((item, index) => (\n                <tr key={index}>\n                <td> {item.patientID}</td>\n                <td>{item.drugs}</td>\n                <td>{item.dosage}</td>\n                <td>{item.quantity_dispense}</td>\n\n                <td>\n                    \n                <Button outline size=\"sm\" color=\"danger\" onClick={() => handleDelete(item)}>delete</Button>\n                </td>\n                </tr>\n            ))}\n            </tbody>\n        </Table>\n    )\n}\nexport default DispensaryForm;\n"]},"metadata":{},"sourceType":"module"}