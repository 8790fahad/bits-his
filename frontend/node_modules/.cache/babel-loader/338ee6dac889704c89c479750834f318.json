{"ast":null,"code":"import _classCallCheck from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Desktop/bits-his/src/components/Lab Module/CompletedLabTests.js\";\nimport React from 'react';\nimport { Table } from 'reactstrap';\nimport { _fetchData } from '../helpers'; // import Loading from '../Loading'\n\nvar CompletedLabTests =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CompletedLabTests, _React$Component);\n\n  function CompletedLabTests(props) {\n    var _this;\n\n    _classCallCheck(this, CompletedLabTests);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompletedLabTests).call(this, props));\n\n    _this.fetchCompletedTest = function () {\n      var route = 'lab/testCompleted';\n\n      var success_callback = function success_callback(data) {\n        return _this.setState({\n          completedLabTests: data\n        });\n      };\n\n      var error_callback = function error_callback(error) {\n        return _this.setState({\n          error: error\n        });\n      };\n\n      _fetchData({\n        route: route,\n        success_callback: success_callback,\n        error_callback: error_callback\n      });\n    };\n\n    _this.onFilterTextChange = function (e) {\n      return _this.setState({\n        filterText: e.target.value\n      });\n    };\n\n    _this.state = {\n      completedLabTests: [],\n      error: '',\n      filterText: ''\n    };\n    return _this;\n  }\n\n  _createClass(CompletedLabTests, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchCompletedTest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rows = [];\n      var _this$state = this.state,\n          filterText = _this$state.filterText,\n          completedLabTests = _this$state.completedLabTests,\n          error = _this$state.error;\n      completedLabTests.forEach(function (test, i) {\n        if (test.patient_id.indexOf(filterText) === -1) {\n          return;\n        }\n\n        rows.push(React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, i + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, test.date.slice(0, 10)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, test.patient_id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, test.test_id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, test.test), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, test.seen_by)));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Completed Lab Tests\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        value: filterText,\n        placeholder: \"Search for a test by patient's ID\",\n        onChange: this.onFilterTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), error.length > 0 && React.createElement(\"p\", {\n        className: \"alert-danger text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, error), \" \", completedLabTests.length > 0 && React.createElement(Table, {\n        bordered: true,\n        hover: true,\n        striped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"S/N\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Patient ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Test ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Test\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Requested By\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, rows)), !error.length && !completedLabTests.length && React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"No Record found\"));\n    }\n  }]);\n\n  return CompletedLabTests;\n}(React.Component);\n\nexport { CompletedLabTests as default };","map":{"version":3,"sources":["/root/Desktop/bits-his/src/components/Lab Module/CompletedLabTests.js"],"names":["React","Table","_fetchData","CompletedLabTests","props","fetchCompletedTest","route","success_callback","data","setState","completedLabTests","error_callback","error","onFilterTextChange","e","filterText","target","value","state","rows","forEach","test","i","patient_id","indexOf","push","date","slice","test_id","seen_by","length","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table } from 'reactstrap';\nimport { _fetchData } from '../helpers';\n// import Loading from '../Loading'\n\nexport default class CompletedLabTests extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      completedLabTests: [],\n      error: '',\n      filterText: '',\n    };\n  }\n\n  fetchCompletedTest = () => {\n    let route = 'lab/testCompleted';\n    let success_callback = data => this.setState({ completedLabTests: data });\n    let error_callback = error => this.setState({ error });\n    _fetchData({ route, success_callback, error_callback });\n  };\n\n  componentDidMount() {\n    this.fetchCompletedTest();\n  }\n\n  onFilterTextChange = e => this.setState({ filterText: e.target.value });\n\n  render() {\n    let rows = [];\n    let { filterText, completedLabTests, error } = this.state;\n    completedLabTests.forEach((test, i) => {\n      if (test.patient_id.indexOf(filterText) === -1) {\n        return;\n      }\n      rows.push(\n        <tr key={i}>\n          <td>{i + 1}</td>\n          <td>{test.date.slice(0, 10)}</td>\n          <td>{test.patient_id}</td>\n          <td>{test.test_id}</td>\n          <td>{test.test}</td>\n          <td>{test.seen_by}</td>\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <h4 className=\"text-center\">Completed Lab Tests</h4>\n        <input\n          className=\"form-control\"\n          value={filterText}\n          placeholder=\"Search for a test by patient's ID\"\n          onChange={this.onFilterTextChange}\n        />\n        <br />\n        {error.length>0 && (\n          <p className=\"alert-danger text-center\">{error}</p>\n        )} { completedLabTests.length>0 && (\n          <Table bordered hover striped>\n            <thead>\n              <tr>\n                <th>S/N</th>\n                <th>Date</th>\n                <th>Patient ID</th>\n                <th>Test ID</th>\n                <th>Test</th>\n                <th>Requested By</th>\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        )}\n        {!error.length && !completedLabTests.length && <p className=\"text-center\">No Record found</p>}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}