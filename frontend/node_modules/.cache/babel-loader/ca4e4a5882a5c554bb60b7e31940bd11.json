{"ast":null,"code":"import _classCallCheck from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/root/Desktop/bits-his/src/components/Records Module/PatientAssignedToday.js\";\n//importing neccessary modules\nimport React, { Component } from 'react';\nimport { Card, Table } from 'reactstrap';\nimport FreeScrollBar from 'react-free-scrollbar';\nimport { _fetchData } from '../helpers';\nimport Loading from '../loading';\n/**\n * This component renders the table consisting of the\n * assigned for a particular date\n */\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.state = {\n      list: [],\n      error: ''\n    };\n    _this.fetchData = _this.fetchData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * create fetch method to fetch list of doctors with the corresponding total\n   * number of patients from the database\n   */\n\n\n  _createClass(_default, [{\n    key: \"fetchData\",\n    value: function fetchData() {\n      var _this2 = this;\n\n      var route = 'patientrecords/patientAssignedToday';\n\n      var success_callback = function success_callback(data) {\n        return _this2.setState({\n          list: data\n        });\n      };\n\n      var error_callback = function error_callback(error) {\n        return _this2.setState({\n          error: error\n        });\n      };\n\n      _fetchData({\n        route: route,\n        success_callback: success_callback,\n        error_callback: error_callback\n      });\n    }\n    /**\n     * when component has been mounted, the list of patients assigned for\n     * for a paticular doctor is fetched from the database\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var today = new Date();\n      var _this$state = this.state,\n          error = _this$state.error,\n          list = _this$state.list;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"border-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"List of patients assigned today \", today.toLocaleDateString()), React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: '50vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(FreeScrollBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, !list.length ? !error.length ? React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"No Record Found\") : React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Doctors\"), React.createElement(\"th\", {\n        className: \"moveToCenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Patients\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, list.map(function (doctor, i) {\n        return React.createElement(\"tr\", {\n          style: {\n            cursor: 'pointer'\n          },\n          key: i,\n          onClick: function onClick() {\n            return _this3.props.getNewListByDoctor(doctor.Doctors);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, i + 1), React.createElement(\"td\", {\n          style: {\n            textAlign: 'left'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, doctor.Doctors), React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, doctor.Patients));\n      }))), error.length ? React.createElement(\"p\", {\n        className: \"alert alert-danger text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, error) : null))));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/root/Desktop/bits-his/src/components/Records Module/PatientAssignedToday.js"],"names":["React","Component","Card","Table","FreeScrollBar","_fetchData","Loading","props","state","list","error","fetchData","bind","route","success_callback","data","setState","error_callback","today","Date","textAlign","toLocaleDateString","width","height","length","map","doctor","i","cursor","getNewListByDoctor","Doctors","Patients"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,YAA5B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA;;;;;;;;;;AAKE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AAPiB;AAQlB;AAED;;;;;;;;gCAKY;AAAA;;AACV,UAAIC,KAAK,GAAG,qCAAZ;;AACA,UAAIC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,IAAI;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEP,UAAAA,IAAI,EAAEM;AAAR,SAAd,CAAJ;AAAA,OAA3B;;AACA,UAAIE,cAAc,GAAG,SAAjBA,cAAiB,CAAAP,KAAK;AAAA,eAAI,MAAI,CAACM,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAALA;AAAF,SAAd,CAAJ;AAAA,OAA1B;;AACAL,MAAAA,UAAU,CAAC;AAAEQ,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,gBAAgB,EAAhBA,gBAAT;AAA2BG,QAAAA,cAAc,EAAdA;AAA3B,OAAD,CAAV;AACD;AAED;;;;;;;wCAIoB;AAClB,WAAKN,SAAL;AACD;;;6BAEQ;AAAA;;AACP,UAAMO,KAAK,GAAG,IAAIC,IAAJ,EAAd;AADO,wBAEiB,KAAKX,KAFtB;AAAA,UAECE,KAFD,eAECA,KAFD;AAAA,UAEQD,IAFR,eAEQA,IAFR;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAAEW,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACmCF,KAAK,CAACG,kBAAN,EADnC,CADF,EAIE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACd,IAAI,CAACe,MAAN,GACC,CAACd,KAAK,CAACc,MAAP,GACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJH,GAOC,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,IAAI,CAACgB,GAAL,CAAS,UAACC,MAAD,EAASC,CAAT;AAAA,eACR;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WADT;AAEE,UAAA,GAAG,EAAED,CAFP;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACpB,KAAL,CAAWsB,kBAAX,CAA8BH,MAAM,CAACI,OAArC,CAAN;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,CAAC,GAAG,CAAT,CAJF,EAKE;AAAI,UAAA,KAAK,EAAE;AAAEP,YAAAA,SAAS,EAAE;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmCM,MAAM,CAACI,OAA1C,CALF,EAME;AAAI,UAAA,KAAK,EAAE;AAAEV,YAAAA,SAAS,EAAE;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGM,MAAM,CAACK,QADV,CANF,CADQ;AAAA,OAAT,CADH,CARF,CARJ,EAgCGrB,KAAK,CAACc,MAAN,GACC;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+Cd,KAA/C,CADD,GAEG,IAlCN,CARF,CAJF,CADF,CADF;AAsDD;;;;EAxF0BT,S","sourcesContent":["//importing neccessary modules\nimport React, { Component } from 'react';\nimport { Card, Table } from 'reactstrap';\nimport FreeScrollBar from 'react-free-scrollbar';\nimport { _fetchData } from '../helpers';\nimport Loading from '../loading';\n\n/**\n * This component renders the table consisting of the\n * assigned for a particular date\n */\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      error: '',\n    };\n\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  /**\n   * create fetch method to fetch list of doctors with the corresponding total\n   * number of patients from the database\n   */\n\n  fetchData() {\n    let route = 'patientrecords/patientAssignedToday';\n    let success_callback = data => this.setState({ list: data });\n    let error_callback = error => this.setState({ error });\n    _fetchData({ route, success_callback, error_callback });\n  }\n\n  /**\n   * when component has been mounted, the list of patients assigned for\n   * for a paticular doctor is fetched from the database\n   */\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    const today = new Date();\n    const { error, list } = this.state;\n    return (\n      <div>\n        <Card className=\"border-secondary\">\n          <h6 style={{ textAlign: 'center' }}>\n            List of patients assigned today {today.toLocaleDateString()}\n          </h6>\n          <div\n            style={{\n              width: '100%',\n              height: '50vh',\n            }}>\n            {/* \n                        rendering the daily list table of doctors with the corresponding total patients assigned to them\n                    */}\n            <FreeScrollBar>\n              {!list.length ? (\n                !error.length ? (\n                  <Loading />\n                ) : (\n                  <p>No Record Found</p>\n                )\n              ) : (\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th />\n                      <th>Doctors</th>\n                      <th className=\"moveToCenter\">Patients</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {list.map((doctor, i) => (\n                      <tr\n                        style={{ cursor: 'pointer' }}\n                        key={i}\n                        onClick={() => this.props.getNewListByDoctor(doctor.Doctors)}>\n                        <td>{i + 1}</td>\n                        <td style={{ textAlign: 'left' }}>{doctor.Doctors}</td>\n                        <td style={{ textAlign: 'center' }}>\n                          {doctor.Patients}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              )}\n              {error.length ? (\n                <p className=\"alert alert-danger text-center\">{error}</p>\n              ) : null}\n            </FreeScrollBar>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}