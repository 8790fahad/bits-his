{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar VERTICAL = 'vertial';\nvar HORIZONTAL = 'horizontal';\nvar styles = {\n  main: {\n    overflow: 'hidden',\n    position: 'relative',\n    boxSizing: 'border-box'\n  },\n  container: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    overflow: 'scroll',\n    boxSizing: 'border-box'\n  },\n  track: {\n    vertical: {\n      position: 'absolute',\n      top: '0',\n      right: '0'\n    },\n    verticalCustomize: {\n      width: '10px',\n      backgroundColor: '#FAFAFA',\n      borderLeft: '1px solid #E8E8E8',\n      transition: 'opacity 0.3s'\n    },\n    horizontal: {\n      position: 'absolute',\n      left: '0',\n      bottom: '0'\n    },\n    horizontalCustomize: {\n      height: '10px',\n      backgroundColor: '#FAFAFA',\n      borderTop: '1px solid #E8E8E8',\n      transition: 'opacity 0.3s'\n    }\n  },\n  handler: {\n    vertical: {\n      position: 'absolute'\n    },\n    verticalCustomize: {\n      width: '100%',\n      backgroundColor: '#C1C1C1',\n      borderRadius: '5px',\n      transition: 'opacity 0.3s'\n    },\n    horizontal: {\n      position: 'absolute'\n    },\n    horizontalCustomize: {\n      height: '100%',\n      backgroundColor: '#C1C1C1',\n      borderRadius: '5px',\n      transition: 'opacity 0.3s'\n    }\n  },\n  square: {\n    position: 'absolute',\n    width: '10px',\n    height: '10px',\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'white'\n  }\n};\n\nvar FreeScrollbar = function (_React$PureComponent) {\n  _inherits(FreeScrollbar, _React$PureComponent);\n\n  function FreeScrollbar(props) {\n    _classCallCheck(this, FreeScrollbar);\n\n    var _this = _possibleConstructorReturn(this, (FreeScrollbar.__proto__ || Object.getPrototypeOf(FreeScrollbar)).call(this, props));\n\n    _this.el = null;\n    _this.offsetHeight = 0;\n    _this.offsetWidth = 0;\n    _this.lastScrollHeight = 0;\n    _this.lastScrollWidth = 0;\n    _this.activeHandler = null;\n    _this.lastMousePos = null;\n    _this.lastContainerScrollTop = 0;\n    _this.lastContainerScrollLeft = 0;\n    _this.handlerHider = null;\n    _this.scrollbarScrollThrottle = null;\n\n    _this.handleReadyStateChange = function () {\n      if (document.readyState === 'complete') {\n        _this.prepareScrollbar();\n      }\n    };\n\n    _this.prepareScrollbar = function () {\n      _this.collectInfo();\n\n      _this.updateTrackVisibilities();\n\n      _this.handlerContainerScroll();\n\n      if (_this.props.start.includes('bottom')) {\n        _this.el.scrollTop = _this.el.scrollHeight;\n      }\n\n      if (_this.props.start.includes('right')) {\n        _this.el.scrollLeft = _this.el.scrollWidth;\n      }\n    };\n\n    _this.collectInfo = function () {\n      _this.offsetWidth = _this.el.offsetWidth;\n      _this.offsetHeight = _this.el.offsetHeight;\n    };\n\n    _this.updateTrackVisibilities = function () {\n      var el = _this.el;\n      var scrollHeight = el.scrollHeight,\n          scrollWidth = el.scrollWidth;\n      if (scrollHeight === _this.lastScrollHeight && scrollWidth === _this.lastScrollWidth) return;\n\n      _this.setState({\n        showVeriticalTrack: scrollHeight > _this.offsetHeight,\n        showHorizontalTrack: scrollWidth > _this.offsetWidth\n      });\n\n      _this.lastScrollWidth = scrollWidth;\n      _this.lastScrollHeight = scrollHeight;\n    };\n\n    _this.runFunc = function (funcName) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (_this[funcName]) {\n        _this[funcName](args);\n      }\n    };\n\n    _this.throttle = function (func, timeout) {\n      if (!func) return null;\n      var canRun = true;\n      return function () {\n        if (canRun) {\n          canRun = false;\n          func.apply(undefined, arguments);\n          setTimeout(function () {\n            canRun = true;\n          }, timeout);\n        }\n      };\n    };\n\n    _this.handlerContainerScroll = function (e) {\n      if (_this.props.autohide) {\n        clearTimeout(_this.handlerHider);\n\n        _this.setState({\n          hideHandler: false\n        });\n\n        _this.handlerHider = setTimeout(function () {\n          _this.setState({\n            hideHandler: true\n          });\n        }, _this.props.timeout);\n      }\n\n      var el = _this.el;\n      var top = el.scrollTop / (el.scrollHeight - _this.offsetHeight) * (1 - _this.offsetHeight / _this.lastScrollHeight) * 100;\n      var bottom = (1 - (el.scrollTop + _this.offsetHeight) / (el.scrollHeight - _this.offsetHeight) * (1 - _this.offsetHeight / _this.lastScrollHeight)) * 100;\n      if (bottom < 0) bottom = 0;\n      var left = el.scrollLeft / (el.scrollWidth - _this.offsetWidth) * (1 - _this.offsetWidth / _this.lastScrollWidth) * 100;\n      var right = (1 - (el.scrollLeft + _this.offsetWidth) / (el.scrollWidth - _this.offsetWidth) * (1 - _this.offsetWidth / _this.lastScrollWidth)) * 100;\n      if (right < 0) right = 0;\n      var pos = {\n        top: top,\n        bottom: bottom,\n        left: left,\n        right: right\n      };\n\n      _this.setState({\n        handlerPos: pos\n      });\n\n      _this.runFunc('scrollbarScrollThrottle');\n    };\n\n    _this.handleVerticalHandlerMouseDown = function (d, e) {\n      _this.lastContainerScrollTop = _this.el.scrollTop;\n      _this.lastContainerScrollLeft = _this.el.scrollLeft;\n      _this.activeHandler = d;\n      _this.lastMousePos = {\n        top: e.clientY,\n        left: e.clientX\n      };\n\n      _this.setState({\n        noselect: true\n      });\n    };\n\n    _this.handleHandlerMouseMove = function (e) {\n      if (_this.activeHandler === VERTICAL) {\n        var delY = e.clientY - _this.lastMousePos.top;\n        _this.el.scrollTop = _this.lastContainerScrollTop + delY / _this.offsetHeight * _this.lastScrollHeight;\n      }\n\n      if (_this.activeHandler === HORIZONTAL) {\n        var delX = e.clientX - _this.lastMousePos.left;\n        _this.el.scrollLeft = _this.lastContainerScrollLeft + delX / _this.offsetWidth * _this.lastScrollWidth;\n      }\n    };\n\n    _this.handleHandlerMouseUp = function () {\n      _this.lastMousePos = null;\n      _this.activeHandler = null;\n\n      _this.setState({\n        noselect: false\n      });\n    };\n\n    _this.state = {\n      showVeriticalTrack: false,\n      showHorizontalTrack: false,\n      noselect: false,\n      handlerPos: {\n        top: 0,\n        left: 0\n      },\n      hideHandler: props.autohide\n    }; // build prop funcs\n\n    _this.scrollbarScrollThrottle = props.onScrollbarScrollTimeout > 0 ? _this.throttle(props.onScrollbarScroll, props.onScrollbarScrollTimeout) : props.onScrollbarScroll;\n    return _this;\n  }\n  /** All prop funcs should be built to this funcs to run */\n\n  /** @function {Function} - prop func */\n\n\n  _createClass(FreeScrollbar, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      document.addEventListener('mousemove', this.handleHandlerMouseMove);\n      document.addEventListener('mouseup', this.handleHandlerMouseUp);\n      document.addEventListener('readystatechange', this.handleReadyStateChange);\n      this.prepareScrollbar();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      document.removeEventListener('mousemove', this.handleHandlerMouseMove);\n      document.removeEventListener('mouseup', this.handleHandlerMouseUp);\n      document.removeEventListener('readystatechange', this.handleReadyStateChange);\n      clearTimeout(this.handlerHider);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.updateTrackVisibilities();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _containerStyles,\n          _this2 = this; // Dynamic styles\n\n\n      var containerStyles = (_containerStyles = {\n        paddingBottom: this.props.fixed ? 0 : this.state.showHorizontalTrack ? this.props.tracksize : 0\n      }, _defineProperty(_containerStyles, 'paddingBottom', this.props.fixed ? 0 : this.state.showVeriticalTrack ? this.props.tracksize : 0), _defineProperty(_containerStyles, 'right', '-' + this.props.browserOffset), _defineProperty(_containerStyles, 'bottom', '-' + this.props.browserOffset), _containerStyles);\n\n      if (this.state.noselect) {\n        containerStyles.MozUserSelect = 'none';\n        containerStyles.WebkitUserSelect = 'none';\n        containerStyles.msUserSelect = 'none';\n      }\n\n      var verticalTrackStyles = {\n        bottom: this.state.showHorizontalTrack ? this.props.tracksize : '0',\n        opacity: this.state.hideHandler ? 0 : 1\n      };\n      var horizontalTrackStyles = {\n        right: this.state.showVeriticalTrack ? this.props.tracksize : '0',\n        opacity: this.state.hideHandler ? 0 : 1\n      };\n      var verticalHandlerStyles = {\n        top: this.state.handlerPos.top + '%',\n        bottom: this.state.handlerPos.bottom + '%',\n        opacity: this.state.hideHandler ? 0 : 1\n      };\n      var horizontalHandlerStyles = {\n        left: this.state.handlerPos.left + '%',\n        right: this.state.handlerPos.right + '%',\n        opacity: this.state.hideHandler ? 0 : 1\n      };\n      return _react2.default.createElement('div', {\n        className: 'FreeScrollbar ' + this.props.className,\n        style: _extends({}, this.props.style, styles.main)\n      }, _react2.default.createElement('div', {\n        className: 'FreeScrollbar-container',\n        style: _extends({}, containerStyles, styles.container),\n        ref: function ref(container) {\n          return _this2.el = container;\n        },\n        onScroll: this.handlerContainerScroll\n      }, this.props.children), this.state.showVeriticalTrack ? _react2.default.createElement('div', {\n        className: 'FreeScrollbar-vertical-track ' + (this.props.className ? this.props.className + '-vertical-track' : ''),\n        style: this.props.className ? Object.assign(verticalTrackStyles, styles.track.vertical) : Object.assign(verticalTrackStyles, styles.track.vertical, styles.track.verticalCustomize)\n      }, _react2.default.createElement('div', {\n        className: 'FreeScrollbar-vertical-handler ' + (this.props.className ? this.props.className + '-vertical-handler' : ''),\n        onMouseDown: this.handleVerticalHandlerMouseDown.bind(this, VERTICAL),\n        style: this.props.className ? Object.assign(verticalHandlerStyles, styles.handler.vertical) : Object.assign(verticalHandlerStyles, styles.handler.vertical, styles.handler.verticalCustomize)\n      })) : null, this.state.showHorizontalTrack ? _react2.default.createElement('div', {\n        className: 'FreeScrollbar-horizontal-track ' + (this.props.className ? this.props.className + '-horizontal-track' : ''),\n        style: this.props.className ? Object.assign(horizontalTrackStyles, styles.track.horizontal) : Object.assign(horizontalTrackStyles, styles.track.horizontal, styles.track.horizontalCustomize)\n      }, _react2.default.createElement('div', {\n        className: 'FreeScrollbar-horizontal-handler ' + (this.props.className ? this.props.className + '-horizontal-handler' : ''),\n        onMouseDown: this.handleVerticalHandlerMouseDown.bind(this, HORIZONTAL),\n        style: this.props.className ? Object.assign(horizontalHandlerStyles, styles.handler.horizontal) : Object.assign(horizontalHandlerStyles, styles.handler.horizontal, styles.handler.horizontalCustomize)\n      })) : null, this.state.showHorizontalTrack && this.state.showVeriticalTrack && !this.props.fixed ? _react2.default.createElement('div', {\n        className: 'FreeScrollbar-square ' + (this.props.className ? this.props.className + '-square' : ''),\n        style: styles.square\n      }) : null);\n    }\n  }]);\n\n  return FreeScrollbar;\n}(_react2.default.PureComponent);\n\nFreeScrollbar.displayName = 'FreeScrollbar';\nFreeScrollbar.propTypes = {\n  className: _propTypes2.default.string,\n  style: _propTypes2.default.object,\n  fixed: _propTypes2.default.bool,\n  autohide: _propTypes2.default.bool,\n  timeout: _propTypes2.default.number,\n  tracksize: _propTypes2.default.string,\n  start: _propTypes2.default.string,\n  browserOffset: _propTypes2.default.string,\n  onScrollbarScroll: _propTypes2.default.func,\n  onScrollbarScrollTimeout: _propTypes2.default.number\n};\nFreeScrollbar.defaultProps = {\n  className: '',\n  style: {\n    width: '100%',\n    height: '100%'\n  },\n  fixed: false,\n  autohide: false,\n  timeout: 2000,\n  tracksize: '10px',\n  start: 'top left',\n  browserOffset: '17px',\n  onScrollbarScroll: null,\n  onScrollbarScrollTimeout: 300\n};\nexports.default = FreeScrollbar;\n;","map":null,"metadata":{},"sourceType":"script"}