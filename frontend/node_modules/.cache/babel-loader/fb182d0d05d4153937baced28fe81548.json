{"ast":null,"code":"import _classCallCheck from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Desktop/bits-his/src/components/Records Module/RenderPatientList.js\";\nimport React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport PatientTable from './PatientTable';\nimport PropTypes from 'prop-types';\n/**\n * This component renders the table that consist\n * the table of patients and also a search textbox\n * that filters the patient with whatever you input\n */\n\nvar RenderPatientList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RenderPatientList, _Component);\n\n  function RenderPatientList(props) {\n    var _this;\n\n    _classCallCheck(this, RenderPatientList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RenderPatientList).call(this, props));\n\n    _this.handleFilterTextChange = function (filterText) {\n      _this.setState({\n        filterText: filterText\n      });\n    };\n\n    _this.state = {\n      filterText: ''\n    };\n    return _this;\n  } //handles the change in the search text field\n\n\n  _createClass(RenderPatientList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          patientlist = _this$props.patientlist,\n          openDoctorsModal = _this$props.openDoctorsModal,\n          error = _this$props.error,\n          openModal = _this$props.openModal,\n          renderEditButton = _this$props.renderEditButton;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        filterText: this.state.filterText,\n        onFilterTextChange: this.handleFilterTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(PatientTable, {\n        patientlist: patientlist,\n        filterText: this.state.filterText,\n        openDoctorsModal: openDoctorsModal,\n        error: error\n        /*\n              this part is used to enable in-records delete operations\n              to activate this action, uncomment the code below\n            */\n        // deletepatientrecords={this.props.deletepatientrecords}\n        ,\n        openModal: openModal,\n        renderEditButton: renderEditButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RenderPatientList;\n}(Component); //setting the default props\n\n\nexport { RenderPatientList as default };\nRenderPatientList.defaultProps = {\n  patientlist: []\n}; // RenderPatientList.propTypes = {\n//   patientlist: PropTypes.array\n// }","map":{"version":3,"sources":["/root/Desktop/bits-his/src/components/Records Module/RenderPatientList.js"],"names":["React","Component","SearchBar","PatientTable","PropTypes","RenderPatientList","props","handleFilterTextChange","filterText","setState","state","patientlist","openDoctorsModal","error","openModal","renderEditButton","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;;;;;;IAKqBC,iB;;;;;AACnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;;AADiB,UASnBC,sBATmB,GASM,UAAAC,UAAU,EAAI;AACrC,YAAKC,QAAL,CAAc;AACZD,QAAAA,UAAU,EAAEA;AADA,OAAd;AAGD,KAbkB;;AAGjB,UAAKE,KAAL,GAAa;AACXF,MAAAA,UAAU,EAAE;AADD,KAAb;AAHiB;AAMlB,G,CAED;;;;;6BAOS;AAAA,wBAOH,KAAKF,KAPF;AAAA,UAELK,WAFK,eAELA,WAFK;AAAA,UAGLC,gBAHK,eAGLA,gBAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLC,SALK,eAKLA,SALK;AAAA,UAMLC,gBANK,eAMLA,gBANK;AAQP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,SAAD;AACE,QAAA,UAAU,EAAE,KAAKL,KAAL,CAAWF,UADzB;AAEE,QAAA,kBAAkB,EAAE,KAAKD,sBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EASE,oBAAC,YAAD;AACE,QAAA,WAAW,EAAEI,WADf;AAEE,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWF,UAFzB;AAGE,QAAA,gBAAgB,EAAEI,gBAHpB;AAIE,QAAA,KAAK,EAAEC;AACP;;;;AAIA;AATF;AAUE,QAAA,SAAS,EAAEC,SAVb;AAWE,QAAA,gBAAgB,EAAEC,gBAXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAyBD;;;;EAjD4Cd,S,GAoD/C;;;SApDqBI,iB;AAqDrBA,iBAAiB,CAACW,YAAlB,GAAiC;AAC/BL,EAAAA,WAAW,EAAE;AADkB,CAAjC,C,CAIA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport PatientTable from './PatientTable';\nimport PropTypes from 'prop-types';\n\n/**\n * This component renders the table that consist\n * the table of patients and also a search textbox\n * that filters the patient with whatever you input\n */\nexport default class RenderPatientList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filterText: '',\n    };\n  }\n\n  //handles the change in the search text field\n  handleFilterTextChange = filterText => {\n    this.setState({\n      filterText: filterText,\n    });\n  };\n\n  render() {\n    const {\n      patientlist,\n      openDoctorsModal,\n      error,\n      openModal,\n      renderEditButton,\n    } = this.props;\n    return (\n      <div>\n        {/* search text field */}\n        <SearchBar\n          filterText={this.state.filterText}\n          onFilterTextChange={this.handleFilterTextChange}\n        />\n        <br />\n\n        {/* the table component */}\n        <PatientTable\n          patientlist={patientlist}\n          filterText={this.state.filterText}\n          openDoctorsModal={openDoctorsModal}\n          error={error}\n          /*\n                this part is used to enable in-records delete operations\n                to activate this action, uncomment the code below\n              */\n          // deletepatientrecords={this.props.deletepatientrecords}\n          openModal={openModal}\n          renderEditButton={renderEditButton}\n        />\n      </div>\n    );\n  }\n}\n\n//setting the default props\nRenderPatientList.defaultProps = {\n  patientlist: [],\n};\n\n// RenderPatientList.propTypes = {\n//   patientlist: PropTypes.array\n// }\n"]},"metadata":{},"sourceType":"module"}