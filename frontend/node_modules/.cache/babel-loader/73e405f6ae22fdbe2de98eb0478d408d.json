{"ast":null,"code":"import _defineProperty from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Desktop/bits-his/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Desktop/bits-his/src/components/Account Module/ServicesSetupForm.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Card, CardHeader, CardBody, Table, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { FaCaretUp } from 'react-icons/fa';\n\nvar ServicesSetupForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ServicesSetupForm, _Component);\n\n  function ServicesSetupForm(props) {\n    var _this;\n\n    _classCallCheck(this, ServicesSetupForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ServicesSetupForm).call(this, props));\n\n    _this.onInputChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.toggleHeadModal = function () {\n      return _this.setState(function (prevState) {\n        return {\n          headModalIsOpen: !prevState.headModalIsOpen\n        };\n      });\n    };\n\n    _this.selectHead = function (head) {\n      return _this.setState({\n        selectedHead: head\n      });\n    };\n\n    _this.openHeadModal = function () {\n      _this.toggleHeadModal();\n    };\n\n    _this.create = function (e) {\n      e.preventDefault();\n      var head = _this.state.head;\n      head ? _this.createSub() : _this.creatHead();\n\n      _this.resetForm();\n    };\n\n    _this.creatHead = function () {\n      var _this$state = _this.state,\n          accHead = _this$state.accHead,\n          headCode = _this$state.headCode,\n          description = _this$state.description,\n          amount = _this$state.amount;\n      var data = {\n        head: accHead,\n        headCode: headCode,\n        description: description,\n        amount: amount\n      };\n      console.log(data);\n    };\n\n    _this.createSub = function () {\n      var _this$state2 = _this.state,\n          head = _this$state2.head,\n          accHead = _this$state2.accHead,\n          headCode = _this$state2.headCode,\n          description = _this$state2.description,\n          amount = _this$state2.amount;\n      var data = {\n        head: head,\n        sub: accHead,\n        subCode: headCode,\n        description: description,\n        amount: amount\n      };\n      console.log(data);\n    };\n\n    _this.resetForm = function () {\n      _this.setState({\n        accountType: null,\n        head: null,\n        accHead: null,\n        headCode: null,\n        description: null,\n        amount: null\n      });\n    };\n\n    _this.state = {\n      accountType: null,\n      head: null,\n      accHead: null,\n      headCode: null,\n      description: null,\n      amount: null,\n      headModalIsOpen: false,\n      headList: [],\n      selectedHead: null\n    };\n    return _this;\n  }\n\n  _createClass(ServicesSetupForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onInputChange = this.onInputChange,\n          toggleHeadModal = this.toggleHeadModal,\n          selectHead = this.selectHead,\n          openHeadModal = this.openHeadModal,\n          create = this.create;\n      var _this$state3 = this.state,\n          accountType = _this$state3.accountType,\n          head = _this$state3.head,\n          accHead = _this$state3.accHead,\n          headCode = _this$state3.headCode,\n          description = _this$state3.description,\n          amount = _this$state3.amount,\n          headList = _this$state3.headList,\n          headModalIsOpen = _this$state3.headModalIsOpen;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, ' ', React.createElement(Card, {\n        className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Services Form\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-4 col-sm-3 col-md-2 col-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Create\", ' '), React.createElement(\"div\", {\n        className: \"col-lg-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"head\",\n        name: \"accountType\",\n        value: \"head\",\n        checked: accountType === 'head',\n        onChange: onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), ' ', React.createElement(\"label\", {\n        htmlFor: \"head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Head\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"offset-md-2 col-lg-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"sub-head\",\n        name: \"accountType\",\n        value: \"sub-head\",\n        checked: accountType === 'sub-head',\n        onChange: onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), ' ', React.createElement(\"label\", {\n        htmlFor: \"sub-head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Sub-Head\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), accountType && React.createElement(React.Fragment, null, accountType === 'sub-head' && React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-3 col-sm-3 col-md-2 col-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Head:\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"head\",\n        value: head,\n        placeholder: \"please select a head\",\n        className: \"form-control col-xs-12 col-sm-12 col-md-4 col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        onClick: openHeadModal,\n        style: {\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(FaCaretUp, {\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-3 col-sm-3 col-md-2 col-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, accountType === 'sub-head' ? 'Sub Account' : 'Account Head'), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"accHead\",\n        className: \"form-control col-xs-12 col-sm-12 col-md-4 col-lg-4\",\n        onChange: onInputChange,\n        value: accHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), accountType === 'head' && React.createElement(React.Fragment, null, React.createElement(\"label\", {\n        className: \"col-xs-3 col-sm-3 col-md-2 col-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Head Code\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"headCode\",\n        className: \"form-control col-xs-12 col-sm-12 col-md-4 col-lg-4\",\n        onChange: onInputChange,\n        value: headCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, accountType === 'head' && React.createElement(React.Fragment, null, React.createElement(\"label\", {\n        className: \"col-xs-3 col-sm-3 col-md-2 col-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        name: \"description\",\n        className: \"form-control col-xs-12 col-sm-12 col-md-4 col-lg-4\",\n        onChange: onInputChange,\n        value: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"col-xs-3 col-sm-3 col-md-2 col-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Amount\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"amount\",\n        className: \"form-control col-xs-12 col-sm-12 col-md-4 col-lg-4\",\n        onChange: onInputChange,\n        value: amount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), ' ', React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"offset-md-4 btn btn-danger\",\n        onClick: function onClick() {\n          return _this2.setState({\n            accountType: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(\"button\", {\n        className: \"offset-md-2 btn btn-primary\",\n        onClick: create,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Create\")))), React.createElement(HeadModal, {\n        headModalIsOpen: headModalIsOpen,\n        toggleHeadModal: toggleHeadModal,\n        headList: headList,\n        selectHead: selectHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ServicesSetupForm;\n}(Component);\n\nexport { ServicesSetupForm as default };\n\nvar HeadModal = function HeadModal(_ref) {\n  var _ref$headModalIsOpen = _ref.headModalIsOpen,\n      headModalIsOpen = _ref$headModalIsOpen === void 0 ? false : _ref$headModalIsOpen,\n      _ref$toggleHeadModal = _ref.toggleHeadModal,\n      toggleHeadModal = _ref$toggleHeadModal === void 0 ? function (f) {\n    return f;\n  } : _ref$toggleHeadModal,\n      _ref$headList = _ref.headList,\n      headList = _ref$headList === void 0 ? [] : _ref$headList,\n      _ref$selectHead = _ref.selectHead,\n      selectHead = _ref$selectHead === void 0 ? function (f) {\n    return f;\n  } : _ref$selectHead;\n  return React.createElement(Modal, {\n    isOpen: headModalIsOpen,\n    toggle: toggleHeadModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggleHeadModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(Table, {\n    bordered: true,\n    hover: true,\n    responsive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"S/N\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"Head\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, headList.map(function (head, i) {\n    return React.createElement(\"tr\", {\n      key: i,\n      onClick: function onClick() {\n        return selectHead(head);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, i + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, head.head));\n  })))));\n};","map":{"version":3,"sources":["/root/Desktop/bits-his/src/components/Account Module/ServicesSetupForm.js"],"names":["React","Component","Form","FormGroup","Card","CardHeader","CardBody","Table","Modal","ModalHeader","ModalBody","FaCaretUp","ServicesSetupForm","props","onInputChange","e","setState","target","name","value","toggleHeadModal","prevState","headModalIsOpen","selectHead","head","selectedHead","openHeadModal","create","preventDefault","state","createSub","creatHead","resetForm","accHead","headCode","description","amount","data","console","log","sub","subCode","accountType","headList","cursor","HeadModal","f","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Form,\n  FormGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n} from 'reactstrap';\n\nimport {FaCaretUp} from 'react-icons/fa'\n\nexport default class ServicesSetupForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accountType: null,\n      head: null,\n      accHead: null,\n      headCode: null,\n      description: null,\n      amount: null,\n      headModalIsOpen: false,\n      headList: [],\n      selectedHead: null,\n    };\n  }\n\n  onInputChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  toggleHeadModal = () =>\n    this.setState(prevState => ({\n      headModalIsOpen: !prevState.headModalIsOpen,\n    }));\n\n  selectHead = head => this.setState({ selectedHead: head });\n\n  openHeadModal = () => {\n    this.toggleHeadModal();\n  };\n\n  create = e => {\n    e.preventDefault();\n    const { head } = this.state;\n    head ? this.createSub() : this.creatHead();\n    this.resetForm();\n  };\n\n  creatHead = () => {\n    const { accHead, headCode, description, amount } = this.state;\n    let data = { head: accHead, headCode, description, amount };\n    console.log(data);\n  };\n\n  createSub = () => {\n    const { head, accHead, headCode, description, amount } = this.state;\n    let data = { head, sub: accHead, subCode: headCode, description, amount };\n    console.log(data);\n  };\n\n  resetForm = () => {\n    this.setState({\n      accountType: null,\n      head: null,\n      accHead: null,\n      headCode: null,\n      description: null,\n      amount:null\n    });\n  };\n\n  render() {\n    const {\n      onInputChange,\n      toggleHeadModal,\n      selectHead,\n      openHeadModal,\n      create,\n    } = this;\n    const {\n      accountType,\n      head,\n      accHead,\n      headCode,\n      description,\n      amount,\n      headList,\n      headModalIsOpen,\n    } = this.state;\n    return (\n      <div>\n        {' '}\n        <Card className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <CardHeader>Services Form</CardHeader>\n          <CardBody>\n            <form>\n              <div className=\"row\">\n                <label className=\"col-xs-4 col-sm-3 col-md-2 col-lg-2\">\n                  Create{' '}\n                </label>\n                {/* <br /> */}\n                <div className=\"col-lg-3\">\n                  <input\n                    type=\"radio\"\n                    id=\"head\"\n                    name=\"accountType\"\n                    value=\"head\"\n                    checked={accountType === 'head'}\n                    onChange={onInputChange}\n                  />{' '}\n                  <label htmlFor=\"head\">Head</label>\n                </div>\n              </div>\n              {/* <br /> */}\n              <div className=\"row\">\n                <div className=\"offset-md-2 col-lg-3\">\n                  <input\n                    type=\"radio\"\n                    id=\"sub-head\"\n                    name=\"accountType\"\n                    value=\"sub-head\"\n                    checked={accountType === 'sub-head'}\n                    onChange={onInputChange}\n                  />{' '}\n                  <label htmlFor=\"sub-head\">Sub-Head</label>\n                </div>\n              </div>\n              <hr />\n              {accountType && (\n                <>\n                  {accountType === 'sub-head' && (\n                    <FormGroup row>\n                      <label className=\"col-xs-3 col-sm-3 col-md-2 col-lg-2\">\n                        Head:\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"head\"\n                        value={head}\n                        placeholder=\"please select a head\"\n                        className=\"form-control col-xs-12 col-sm-12 col-md-4 col-lg-4\"\n                      />\n                      <span\n                        onClick={openHeadModal}\n                        style={{ cursor: 'pointer' }}>\n                        <FaCaretUp size={30} />\n                      </span>\n                    </FormGroup>\n                  )}\n                  <FormGroup row>\n                    <label className=\"col-xs-3 col-sm-3 col-md-2 col-lg-2\">\n                      {accountType === 'sub-head'\n                        ? 'Sub Account'\n                        : 'Account Head'}\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"accHead\"\n                      className=\"form-control col-xs-12 col-sm-12 col-md-4 col-lg-4\"\n                      onChange={onInputChange}\n                      value={accHead}\n                    />\n                    {accountType === 'head' && (\n                      <>\n                        <label className=\"col-xs-3 col-sm-3 col-md-2 col-lg-2\">\n                          Head Code\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"headCode\"\n                          className=\"form-control col-xs-12 col-sm-12 col-md-4 col-lg-4\"\n                          onChange={onInputChange}\n                          value={headCode}\n                        />\n                      </>\n                    )}\n                  </FormGroup>\n                  <FormGroup row>\n                    {accountType === 'head' && (\n                      <>\n                        <label className=\"col-xs-3 col-sm-3 col-md-2 col-lg-2\">\n                          Description:\n                        </label>\n                        <textarea\n                          type=\"text\"\n                          name=\"description\"\n                          className=\"form-control col-xs-12 col-sm-12 col-md-4 col-lg-4\"\n                          onChange={onInputChange}\n                          value={description}\n                        />\n                      </>\n                    )}\n                    <label className=\"col-xs-3 col-sm-3 col-md-2 col-lg-2\">\n                      Amount\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"amount\"\n                      className=\"form-control col-xs-12 col-sm-12 col-md-4 col-lg-4\"\n                      onChange={onInputChange}\n                      value={amount}\n                    />\n                  </FormGroup>{' '}\n                  <FormGroup>\n                    <button\n                      className=\"offset-md-4 btn btn-danger\"\n                      onClick={() => this.setState({ accountType: null })}>\n                      Cancel\n                    </button>\n                    <button\n                      className=\"offset-md-2 btn btn-primary\"\n                      onClick={create}>\n                      Create\n                    </button>\n                  </FormGroup>\n                </>\n              )}\n            </form>\n\n            <HeadModal\n              headModalIsOpen={headModalIsOpen}\n              toggleHeadModal={toggleHeadModal}\n              headList={headList}\n              selectHead={selectHead}\n            />\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst HeadModal = ({\n  headModalIsOpen = false,\n  toggleHeadModal = f => f,\n  headList = [],\n  selectHead = f => f,\n}) => (\n  <Modal isOpen={headModalIsOpen} toggle={toggleHeadModal}>\n    <ModalHeader toggle={toggleHeadModal} />\n    <ModalBody>\n      <Table bordered hover responsive>\n        <thead>\n          <tr>\n            <th>S/N</th>\n            <th>Head</th>\n          </tr>\n        </thead>\n        <tbody>\n          {headList.map((head, i) => (\n            <tr key={i} onClick={() => selectHead(head)}>\n              <td>{i + 1}</td>\n              <td>{head.head}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </ModalBody>\n  </Modal>\n);\n"]},"metadata":{},"sourceType":"module"}