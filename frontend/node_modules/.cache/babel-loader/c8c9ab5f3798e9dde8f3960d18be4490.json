{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _foundationalStyles = require(\"./foundational-styles\");\n\nvar _typography = require(\"./typography\");\n\nvar _componentSpecific = require(\"./component-specific\");\n\nvar _themeHelpers = require(\"./theme-helpers\");\n/**\n * Theme\n * ---\n * The theme object is used to style Evergreen.\n * It is passed into the  `<ThemeProvider theme={theme} />`.\n * ----\n * You can use this as a template for your own themes.\n */\n\n/**\n * Foundational Styles.\n * ---\n * The following properties are NOT REQUIRED by Evergreen.\n * It's exposed for convenience and documentation.\n */\n\n/**\n * Typography.\n * ---\n * The following properties are NOT REQUIRED by Evergreen.\n * It's exposed for convenience and documentation.\n */\n\n/**\n * Component Specific.\n * ---\n * These ARE REQUIRED for Evergreen to work.\n */\n\n/**\n * Theme Helpers.\n * ---\n * These ARE REQUIRED for Evergreen to work.\n */\n\n\nvar _default = {\n  // Foundational Styles.\n  colors: _foundationalStyles.colors,\n  elevations: _foundationalStyles.elevations,\n  fills: _foundationalStyles.fills,\n  palette: _foundationalStyles.palette,\n  scales: _foundationalStyles.scales,\n  // Component Specific.\n  avatarColors: _componentSpecific.avatarColors,\n  badgeColors: _componentSpecific.badgeColors,\n  spinnerColor: _componentSpecific.spinnerColor,\n  overlayBackgroundColor: _componentSpecific.overlayBackgroundColor,\n  getButtonClassName: _componentSpecific.getButtonClassName,\n  getLinkClassName: _componentSpecific.getLinkClassName,\n  getCheckboxClassName: _componentSpecific.getCheckboxClassName,\n  getRadioClassName: _componentSpecific.getRadioClassName,\n  getTextInputClassName: _componentSpecific.getTextInputClassName,\n  getTextareaClassName: _componentSpecific.getTextareaClassName,\n  getTextDropdownButtonClassName: _componentSpecific.getTextDropdownButtonClassName,\n  getTabClassName: _componentSpecific.getTabClassName,\n  getTableCellClassName: _componentSpecific.getTableCellClassName,\n  getTooltipProps: _componentSpecific.getTooltipProps,\n  getRowClassName: _componentSpecific.getRowClassName,\n  getMenuItemClassName: _componentSpecific.getMenuItemClassName,\n  getSelectClassName: _componentSpecific.getSelectClassName,\n  getSegmentedControlRadioClassName: _componentSpecific.getSegmentedControlRadioClassName,\n  getSwitchClassName: _componentSpecific.getSwitchClassName,\n  getAlertProps: _componentSpecific.getAlertProps,\n  getCodeProps: _componentSpecific.getCodeProps,\n  getAvatarProps: _componentSpecific.getAvatarProps,\n  getBadgeProps: _componentSpecific.getBadgeProps,\n  getAvatarInitialsFontSize: _componentSpecific.getAvatarInitialsFontSize,\n  // Theme Helpers.\n  getBorderRadiusForControlHeight: _themeHelpers.getBorderRadiusForControlHeight,\n  getTextSizeForControlHeight: _themeHelpers.getTextSizeForControlHeight,\n  getIconSizeForButton: _themeHelpers.getIconSizeForButton,\n  getIconSizeForInput: _themeHelpers.getIconSizeForInput,\n  getIconSizeForSelect: _themeHelpers.getIconSizeForSelect,\n  getIconSizeForIconButton: _themeHelpers.getIconSizeForIconButton,\n  getBackground: _themeHelpers.getBackground,\n  getElevation: _themeHelpers.getElevation,\n  getIconColor: _themeHelpers.getIconColor,\n  getIconForIntent: _themeHelpers.getIconForIntent,\n  getHeadingStyle: _themeHelpers.getHeadingStyle,\n  getTextStyle: _themeHelpers.getTextStyle,\n  getParagraphStyle: _themeHelpers.getParagraphStyle,\n  getFontFamily: _themeHelpers.getFontFamily,\n  getTextColor: _themeHelpers.getTextColor,\n  typography: {\n    headings: _typography.headings,\n    text: _typography.text,\n    fontFamilies: _typography.fontFamilies,\n    paragraph: _typography.paragraph\n  }\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}