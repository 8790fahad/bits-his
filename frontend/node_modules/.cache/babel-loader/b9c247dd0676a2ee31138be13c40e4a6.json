{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrimaryButtonStylesForIntent = exports.getLinearGradientWithStates = exports.getTextColorForIntent = exports.linearGradient = void 0;\n\nvar _tinycolor = _interopRequireDefault(require(\"tinycolor2\"));\n\nvar _constants = require(\"../../../constants\");\n\nvar _colors = _interopRequireDefault(require(\"./foundational-styles/colors\"));\n/**\n * @param {String} top - color.\n * @param {String} bottom - color.\n * @return {String} CSS background propery.\n */\n\n\nvar linearGradient = function linearGradient(top, bottom) {\n  return \"linear-gradient(to bottom, \".concat(top, \", \").concat(bottom, \")\");\n};\n/**\n * @param {Intent} intent\n * @return {String} color\n */\n\n\nexports.linearGradient = linearGradient;\n\nvar getTextColorForIntent = function getTextColorForIntent(intent, defaultColor) {\n  switch (intent) {\n    case _constants.Intent.SUCCESS:\n      return _colors.default.text.success;\n\n    case _constants.Intent.DANGER:\n      return _colors.default.text.danger;\n\n    case _constants.Intent.WARNING:\n      return _colors.default.text.warning;\n\n    default:\n      return defaultColor || _colors.default.text.default;\n  }\n};\n/**\n * @param {String} startColor\n * @param {String} endColor\n * @param {Number} intensityMultiplier - Some colors need more darkening.\n */\n\n\nexports.getTextColorForIntent = getTextColorForIntent;\n\nvar getLinearGradientWithStates = function getLinearGradientWithStates(startColor, endColor) {\n  var intensityMultiplier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return {\n    base: linearGradient(startColor, endColor),\n    hover: linearGradient((0, _tinycolor.default)(startColor).darken(5 * intensityMultiplier).toString(), (0, _tinycolor.default)(endColor).darken(5 * intensityMultiplier).toString()),\n    active: linearGradient((0, _tinycolor.default)(endColor).darken(5 * intensityMultiplier).toString(), (0, _tinycolor.default)(endColor).darken(5 * intensityMultiplier).toString())\n  };\n};\n/**\n * Gradients in the default theme have a intentional hue shift.\n * @param {Intent} intent - intent of the gradient.\n * @return {Object} { base, hover, active }\n */\n\n\nexports.getLinearGradientWithStates = getLinearGradientWithStates;\n\nvar getPrimaryButtonStylesForIntent = function getPrimaryButtonStylesForIntent(intent) {\n  switch (intent) {\n    case _constants.Intent.SUCCESS:\n      {\n        var startColor = '#23C277';\n        var endColor = '#399D6C';\n        return {\n          linearGradient: getLinearGradientWithStates(startColor, endColor),\n          focusColor: (0, _tinycolor.default)(startColor).setAlpha(0.4).toString()\n        };\n      }\n\n    case _constants.Intent.WARNING:\n      {\n        var _startColor = '#EE9913';\n        var _endColor = '#D9822B';\n        return {\n          linearGradient: getLinearGradientWithStates(_startColor, _endColor),\n          focusColor: (0, _tinycolor.default)(_startColor).setAlpha(0.4).toString()\n        };\n      }\n\n    case _constants.Intent.DANGER:\n      {\n        var _startColor2 = '#EC4C47';\n        var _endColor2 = '#D64540';\n        return {\n          linearGradient: getLinearGradientWithStates(_startColor2, _endColor2),\n          focusColor: (0, _tinycolor.default)(_startColor2).setAlpha(0.4).toString()\n        };\n      }\n\n    default:\n      {\n        var _startColor3 = '#0788DE';\n        var _endColor3 = '#116AB8';\n        return {\n          linearGradient: getLinearGradientWithStates(_startColor3, _endColor3),\n          focusColor: (0, _tinycolor.default)(_startColor3).setAlpha(0.4).toString()\n        };\n      }\n  }\n};\n\nexports.getPrimaryButtonStylesForIntent = getPrimaryButtonStylesForIntent;","map":null,"metadata":{},"sourceType":"script"}