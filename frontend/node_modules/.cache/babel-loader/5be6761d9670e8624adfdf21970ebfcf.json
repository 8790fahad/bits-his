{"ast":null,"code":"import _classCallCheck from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Desktop/bits-his/frontend/src/components/Pharmacy Module/PendingPharmacyRequest.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, Input, Table } from 'reactstrap';\nimport FreeScrollBar from 'react-free-scrollbar';\nimport Notifications from 'react-notify-toast';\nimport Loading from '../loading';\nimport { _fetchData, _customNotify } from '../helpers';\n\nvar PendingPharmacyRequest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PendingPharmacyRequest, _Component);\n\n  function PendingPharmacyRequest(props) {\n    var _this;\n\n    _classCallCheck(this, PendingPharmacyRequest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PendingPharmacyRequest).call(this, props));\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    _this.onPrescriptionClick = function (patient) {\n      var currentDrug = Object.assign({}, _this.state.currentDrug, patient);\n\n      _this.props.getDetails(currentDrug);\n\n      _this.setState({\n        currentDrug: currentDrug\n      });\n    };\n\n    _this.dispenseDrugs = function (drugs) {\n      _customNotify('Drug(s) dispensed successfully!');\n\n      _this.toggle();\n\n      console.log(drugs);\n    };\n\n    _this.onSearchTermChange = function (searchTerm) {\n      _this.setState({\n        searchTerm: searchTerm\n      });\n    };\n\n    _this.state = {\n      modal: false,\n      pendingPatientRequests: [],\n      currentDrug: {},\n      searchTerm: '',\n      error: ''\n    };\n    return _this;\n  }\n\n  _createClass(PendingPharmacyRequest, [{\n    key: \"fetchData\",\n    value: function fetchData() {\n      var _this2 = this;\n\n      var route = 'prescriptionrequests/pendingRequests';\n\n      var success_callback = function success_callback(data) {\n        return _this2.setState({\n          pendingPatientRequests: data\n        });\n      };\n\n      var error_callback = function error_callback(err) {\n        return _this2.setState({\n          error: err\n        });\n      };\n\n      _fetchData({\n        route: route,\n        success_callback: success_callback,\n        error_callback: error_callback\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          pendingPatientRequests = _this$state.pendingPatientRequests,\n          error = _this$state.error;\n      var rows = [];\n      pendingPatientRequests.forEach(function (patient, i) {\n        if (patient.id.toString().indexOf(_this3.state.searchTerm) === -1) return;\n        rows.push(React.createElement(\"tr\", {\n          key: i,\n          onClick: function onClick() {\n            return _this3.onPrescriptionClick(patient);\n          },\n          style: {\n            cursor: 'pointer'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, patient.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, patient.surname, \" \", patient.firstname), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, patient.gender)));\n      });\n      return React.createElement(\"div\", {\n        className: \" \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Notifications, {\n        options: {\n          zIndex: 200,\n          top: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Card, {\n        className: \"border-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Pending Pharmacy Request\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Search request by patient's id\",\n        value: this.state.searchTerm,\n        onChange: function onChange(e) {\n          return _this3.onSearchTermChange(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: '45vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(FreeScrollBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, !pendingPatientRequests.length ? !error.length ? React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        className: \"text-center danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"No record found\")) : React.createElement(Table, {\n        bordered: true,\n        striped: true,\n        hover: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Patient ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Gender\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, rows)), error.length ? React.createElement(\"p\", {\n        className: \"alert alert-danger text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, error) : null)))));\n    }\n  }]);\n\n  return PendingPharmacyRequest;\n}(Component);\n\nexport default PendingPharmacyRequest;","map":{"version":3,"sources":["/root/Desktop/bits-his/frontend/src/components/Pharmacy Module/PendingPharmacyRequest.js"],"names":["React","Component","Card","CardBody","Input","Table","FreeScrollBar","Notifications","Loading","_fetchData","_customNotify","PendingPharmacyRequest","props","toggle","setState","prevState","modal","onPrescriptionClick","patient","currentDrug","Object","assign","state","getDetails","dispenseDrugs","drugs","console","log","onSearchTermChange","searchTerm","pendingPatientRequests","error","route","success_callback","data","error_callback","err","fetchData","rows","forEach","i","id","toString","indexOf","push","cursor","surname","firstname","gender","zIndex","top","e","target","value","width","height","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, Input, Table } from 'reactstrap';\nimport FreeScrollBar from 'react-free-scrollbar';\nimport Notifications from 'react-notify-toast';\nimport Loading from '../loading';\nimport { _fetchData, _customNotify } from '../helpers';\n\nclass PendingPharmacyRequest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modal: false,\n      pendingPatientRequests: [],\n      currentDrug: {},\n      searchTerm: '',\n      error: '',\n    };\n  }\n\n  fetchData() {\n    let route = 'prescriptionrequests/pendingRequests';\n    let success_callback = data =>\n      this.setState({ pendingPatientRequests: data });\n    let error_callback = err => this.setState({ error: err });\n    _fetchData({ route, success_callback, error_callback });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  onPrescriptionClick = patient => {\n    const currentDrug = Object.assign({}, this.state.currentDrug, patient);\n    this.props.getDetails(currentDrug);\n    this.setState({ currentDrug });\n  };\n\n  dispenseDrugs = drugs => {\n    _customNotify('Drug(s) dispensed successfully!');\n    this.toggle();\n    console.log(drugs);\n  };\n\n  onSearchTermChange = searchTerm => {\n    this.setState({ searchTerm });\n  };\n\n  render() {\n    const { pendingPatientRequests, error } = this.state;\n\n    const rows = [];\n\n    pendingPatientRequests.forEach((patient, i) => {\n      if (patient.id.toString().indexOf(this.state.searchTerm) === -1) return;\n\n      rows.push(\n        <tr\n          key={i}\n          onClick={() => this.onPrescriptionClick(patient)}\n          style={{ cursor: 'pointer' }}>\n          <td>{patient.id}</td>\n          <td>\n            {patient.surname} {patient.firstname}\n          </td>\n          <td>{patient.gender}</td>\n        </tr>\n      );\n    });\n    return (\n      <div className=\" \">\n        <Notifications options={{ zIndex: 200, top: '50px' }} />\n        <Card className=\"border-secondary\">\n          <h6 className=\"text-center\">Pending Pharmacy Request</h6>\n          <CardBody>\n            <div className=\"row\">\n              <Input\n                placeholder=\"Search request by patient's id\"\n                value={this.state.searchTerm}\n                onChange={e => this.onSearchTermChange(e.target.value)}\n              />\n            </div>\n            <div style={{ width: '100%', height: '45vh' }}>\n              <FreeScrollBar>\n                {!pendingPatientRequests.length ? (\n                  !error.length ? (\n                    <Loading />\n                  ) : (\n                    <p className=\"text-center danger\">\n                      <em>No record found</em>\n                    </p>\n                  )\n                ) : (\n                  <Table bordered striped hover responsive>\n                    <thead>\n                      <tr>\n                        <th>Patient ID</th>\n                        <th>Full Name</th>\n                        <th>Gender</th>\n                      </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                  </Table>\n                )}\n                {error.length ? (\n                  <p className=\"alert alert-danger text-center\">{error}</p>\n                ) : null}\n              </FreeScrollBar>\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default PendingPharmacyRequest;\n"]},"metadata":{},"sourceType":"module"}