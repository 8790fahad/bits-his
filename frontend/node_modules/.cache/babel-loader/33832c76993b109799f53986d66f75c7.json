{"ast":null,"code":"import _defineProperty from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Desktop/bits-his/frontend/src/components/Lab Module/PrintResult.js\";\nimport React, { Component } from 'react';\nimport { _fetchData } from '../helpers';\nimport { Table, Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\nimport Result from './TestResult';\n\nvar PrintResult =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PrintResult, _Component);\n\n  function PrintResult() {\n    var _this;\n\n    _classCallCheck(this, PrintResult);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PrintResult).call(this));\n\n    _this.onInputChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.getTest = function () {\n      var patientId = _this.state.patientId;\n\n      _this.fetchData(patientId);\n    };\n\n    _this.toggleResultModal = function () {\n      return _this.setState(function (prevState) {\n        return {\n          resultModalOpen: !prevState.resultModalOpen\n        };\n      });\n    };\n\n    _this.onCheckResultClick = function (result) {\n      _this.toggleResultModal();\n\n      _this.setState({\n        resultToView: result\n      });\n    };\n\n    _this.state = {\n      patientId: '',\n      results: [],\n      resultModalOpen: false,\n      resultToView: {}\n    };\n    return _this;\n  }\n\n  _createClass(PrintResult, [{\n    key: \"fetchData\",\n    value: function fetchData(id) {\n      var self = this; // let { id } = this.state;\n\n      var route = \"lab/fetchResult?id=\".concat(id);\n\n      var success_callback = function success_callback(data) {\n        self.setState({\n          results: data\n        }); // console.log(data)\n      };\n\n      _fetchData({\n        route: route,\n        success_callback: success_callback\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          results = _this$state.results,\n          patientId = _this$state.patientId,\n          resultModalOpen = _this$state.resultModalOpen,\n          resultToView = _this$state.resultToView;\n      var toggleResultModal = this.toggleResultModal,\n          onCheckResultClick = this.onCheckResultClick;\n      var rows = [];\n      results.forEach(function (res, i) {\n        rows.push(React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, i + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, res.date.slice(0, 10)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, res.test), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, res.sample), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, res.result || res.appearance || res.microscopy || res.culture || res.antibiotic ? React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: function onClick() {\n            return onCheckResultClick(res);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Check\") : React.createElement(\"button\", {\n          className: \"btn\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Not Ready\"))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Print Lab Investigation Result\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Enter Patient ID\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"patientId\",\n        placeholder: \"Search by patient's ID\",\n        className: \"form-control col-xs-9 col-sm-9 col-md-9 col-lg-9\",\n        onChange: this.onInputChange,\n        value: patientId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-outline-primary col-xs-3 col-sm-3 col-md-3 col-lg-3\",\n        onClick: this.getTest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Get Tests\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), results.length ? React.createElement(Table, {\n        responsive: true,\n        hover: true,\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"S/N\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Test\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Sample\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Result\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, rows)) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"no data found\"), React.createElement(Modal, {\n        size: 'lg',\n        isOpen: resultModalOpen,\n        toggle: toggleResultModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: toggleResultModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Result\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Result, {\n        result: resultToView.result,\n        appearance: resultToView.appearance,\n        microscopy: resultToView.microscopy,\n        culture: resultToView.culture,\n        antibiotic: resultToView.antibiotic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Print\"), React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: toggleResultModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Close\"))));\n    }\n  }]);\n\n  return PrintResult;\n}(Component);\n\nexport { PrintResult as default };","map":{"version":3,"sources":["/root/Desktop/bits-his/frontend/src/components/Lab Module/PrintResult.js"],"names":["React","Component","_fetchData","Table","Modal","ModalBody","ModalHeader","ModalFooter","Result","PrintResult","onInputChange","e","setState","target","name","value","getTest","patientId","state","fetchData","toggleResultModal","prevState","resultModalOpen","onCheckResultClick","result","resultToView","results","id","self","route","success_callback","data","rows","forEach","res","i","push","date","slice","test","sample","appearance","microscopy","culture","antibiotic","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { _fetchData } from '../helpers';\nimport { Table, Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\nimport Result from './TestResult';\n\nexport default class PrintResult extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      patientId: '',\n      results: [],\n      resultModalOpen: false,\n      resultToView: {},\n    };\n  }\n\n  fetchData(id) {\n    let self = this;\n    // let { id } = this.state;\n    let route = `lab/fetchResult?id=${id}`;\n    let success_callback = data => {\n      self.setState({ results: data });\n      // console.log(data)\n    };\n    _fetchData({ route, success_callback });\n  }\n\n  onInputChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  getTest = () => {\n    const { patientId } = this.state;\n    this.fetchData(patientId);\n  };\n\n  toggleResultModal = () =>\n    this.setState(prevState => ({\n      resultModalOpen: !prevState.resultModalOpen,\n    }));\n\n  onCheckResultClick = result => {\n    this.toggleResultModal();\n    this.setState({ resultToView: result });\n  };\n\n  render() {\n    const { results, patientId, resultModalOpen, resultToView } = this.state;\n    const { toggleResultModal, onCheckResultClick } = this;\n    const rows = [];\n    results.forEach((res, i) => {\n      rows.push(\n        <tr key={i}>\n          <td>{i + 1}</td>\n          <td>{res.date.slice(0, 10)}</td>\n          <td>{res.test}</td>\n          <td>{res.sample}</td>\n          <td>\n            {res.result ||\n            res.appearance ||\n            res.microscopy ||\n            res.culture ||\n            res.antibiotic ? (\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => onCheckResultClick(res)}>\n                Check\n              </button>\n            ) : (\n              <button className=\"btn\" disabled>\n                Not Ready\n              </button>\n            )}\n          </td>\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <h3>Print Lab Investigation Result</h3>\n        <hr />\n        <div>\n          <label>Enter Patient ID</label>\n          <div className=\"row\">\n            <input\n              name=\"patientId\"\n              placeholder=\"Search by patient's ID\"\n              className=\"form-control col-xs-9 col-sm-9 col-md-9 col-lg-9\"\n              onChange={this.onInputChange}\n              value={patientId}\n            />\n\n            <button\n              className=\"btn btn-outline-primary col-xs-3 col-sm-3 col-md-3 col-lg-3\"\n              onClick={this.getTest}>\n              Get Tests\n            </button>\n          </div>\n        </div>\n        <hr />\n\n        {results.length ? (\n          <Table responsive hover bordered>\n            <thead>\n              <tr>\n                <th>S/N</th>\n                <th>Date</th>\n                <th>Test</th>\n                <th>Sample</th>\n                <th>Result</th>\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        ) : (\n          <p>no data found</p>\n        )}\n        <Modal size={'lg'} isOpen={resultModalOpen} toggle={toggleResultModal}>\n          <ModalHeader toggle={toggleResultModal}>Result</ModalHeader>\n          <ModalBody>\n            <Result\n              result={resultToView.result}\n              appearance={resultToView.appearance}\n              microscopy={resultToView.microscopy}\n              culture={resultToView.culture}\n              antibiotic={resultToView.antibiotic}\n            />\n          </ModalBody>\n\n          <ModalFooter>\n            <button className=\"btn btn-primary\">Print</button>\n            <button className=\"btn btn-danger\" onClick={toggleResultModal}>\n              Close\n            </button>\n          </ModalFooter>\n        </Modal>\n        {/* <button\n          className=\"btn btn-outline-success col-md-3 offset-md-5\"\n          onClick={this.fetchResult}>\n          Preview & Print\n        </button> */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}