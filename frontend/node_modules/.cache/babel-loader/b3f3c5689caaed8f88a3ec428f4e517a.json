{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/bits-his/frontend/src/components/Doctor Module/AssignedList.js\";\nimport React from 'react';\nimport { Card, Table } from 'reactstrap';\nimport FreeScrollBar from 'react-free-scrollbar';\nimport Loading from '../loading';\n\nfunction AssignedList(_ref) {\n  var error = _ref.error,\n      patientrecords = _ref.patientrecords,\n      toggle = _ref.toggle;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"border-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"List of Patients Assigned to you\"), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '50vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(FreeScrollBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, !patientrecords.length ? !error.length ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(\"p\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"No Record Found\")) : React.createElement(Table, {\n    bordered: true,\n    hover: true,\n    striped: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Number\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Name \"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, patientrecords.map(function (record) {\n    return React.createElement(\"tr\", {\n      style: {\n        cursor: 'pointer'\n      },\n      key: record.id,\n      onClick: function onClick() {\n        return toggle(record);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, record.date_assigned), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, record.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, record.firstname, \" \", record.surname));\n  }))), error.length ? React.createElement(\"p\", {\n    className: \"alert alert-danger text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, error) : null))));\n}\n\nexport default AssignedList;","map":{"version":3,"sources":["/root/Desktop/bits-his/frontend/src/components/Doctor Module/AssignedList.js"],"names":["React","Card","Table","FreeScrollBar","Loading","AssignedList","error","patientrecords","toggle","width","height","length","map","record","cursor","id","date_assigned","firstname","surname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,YAA5B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,SAASC,YAAT,OAAyD;AAAA,MAAjCC,KAAiC,QAAjCA,KAAiC;AAAA,MAA1BC,cAA0B,QAA1BA,cAA0B;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACvD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,cAAc,CAACI,MAAhB,GACC,CAACL,KAAK,CAACK,MAAP,GACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAGE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAJH,GASC,oBAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,OAAO,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,cAAc,CAACK,GAAf,CAAmB,UAAAC,MAAM;AAAA,WACxB;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADT;AAEE,MAAA,GAAG,EAAED,MAAM,CAACE,EAFd;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMP,MAAM,CAACK,MAAD,CAAZ;AAAA,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,MAAM,CAACG,aAAZ,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,MAAM,CAACE,EAAZ,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,MAAM,CAACI,SADV,OACsBJ,MAAM,CAACK,OAD7B,CANF,CADwB;AAAA,GAAzB,CADH,CARF,CAVJ,EAkCGZ,KAAK,CAACK,MAAN,GACC;AAAG,IAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CL,KAA/C,CADD,GAEG,IApCN,CADF,CAFF,CAFF,CADF;AAgDD;;AAED,eAAeD,YAAf","sourcesContent":["import React from 'react';\nimport { Card, Table } from 'reactstrap';\nimport FreeScrollBar from 'react-free-scrollbar';\nimport Loading from '../loading';\n\nfunction AssignedList({ error, patientrecords, toggle }) {\n  return (\n    <div>\n      {/* <p className=\"text-center\">Doctor: <strong>{props.patientrecords[0].assigned_to}</strong></p> */}\n      <Card className=\"border-secondary\">\n        <h6 className=\"text-center\">List of Patients Assigned to you</h6>\n        <div style={{ width: '100%', height: '50vh' }}>\n          <FreeScrollBar>\n            {!patientrecords.length ? (\n              !error.length ? (\n                <Loading />\n              ) : (\n                <p className=\"text-center\">\n                  <em>No Record Found</em>\n                </p>\n              )\n            ) : (\n              <Table bordered hover striped>\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Number</th>\n                    <th>Name </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {patientrecords.map(record => (\n                    <tr\n                      style={{ cursor: 'pointer' }}\n                      key={record.id}\n                      onClick={() => toggle(record)}>\n                      <td>{record.date_assigned}</td>\n                      <td>{record.id}</td>\n                      <td>\n                        {record.firstname} {record.surname}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            )}\n            {error.length ? (\n              <p className=\"alert alert-danger text-center\">{error}</p>\n            ) : null}\n          </FreeScrollBar>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default AssignedList;\n"]},"metadata":{},"sourceType":"module"}