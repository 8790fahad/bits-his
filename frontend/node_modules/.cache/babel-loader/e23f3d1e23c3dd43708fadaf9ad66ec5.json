{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _glamor = require(\"glamor\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _constants = require(\"../../constants\");\n\nvar _Toast = _interopRequireDefault(require(\"./Toast\"));\n\nvar wrapperClass = (0, _glamor.css)({\n  maxWidth: 560,\n  margin: '0 auto',\n  top: 0,\n  left: 0,\n  right: 0,\n  position: 'fixed',\n  zIndex: _constants.StackingOrder.TOASTER,\n  pointerEvents: 'none'\n});\n\nvar ToastManager =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2.default)(ToastManager, _React$PureComponent);\n\n  function ToastManager(props, context) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ToastManager);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToastManager).call(this, props, context));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"getToasts\", function () {\n      return _this.state.toasts;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"closeAll\", function () {\n      _this.getToasts().forEach(function (toast) {\n        return toast.close();\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"notify\", function (title, settings) {\n      var instance = _this.createToastInstance(title, settings);\n\n      _this.setState(function (previousState) {\n        return {\n          toasts: [instance].concat((0, _toConsumableArray2.default)(previousState.toasts))\n        };\n      });\n\n      return instance;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"createToastInstance\", function (title, settings) {\n      var id = ++ToastManager.idCounter;\n      return {\n        id: id,\n        title: title,\n        description: settings.description,\n        hasCloseButton: settings.hasCloseButton || true,\n        duration: settings.duration || 5,\n        close: function close() {\n          return _this.closeToast(id);\n        },\n        intent: settings.intent\n      };\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"closeToast\", function (id) {\n      _this.setState(function (previousState) {\n        return {\n          toasts: previousState.toasts.map(function (toast) {\n            if (toast.id === id) {\n              return (0, _objectSpread2.default)({}, toast, {\n                isShown: false\n              });\n            }\n\n            return toast;\n          })\n        };\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"removeToast\", function (id) {\n      _this.setState(function (previousState) {\n        return {\n          toasts: previousState.toasts.filter(function (toast) {\n            return toast.id !== id;\n          })\n        };\n      });\n    });\n    props.bindNotify(_this.notify);\n    props.bindGetToasts(_this.getToasts);\n    props.bindCloseAll(_this.closeAll);\n    _this.state = {\n      toasts: []\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ToastManager, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(\"span\", {\n        className: wrapperClass\n      }, this.state.toasts.map(function (_ref) {\n        var id = _ref.id,\n            description = _ref.description,\n            props = (0, _objectWithoutProperties2.default)(_ref, [\"id\", \"description\"]);\n        return _react.default.createElement(_Toast.default, (0, _extends2.default)({\n          key: id,\n          onRemove: function onRemove() {\n            return _this2.removeToast(id);\n          }\n        }, props), description);\n      }));\n    }\n  }]);\n  return ToastManager;\n}(_react.default.PureComponent);\n\nexports.default = ToastManager;\nToastManager.displayName = \"ToastManager\";\n(0, _defineProperty2.default)(ToastManager, \"propTypes\", {\n  /**\n   * Function called with the `this.notify` function.\n   */\n  bindNotify: _propTypes.default.func.isRequired,\n\n  /**\n   * Function called with the `this.getToasts` function.\n   */\n  bindGetToasts: _propTypes.default.func.isRequired,\n\n  /**\n   * Function called with the `this.closeAll` function.\n   */\n  bindCloseAll: _propTypes.default.func.isRequired\n});\n(0, _defineProperty2.default)(ToastManager, \"idCounter\", 0);","map":null,"metadata":{},"sourceType":"script"}