{"ast":null,"code":"import _classCallCheck from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Desktop/bits-his/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Desktop/bits-his/frontend/src/components/Lab Module/SampleReception.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardFooter, CardHeader, Table, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport { _fetchData } from '../helpers';\n\nvar SampleReception =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SampleReception, _Component);\n\n  function SampleReception(props) {\n    var _this;\n\n    _classCallCheck(this, SampleReception);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SampleReception).call(this, props));\n\n    _this.toggleProcessModal = function () {\n      return _this.setState(function (prevState) {\n        return {\n          processModalIsOpen: !prevState.processModalIsOpen\n        };\n      });\n    };\n\n    _this.onRequestClick = function () {\n      _this.toggleProcessModal();\n    };\n\n    _this.state = {\n      collectedSamples: [],\n      processModalIsOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(SampleReception, [{\n    key: \"fetchData\",\n    value: function fetchData() {\n      var _this2 = this;\n\n      var route = 'lab/getSampleCollected';\n\n      var success_callback = function success_callback(data) {\n        return _this2.setState({\n          collectedSamples: data\n        });\n      };\n\n      var error_callback = function error_callback(error) {\n        return _this2.setState({\n          error: error\n        });\n      };\n\n      _fetchData({\n        route: route,\n        success_callback: success_callback\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var rows = [];\n      this.state.collectedSamples.forEach(function (patient, i) {\n        rows.push(React.createElement(\"tr\", {\n          key: i,\n          onClick: _this3.onRequestClick,\n          style: {\n            cursor: 'pointer'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, i + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, patient.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, patient.surname, patient.firstname), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, patient.gender)));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Collected Samples\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Table, {\n        bordered: true,\n        striped: true,\n        hover: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"S/N\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Gender\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, rows)), React.createElement(Process, {\n        toggleProcessModal: this.toggleProcessModal,\n        processModalIsOpen: this.state.processModalIsOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SampleReception;\n}(Component);\n\nexport { SampleReception as default };\n\nvar Process = function Process(_ref) {\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      processModalIsOpen = _ref.processModalIsOpen,\n      _ref$toggleProcessMod = _ref.toggleProcessModal,\n      toggleProcessModal = _ref$toggleProcessMod === void 0 ? function (f) {\n    return f;\n  } : _ref$toggleProcessMod;\n  return React.createElement(Modal, {\n    isOpen: processModalIsOpen,\n    toggle: toggleProcessModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggleProcessModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Request List\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"S/N\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Sample\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Requesteh By\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Workbench\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Status\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, data.map(function (d, i) {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, i + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, d.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, d.sample), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, d.seen_by), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" - \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"sample_collected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Sample Collected\"), React.createElement(\"option\", {\n      value: \"sample_not_collected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Sample Not Recieved\"))));\n  })))));\n};","map":{"version":3,"sources":["/root/Desktop/bits-his/frontend/src/components/Lab Module/SampleReception.js"],"names":["React","Component","Card","CardBody","CardFooter","CardHeader","Table","Modal","ModalBody","ModalHeader","_fetchData","SampleReception","props","toggleProcessModal","setState","prevState","processModalIsOpen","onRequestClick","state","collectedSamples","route","success_callback","data","error_callback","error","fetchData","rows","forEach","patient","i","push","cursor","id","surname","firstname","gender","Process","f","map","d","date","sample","seen_by"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Table,\n  Modal,\n  ModalBody,\n  ModalHeader,\n} from 'reactstrap';\nimport { _fetchData } from '../helpers';\n\nexport default class SampleReception extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collectedSamples: [],\n      processModalIsOpen: false,\n    };\n  }\n\n  fetchData() {\n    let route = 'lab/getSampleCollected';\n    let success_callback = data => this.setState({ collectedSamples: data });\n    let error_callback = error => this.setState({ error })\n    _fetchData({ route, success_callback });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  toggleProcessModal = () =>\n    this.setState(prevState => ({\n      processModalIsOpen: !prevState.processModalIsOpen,\n    }));\n\n  onRequestClick = () => {\n    this.toggleProcessModal();\n  };\n\n  render() {\n    const rows = [];\n    this.state.collectedSamples.forEach((patient, i) => {\n      rows.push(\n        <tr key={i} onClick={this.onRequestClick} style={{ cursor: 'pointer' }}>\n          <td>{i + 1}</td>\n          <td>{patient.id}</td>\n          <td>{patient.surname}{patient.firstname}</td>\n          <td>{patient.gender}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <Card>\n          <CardHeader color=\"primary\">\n            <h4>Collected Samples</h4>\n          </CardHeader>\n          <CardBody>\n            <Table bordered striped hover responsive>\n              <thead>\n                <tr>\n                  <th>S/N</th>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Gender</th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n            <Process\n              toggleProcessModal={this.toggleProcessModal}\n              processModalIsOpen={this.state.processModalIsOpen}\n            />\n          </CardBody>\n          <CardFooter />\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst Process = ({\n  data = [],\n  processModalIsOpen,\n  toggleProcessModal = f => f,\n}) => {\n  return (\n    <Modal isOpen={processModalIsOpen} toggle={toggleProcessModal}>\n      <ModalHeader toggle={toggleProcessModal}>Request List</ModalHeader>\n      <ModalBody>\n      <Table>\n          <thead>\n            <tr>\n              <th>S/N</th>\n              <th>Date</th>\n              <th>Sample</th>\n              <th>Requesteh By</th>\n              <th>Workbench</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((d, i) => (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{d.date}</td>\n                <td>{d.sample}</td>\n                <td>{d.seen_by}</td>\n                <td> - </td>\n                <td>\n                  <select>\n                    <option value=\"sample_collected\">Sample Collected</option>\n                    <option value=\"sample_not_collected\">\n                      Sample Not Recieved\n                    </option>\n                  </select>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </ModalBody>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}