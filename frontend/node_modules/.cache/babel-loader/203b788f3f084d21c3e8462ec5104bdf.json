{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _themer = require(\"../../../../themer\");\n\nvar _memoizeClassName = _interopRequireDefault(require(\"../utils/memoizeClassName\"));\n\nvar _scales = _interopRequireDefault(require(\"../foundational-styles/scales\"));\n\nvar _helpers = require(\"../helpers\");\n\nvar _shared = require(\"../shared\");\n/**\n * Disabled styles are all the same for all buttons.\n */\n\n\nvar disabled = _shared.defaultControlStyles.disabled;\n/**\n * Get button appearance.\n * @param {string} appearance - default, primary, minimal.\n * @param {string} intent - none, success, warning, danger.\n * @return {Object} the appearance of the button.\n */\n\nvar getButtonAppearance = function getButtonAppearance(appearance, intent) {\n  switch (appearance) {\n    case 'primary':\n      {\n        var _getPrimaryButtonStyl = (0, _helpers.getPrimaryButtonStylesForIntent)(intent),\n            linearGradient = _getPrimaryButtonStyl.linearGradient,\n            focusColor = _getPrimaryButtonStyl.focusColor;\n\n        return _themer.Themer.createButtonAppearance({\n          disabled: disabled,\n          base: {\n            color: 'white',\n            backgroundColor: 'white',\n            backgroundImage: linearGradient.base,\n            boxShadow: \"inset 0 0 0 1px \".concat(_scales.default.neutral.N5A, \", inset 0 -1px 1px 0 \").concat(_scales.default.neutral.N2A)\n          },\n          hover: {\n            backgroundImage: linearGradient.hover\n          },\n          focus: {\n            boxShadow: \"0 0 0 3px \".concat(focusColor, \", inset 0 0 0 1px \").concat(_scales.default.neutral.N4A, \", inset 0 -1px 1px 0 \").concat(_scales.default.neutral.N5A)\n          },\n          active: {\n            backgroundImage: linearGradient.active,\n            boxShadow: \"inset 0 0 0 1px \".concat(_scales.default.neutral.N4A, \", inset 0 1px 1px 0 \").concat(_scales.default.neutral.N2A)\n          },\n          focusAndActive: {\n            boxShadow: \"0 0 0 3px \".concat(focusColor, \", inset 0 0 0 1px \").concat(_scales.default.neutral.N4A, \", inset 0 1px 1px 0 \").concat(_scales.default.neutral.N2A)\n          }\n        });\n      }\n\n    case 'minimal':\n      {\n        var intentTextColor = (0, _helpers.getTextColorForIntent)(intent, _scales.default.blue.B9);\n        return _themer.Themer.createButtonAppearance({\n          disabled: disabled,\n          base: {\n            color: intentTextColor,\n            backgroundColor: 'transparent'\n          },\n          hover: {\n            backgroundColor: _scales.default.neutral.N2A\n          },\n          focus: {\n            boxShadow: \"0 0 0 3px \".concat(_scales.default.blue.B5A)\n          },\n          active: {\n            backgroundImage: 'none',\n            backgroundColor: _scales.default.blue.B3A\n          },\n          focusAndActive: {}\n        });\n      }\n\n    case 'default':\n    default:\n      {\n        var _intentTextColor = (0, _helpers.getTextColorForIntent)(intent);\n\n        return _themer.Themer.createButtonAppearance({\n          disabled: disabled,\n          base: (0, _objectSpread2.default)({\n            color: _intentTextColor\n          }, _shared.defaultControlStyles.base),\n          hover: _shared.defaultControlStyles.hover,\n          focus: _shared.defaultControlStyles.focus,\n          active: _shared.defaultControlStyles.active,\n          focusAndActive: _shared.defaultControlStyles.focusAndActive\n        });\n      }\n  }\n};\n/**\n * Get the className of a `Button`|`IconButton`.\n * @param {string} appearance - default, primary, minimal.\n * @param {Intent} intent - none, success, warning, danger.\n * @return {string} the appearance class name.\n */\n\n\nvar _default = (0, _memoizeClassName.default)(getButtonAppearance);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}